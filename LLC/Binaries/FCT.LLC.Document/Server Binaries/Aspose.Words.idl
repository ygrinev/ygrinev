// Generated .IDL file (by the OLE/COM Object Viewer)
// 
// typelib filename: <could not determine filename>

[
  uuid(81BD596F-DAA9-3AF8-AAA5-1D0201005B35),
  version(8.0),
  helpstring("Aspose.Words"),
  custom(90883F05-3D28-11D2-8F17-00A0C9A6186D, Aspose.Words, Version=8.0.0.0, Culture=neutral, PublicKeyToken=716fcc553a201e56)

]
library Aspose_Words
{
    // TLib :     // TLib :  : {BEE4BFEC-6683-3E67-9167-3C0CBC68F40A}
    importlib("System.tlb");
    // TLib : System.Drawing.dll : {D37E2A3E-8545-3A39-9F4F-31827C9124AB}
    importlib("System.Drawing.tlb");
    // TLib : mscorlib.dll : {BED7F4EA-1A96-11D2-8F08-00A0C9A6186D}
    importlib("mscorlib.tlb");
    // TLib : OLE Automation : {00020430-0000-0000-C000-000000000046}
    importlib("stdole2.tlb");

    // Forward declare all types defined in this typelib
    interface INodeCollection;
    interface IMailMergeDataSource;
    interface IMailMergeDataSourceRoot;
    interface _DocumentVisitor;
    interface _Shading;
    interface _NodeCollection;
    interface _NodeChangedEventArgs;
    interface _Paragraph;
    interface _NodeChangedEventHandler;
    interface _TabStopCollection;
    interface _TabStop;
    interface _ListLevel;
    interface _Font;
    interface _StyleCollection;
    interface _Style;
    interface _List;
    interface _ListLevelCollection;
    interface _FontInfoCollection;
    interface _FontInfo;
    interface _ListCollection;
    interface _ParagraphFormat;
    interface _BorderCollection;
    interface _ListFormat;
    interface _Shape;
    interface _ShapeBase;
    interface _DropDownItemCollection;
    interface _ImageData;
    interface _ImageSize;
    interface _ConvertUtil;
    interface _FormField;
    interface _GroupShape;
    interface _OleFormat;
    interface _Stroke;
    interface _Fill;
    interface _TextBox;
    interface _TextPath;
    interface _Section;
    interface _SpecialChar;
    interface _MailMergeSettings;
    interface _Odso;
    interface _OdsoFieldMapDataCollection;
    interface _OdsoFieldMapData;
    interface _OdsoRecipientDataCollection;
    interface _OdsoRecipientData;
    interface _WriteProtection;
    interface _TextColumn;
    interface _CompatibilityOptions;
    interface _ViewOptions;
    interface _PageSetup;
    interface _TextColumnCollection;
    interface _FootnoteOptions;
    interface _ControlChar;
    interface _Run;
    interface _Body;
    interface _Story;
    interface _ParagraphCollection;
    interface _TableCollection;
    interface _Table;
    interface _RowCollection;
    interface _Row;
    interface _Inline;
    interface _Document;
    interface _DocumentBase;
    interface _RowFormat;
    interface _CellCollection;
    interface _Cell;
    interface _CellFormat;
    interface _HeaderFooterCollection;
    interface _HeaderFooter;
    interface _NodeImporter;
    interface _VariableCollection;
    interface _BuiltInDocumentProperties;
    interface _DocumentPropertyCollection;
    interface _DocumentProperty;
    interface _CustomDocumentProperties;
    interface _SaveOptions;
    interface _ExportImageSavingEventHandler;
    interface _ExportImageSavingEventArgs;
    interface _SmartTag;
    interface _CustomXmlPropertyCollection;
    interface _CustomXmlProperty;
    interface _UnsupportedFileFormatException;
    interface _IncorrectPasswordException;
    interface _CompositeNode;
    interface _Node;
    interface _Comment;
    interface _InlineStory;
    interface _FieldEnd;
    interface _FieldChar;
    interface _FieldStart;
    interface _FieldSeparator;
    interface _Field;
    interface _MailMerge;
    interface _MergeFieldEventHandler;
    interface _MergeFieldEventArgs;
    interface _MergeFieldEventArgsBase;
    interface _MergeImageFieldEventHandler;
    interface _MergeImageFieldEventArgs;
    interface _MappedDataFieldCollection;
    interface _DocumentBuilder;
    interface _Range;
    interface _Bookmark;
    interface _BookmarkStart;
    interface _BookmarkEnd;
    interface _BookmarkCollection;
    interface _Footnote;
    interface _SaveOutputParameters;
    interface _Border;
    interface _FormFieldCollection;
    interface _SectionCollection;
    interface _GlossaryDocument;
    interface _BuildingBlockCollection;
    interface _BuildingBlock;
    interface _RunCollection;
    interface _FileCorruptedException;
    interface _ReplaceEvaluator;
    interface _ReplaceEvaluatorArgs;
    interface _NodeList;
    interface _FileFormatUtil;
    interface _PdfOptions;
    interface _XpsOptions;
    interface _ImageOptions;
    interface _PageInfo;
    interface _AsposeWordsPrintDocument;
    interface _ComHelper;
    interface _License;

    [
      odl,
      uuid(22EEB8AC-2457-300F-A246-2D981B1120E4),
      version(1.0),
      dual,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.INodeCollection)    

    ]
    interface INodeCollection : IDispatch {
        [id(0x60020000), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
    };

    [
      odl,
      uuid(CF57E960-BBAA-3435-B524-7A4069659BC4),
      version(1.0),
      dual,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.IMailMergeDataSource)    

    ]
    interface IMailMergeDataSource : IDispatch {
        [id(0x60020000), propget]
        HRESULT TableName([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT MoveNext([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetValue(
                        [in] BSTR fieldName, 
                        [out] VARIANT* fieldValue, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020003)]
        HRESULT GetChildDataSource(
                        [in] BSTR TableName, 
                        [out, retval] IMailMergeDataSource** pRetVal);
    };

    [
      odl,
      uuid(6D61AFC5-3698-3183-AA17-A5C2DA9C6866),
      version(1.0),
      dual,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.IMailMergeDataSourceRoot)    

    ]
    interface IMailMergeDataSourceRoot : IDispatch {
        [id(0x60020000)]
        HRESULT GetDataSource(
                        [in] BSTR TableName, 
                        [out, retval] IMailMergeDataSource** pRetVal);
    };

    [
      uuid(1CFA7541-6305-3C9C-ADCF-57BE5B83B62A),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.DocumentVisitor)
    ]
    coclass DocumentVisitor {
        [default] interface _DocumentVisitor;
        interface _Object;
    };

    [
      uuid(CDFAE2ED-FC40-3E93-B574-284F89F59524),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Shading)
    ]
    coclass Shading {
        [default] interface _Shading;
        interface _Object;
    };

    [
      uuid(41D88B86-D959-3C1B-AE9C-5325BD6419ED),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeCollection)
    ]
    coclass NodeCollection {
        [default] interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    typedef [uuid(098B678A-A9CA-3412-A61C-CCBD80244D7F), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextureIndex)    
]
    enum {
        TextureIndex_Texture10Percent = 3,
        TextureIndex_Texture12Pt5Percent = 37,
        TextureIndex_Texture15Percent = 38,
        TextureIndex_Texture17Pt5Percent = 39,
        TextureIndex_Texture20Percent = 4,
        TextureIndex_Texture22Pt5Percent = 40,
        TextureIndex_Texture25Percent = 5,
        TextureIndex_Texture27Pt5Percent = 41,
        TextureIndex_Texture2Pt5Percent = 35,
        TextureIndex_Texture30Percent = 6,
        TextureIndex_Texture32Pt5Percent = 42,
        TextureIndex_Texture35Percent = 43,
        TextureIndex_Texture37Pt5Percent = 44,
        TextureIndex_Texture40Percent = 7,
        TextureIndex_Texture42Pt5Percent = 45,
        TextureIndex_Texture45Percent = 46,
        TextureIndex_Texture47Pt5Percent = 47,
        TextureIndex_Texture50Percent = 8,
        TextureIndex_Texture52Pt5Percent = 48,
        TextureIndex_Texture55Percent = 49,
        TextureIndex_Texture57Pt5Percent = 50,
        TextureIndex_Texture5Percent = 2,
        TextureIndex_Texture60Percent = 9,
        TextureIndex_Texture62Pt5Percent = 51,
        TextureIndex_Texture65Percent = 52,
        TextureIndex_Texture67Pt5Percent = 53,
        TextureIndex_Texture70Percent = 10,
        TextureIndex_Texture72Pt5Percent = 54,
        TextureIndex_Texture75Percent = 11,
        TextureIndex_Texture77Pt5Percent = 55,
        TextureIndex_Texture7Pt5Percent = 36,
        TextureIndex_Texture80Percent = 12,
        TextureIndex_Texture82Pt5Percent = 56,
        TextureIndex_Texture85Percent = 57,
        TextureIndex_Texture87Pt5Percent = 58,
        TextureIndex_Texture90Percent = 13,
        TextureIndex_Texture92Pt5Percent = 59,
        TextureIndex_Texture95Percent = 60,
        TextureIndex_Texture97Pt5Percent = 61,
        TextureIndex_TextureCross = 24,
        TextureIndex_TextureDarkCross = 18,
        TextureIndex_TextureDarkDiagonalCross = 19,
        TextureIndex_TextureDarkDiagonalDown = 16,
        TextureIndex_TextureDarkDiagonalUp = 17,
        TextureIndex_TextureDarkHorizontal = 14,
        TextureIndex_TextureDarkVertical = 15,
        TextureIndex_TextureDiagonalCross = 25,
        TextureIndex_TextureDiagonalDown = 22,
        TextureIndex_TextureDiagonalUp = 23,
        TextureIndex_TextureHorizontal = 20,
        TextureIndex_TextureNone = 0,
        TextureIndex_TextureSolid = 1,
        TextureIndex_TextureVertical = 21,
        TextureIndex_TextureNil = 65535
    } TextureIndex;

    [
      uuid(E46A6EE3-F802-3116-AA2F-508FE26CDF0E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeChangedEventArgs)
    ]
    coclass NodeChangedEventArgs {
        [default] interface _NodeChangedEventArgs;
        interface _Object;
    };

    [
      uuid(A8E796F9-E9B1-39FB-B911-F827B75E1DF7),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Paragraph)
    ]
    coclass Paragraph {
        [default] interface _Paragraph;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(FC96FEE4-514A-3A24-B179-70ECE5001C4F), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeChangedAction)    
]
    enum {
        NodeChangedAction_Insert = 0,
        NodeChangedAction_Remove = 1
    } NodeChangedAction;

    [
      uuid(20FEC18E-42EF-35E2-B656-6F8064DFE7A3),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeChangedEventHandler)
    ]
    coclass NodeChangedEventHandler {
        [default] interface _NodeChangedEventHandler;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    typedef [uuid(84316CAB-F1E1-301D-B8DF-E693CF319FF5), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ParagraphAlignment)    
]
    enum {
        ParagraphAlignment_Left = 0,
        ParagraphAlignment_Center = 1,
        ParagraphAlignment_Right = 2,
        ParagraphAlignment_Justify = 3,
        ParagraphAlignment_Distributed = 4
    } ParagraphAlignment;

    typedef [uuid(34930FF9-25AF-35DA-A4AD-A160B02DCDE1), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NumberStyle)    
]
    enum {
        NumberStyle_Arabic = 0,
        NumberStyle_UppercaseRoman = 1,
        NumberStyle_LowercaseRoman = 2,
        NumberStyle_UppercaseLetter = 3,
        NumberStyle_LowercaseLetter = 4,
        NumberStyle_Ordinal = 5,
        NumberStyle_Number = 6,
        NumberStyle_OrdinalText = 7,
        NumberStyle_Hex = 8,
        NumberStyle_ChicagoManual = 9,
        NumberStyle_Kanji = 10,
        NumberStyle_KanjiDigit = 11,
        NumberStyle_AiueoHalfWidth = 12,
        NumberStyle_IrohaHalfWidth = 13,
        NumberStyle_ArabicFullWidth = 14,
        NumberStyle_ArabicHalfWidth = 15,
        NumberStyle_KanjiTraditional = 16,
        NumberStyle_KanjiTraditional2 = 17,
        NumberStyle_NumberInCircle = 18,
        NumberStyle_DecimalFullWidth = 19,
        NumberStyle_Aiueo = 20,
        NumberStyle_Iroha = 21,
        NumberStyle_LeadingZero = 22,
        NumberStyle_Bullet = 23,
        NumberStyle_Ganada = 24,
        NumberStyle_Chosung = 25,
        NumberStyle_GB1 = 26,
        NumberStyle_GB2 = 27,
        NumberStyle_GB3 = 28,
        NumberStyle_GB4 = 29,
        NumberStyle_Zodiac1 = 30,
        NumberStyle_Zodiac2 = 31,
        NumberStyle_Zodiac3 = 32,
        NumberStyle_TradChinNum1 = 33,
        NumberStyle_TradChinNum2 = 34,
        NumberStyle_TradChinNum3 = 35,
        NumberStyle_TradChinNum4 = 36,
        NumberStyle_SimpChinNum1 = 37,
        NumberStyle_SimpChinNum2 = 38,
        NumberStyle_SimpChinNum3 = 39,
        NumberStyle_SimpChinNum4 = 40,
        NumberStyle_HanjaRead = 41,
        NumberStyle_HanjaReadDigit = 42,
        NumberStyle_Hangul = 43,
        NumberStyle_Hanja = 44,
        NumberStyle_Hebrew1 = 45,
        NumberStyle_Arabic1 = 46,
        NumberStyle_Hebrew2 = 47,
        NumberStyle_Arabic2 = 48,
        NumberStyle_HindiLetter1 = 49,
        NumberStyle_HindiLetter2 = 50,
        NumberStyle_HindiArabic = 51,
        NumberStyle_HindiCardinalText = 52,
        NumberStyle_ThaiLetter = 53,
        NumberStyle_ThaiArabic = 54,
        NumberStyle_ThaiCardinalText = 55,
        NumberStyle_VietCardinalText = 56,
        NumberStyle_NumberInDash = 57,
        NumberStyle_NumInDash = 57,
        NumberStyle_LowercaseRussian = 58,
        NumberStyle_UppercaseRussian = 59,
        NumberStyle_None = 255
    } NumberStyle;

    [
      uuid(BECC1029-5BD3-3734-95C3-024031C46351),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabStopCollection)
    ]
    coclass TabStopCollection {
        [default] interface _TabStopCollection;
        interface _Object;
    };

    [
      uuid(E2A0B76A-A595-3A19-BEA1-4E6DE51AB031),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabStop)
    ]
    coclass TabStop {
        [default] interface _TabStop;
        interface _Object;
    };

    typedef [uuid(11031E9B-FCB2-32E6-9685-26E697FE2774), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabAlignment)    
]
    enum {
        TabAlignment_Left = 0,
        TabAlignment_Center = 1,
        TabAlignment_Right = 2,
        TabAlignment_Decimal = 3,
        TabAlignment_Bar = 4,
        TabAlignment_List = 6,
        TabAlignment_Clear = 7
    } TabAlignment;

    typedef [uuid(0C1B8844-EA66-3700-B518-7695F468201B), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabLeader)    
]
    enum {
        TabLeader_None = 0,
        TabLeader_Dots = 1,
        TabLeader_Dashes = 2,
        TabLeader_Line = 3,
        TabLeader_Heavy = 4,
        TabLeader_MiddleDot = 5
    } TabLeader;

    typedef [uuid(22681E12-6160-38BE-B176-E6F29ED6BC06), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.LineSpacingRule)    
]
    enum {
        LineSpacingRule_AtLeast = 0,
        LineSpacingRule_Exactly = 1,
        LineSpacingRule_Multiple = 2
    } LineSpacingRule;

    typedef [uuid(93B7451D-415E-37E6-9467-4E3D6B333243), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.OutlineLevel)    
]
    enum {
        OutlineLevel_Level1 = 0,
        OutlineLevel_Level2 = 1,
        OutlineLevel_Level3 = 2,
        OutlineLevel_Level4 = 3,
        OutlineLevel_Level5 = 4,
        OutlineLevel_Level6 = 5,
        OutlineLevel_Level7 = 6,
        OutlineLevel_Level8 = 7,
        OutlineLevel_Level9 = 8,
        OutlineLevel_BodyText = 9
    } OutlineLevel;

    typedef [uuid(85A21735-CCA8-3E17-8296-560CD032CC6C), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.HorizontalAlignment)    
]
    enum {
        HorizontalAlignment_None = 0,
        HorizontalAlignment_Default = 0,
        HorizontalAlignment_Left = 1,
        HorizontalAlignment_Center = 2,
        HorizontalAlignment_Right = 3,
        HorizontalAlignment_Inside = 4,
        HorizontalAlignment_Outside = 5
    } HorizontalAlignment;

    typedef [uuid(4AFE2254-44AC-3965-BCB1-3E567F7D0BF6), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.VerticalAlignment)    
]
    enum {
        VerticalAlignment_None = 0,
        VerticalAlignment_Top = 1,
        VerticalAlignment_Center = 2,
        VerticalAlignment_Bottom = 3,
        VerticalAlignment_Inside = 4,
        VerticalAlignment_Outside = 5,
        VerticalAlignment_Inline = 0xffffffff,
        VerticalAlignment_Default = 0
    } VerticalAlignment;

    typedef [uuid(F73ABEC9-BE97-3910-8408-480D84A39109), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeightRule)    
]
    enum {
        HeightRule_AtLeast = 0,
        HeightRule_Exactly = 1,
        HeightRule_Auto = 2
    } HeightRule;

    typedef [uuid(64E9E3C7-0308-3B37-9227-6D0B9CFAA94F), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.RelativeHorizontalPosition)    
]
    enum {
        RelativeHorizontalPosition_Margin = 0,
        RelativeHorizontalPosition_Page = 1,
        RelativeHorizontalPosition_Column = 2,
        RelativeHorizontalPosition_Character = 3,
        RelativeHorizontalPosition_InsideMargin = 4,
        RelativeHorizontalPosition_OutsideMargin = 5,
        RelativeHorizontalPosition_LeftMargin = 6,
        RelativeHorizontalPosition_RightMargin = 7,
        RelativeHorizontalPosition_Default = 2
    } RelativeHorizontalPosition;

    typedef [uuid(077703CF-A5E4-3D5B-8648-F48422C77963), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.RelativeVerticalPosition)    
]
    enum {
        RelativeVerticalPosition_Margin = 0,
        RelativeVerticalPosition_Page = 1,
        RelativeVerticalPosition_Paragraph = 2,
        RelativeVerticalPosition_Line = 3,
        RelativeVerticalPosition_InsideMargin = 4,
        RelativeVerticalPosition_OutsideMargin = 5,
        RelativeVerticalPosition_TopMargin = 6,
        RelativeVerticalPosition_BottomMargin = 7,
        RelativeVerticalPosition_Default = 2
    } RelativeVerticalPosition;

    typedef [uuid(2E3B94A3-93D6-31A3-A17A-AAEAB23C89B2), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.WrapType)    
]
    enum {
        WrapType_None = 3,
        WrapType_Inline = 0,
        WrapType_TopBottom = 1,
        WrapType_Square = 2,
        WrapType_Tight = 4,
        WrapType_Through = 5
    } WrapType;

    typedef [uuid(9858952D-A0D2-3400-890C-4B0944B32F89), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextOrientation)    
]
    enum {
        TextOrientation_Horizontal = 0,
        TextOrientation_Downward = 1,
        TextOrientation_Upward = 3,
        TextOrientation_HorizontalRotatedFarEast = 4,
        TextOrientation_VerticalFarEast = 5
    } TextOrientation;

    [
      uuid(95D02482-51CC-32D7-9EED-189AB1D2EBBC),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListLevel)
    ]
    coclass ListLevel {
        [default] interface _ListLevel;
        interface _Object;
    };

    typedef [uuid(5833B169-E550-31E1-A47F-E0AE0B8C28C4), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListLevelAlignment)    
]
    enum {
        ListLevelAlignment_Left = 0,
        ListLevelAlignment_Center = 1,
        ListLevelAlignment_Right = 2
    } ListLevelAlignment;

    typedef [uuid(A542CBF0-FEBF-3DC8-97E2-7080ABD0C23F), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListTrailingCharacter)    
]
    enum {
        ListTrailingCharacter_Tab = 0,
        ListTrailingCharacter_Space = 1,
        ListTrailingCharacter_Nothing = 2
    } ListTrailingCharacter;

    [
      uuid(B1065989-4B56-3355-8F57-7E19CC82356A),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Font)
    ]
    coclass Font {
        [default] interface _Font;
        interface _Object;
    };

    [
      uuid(D03CD2BE-32E3-3B13-A7A8-666DE8ABA833),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.StyleCollection)
    ]
    coclass StyleCollection {
        [default] interface _StyleCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(957A0D45-93DF-3D71-BB7F-A3EF93EBCE0A), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.StyleIdentifier)    
]
    enum {
        StyleIdentifier_BookTitle = 264,
        StyleIdentifier_CommentReference = 39,
        StyleIdentifier_DefaultParagraphFont = 65,
        StyleIdentifier_Emphasis = 88,
        StyleIdentifier_EndnoteReference = 42,
        StyleIdentifier_FollowedHyperlink = 86,
        StyleIdentifier_FootnoteReference = 38,
        StyleIdentifier_HtmlAcronym = 95,
        StyleIdentifier_HtmlCite = 97,
        StyleIdentifier_HtmlCode = 98,
        StyleIdentifier_HtmlDefinition = 99,
        StyleIdentifier_HtmlKeyboard = 100,
        StyleIdentifier_HtmlSample = 102,
        StyleIdentifier_HtmlTypewriter = 103,
        StyleIdentifier_HtmlVariable = 104,
        StyleIdentifier_Hyperlink = 85,
        StyleIdentifier_IntenseEmphasis = 261,
        StyleIdentifier_IntenseReference = 263,
        StyleIdentifier_LineNumber = 40,
        StyleIdentifier_PageNumber = 41,
        StyleIdentifier_PlaceholderText = 156,
        StyleIdentifier_Strong = 87,
        StyleIdentifier_SubtleEmphasis = 260,
        StyleIdentifier_SubtleReference = 262,
        StyleIdentifier_BalloonText = 153,
        StyleIdentifier_BodyText = 66,
        StyleIdentifier_BodyText2 = 80,
        StyleIdentifier_BodyText3 = 81,
        StyleIdentifier_BodyText1I = 77,
        StyleIdentifier_BodyText1I2 = 78,
        StyleIdentifier_BodyTextInd = 67,
        StyleIdentifier_BodyTextInd2 = 82,
        StyleIdentifier_BodyTextInd3 = 83,
        StyleIdentifier_Closing = 63,
        StyleIdentifier_CommentSubject = 106,
        StyleIdentifier_CommentText = 30,
        StyleIdentifier_Date = 76,
        StyleIdentifier_DocumentMap = 89,
        StyleIdentifier_EmailSignature = 91,
        StyleIdentifier_EndnoteText = 43,
        StyleIdentifier_Footer = 32,
        StyleIdentifier_FootnoteText = 29,
        StyleIdentifier_Header = 31,
        StyleIdentifier_Heading1 = 1,
        StyleIdentifier_Heading2 = 2,
        StyleIdentifier_Heading3 = 3,
        StyleIdentifier_Heading4 = 4,
        StyleIdentifier_Heading5 = 5,
        StyleIdentifier_Heading6 = 6,
        StyleIdentifier_Heading7 = 7,
        StyleIdentifier_Heading8 = 8,
        StyleIdentifier_Heading9 = 9,
        StyleIdentifier_HtmlAddress = 96,
        StyleIdentifier_HtmlTopOfForm = 92,
        StyleIdentifier_HtmlBottomOfForm = 93,
        StyleIdentifier_HtmlPreformatted = 101,
        StyleIdentifier_IntenseQuote = 181,
        StyleIdentifier_Macro = 45,
        StyleIdentifier_MessageHeader = 73,
        StyleIdentifier_NoteHeading = 79,
        StyleIdentifier_PlainText = 90,
        StyleIdentifier_Quote = 180,
        StyleIdentifier_Salutation = 75,
        StyleIdentifier_Signature = 64,
        StyleIdentifier_Subtitle = 74,
        StyleIdentifier_Title = 62,
        StyleIdentifier_Bibliography = 265,
        StyleIdentifier_BlockText = 84,
        StyleIdentifier_Caption = 34,
        StyleIdentifier_EnvelopeAddress = 36,
        StyleIdentifier_EnvelopeReturn = 37,
        StyleIdentifier_Index1 = 10,
        StyleIdentifier_Index2 = 11,
        StyleIdentifier_Index3 = 12,
        StyleIdentifier_Index4 = 13,
        StyleIdentifier_Index5 = 14,
        StyleIdentifier_Index6 = 15,
        StyleIdentifier_Index7 = 16,
        StyleIdentifier_Index8 = 17,
        StyleIdentifier_Index9 = 18,
        StyleIdentifier_IndexHeading = 33,
        StyleIdentifier_List = 47,
        StyleIdentifier_List2 = 50,
        StyleIdentifier_List3 = 51,
        StyleIdentifier_List4 = 52,
        StyleIdentifier_List5 = 53,
        StyleIdentifier_ListBullet = 48,
        StyleIdentifier_ListBullet2 = 54,
        StyleIdentifier_ListBullet3 = 55,
        StyleIdentifier_ListBullet4 = 56,
        StyleIdentifier_ListBullet5 = 57,
        StyleIdentifier_ListContinue = 68,
        StyleIdentifier_ListContinue2 = 69,
        StyleIdentifier_ListContinue3 = 70,
        StyleIdentifier_ListContinue4 = 71,
        StyleIdentifier_ListContinue5 = 72,
        StyleIdentifier_ListNumber = 49,
        StyleIdentifier_ListNumber2 = 58,
        StyleIdentifier_ListNumber3 = 59,
        StyleIdentifier_ListNumber4 = 60,
        StyleIdentifier_ListNumber5 = 61,
        StyleIdentifier_ListParagraph = 179,
        StyleIdentifier_NoSpacing = 157,
        StyleIdentifier_Normal = 0,
        StyleIdentifier_NormalWeb = 94,
        StyleIdentifier_NormalIndent = 28,
        StyleIdentifier_TableOfAuthorities = 44,
        StyleIdentifier_TableOfFigures = 35,
        StyleIdentifier_ToaHeading = 46,
        StyleIdentifier_Toc1 = 19,
        StyleIdentifier_Toc2 = 20,
        StyleIdentifier_Toc3 = 21,
        StyleIdentifier_Toc4 = 22,
        StyleIdentifier_Toc5 = 23,
        StyleIdentifier_Toc6 = 24,
        StyleIdentifier_Toc7 = 25,
        StyleIdentifier_Toc8 = 26,
        StyleIdentifier_Toc9 = 27,
        StyleIdentifier_TocHeading = 266,
        StyleIdentifier_Revision = 178,
        StyleIdentifier_OutlineList1 = 108,
        StyleIdentifier_OutlineList2 = 109,
        StyleIdentifier_OutlineList3 = 110,
        StyleIdentifier_NoList = 107,
        StyleIdentifier_ColorfulGrid = 171,
        StyleIdentifier_ColorfulGridAccent1 = 189,
        StyleIdentifier_ColorfulGridAccent2 = 203,
        StyleIdentifier_ColorfulGridAccent3 = 217,
        StyleIdentifier_ColorfulGridAccent4 = 231,
        StyleIdentifier_ColorfulGridAccent5 = 245,
        StyleIdentifier_ColorfulGridAccent6 = 259,
        StyleIdentifier_ColorfulList = 170,
        StyleIdentifier_ColorfulListAccent1 = 188,
        StyleIdentifier_ColorfulListAccent2 = 202,
        StyleIdentifier_ColorfulListAccent3 = 216,
        StyleIdentifier_ColorfulListAccent4 = 230,
        StyleIdentifier_ColorfulListAccent5 = 244,
        StyleIdentifier_ColorfulListAccent6 = 258,
        StyleIdentifier_ColorfulShading = 169,
        StyleIdentifier_ColorfulShadingAccent1 = 187,
        StyleIdentifier_ColorfulShadingAccent2 = 201,
        StyleIdentifier_ColorfulShadingAccent3 = 215,
        StyleIdentifier_ColorfulShadingAccent4 = 229,
        StyleIdentifier_ColorfulShadingAccent5 = 243,
        StyleIdentifier_ColorfulShadingAccent6 = 257,
        StyleIdentifier_DarkList = 168,
        StyleIdentifier_DarkListAccent1 = 186,
        StyleIdentifier_DarkListAccent2 = 200,
        StyleIdentifier_DarkListAccent3 = 214,
        StyleIdentifier_DarkListAccent4 = 228,
        StyleIdentifier_DarkListAccent5 = 242,
        StyleIdentifier_DarkListAccent6 = 256,
        StyleIdentifier_LightGrid = 160,
        StyleIdentifier_LightGridAccent1 = 174,
        StyleIdentifier_LightGridAccent2 = 192,
        StyleIdentifier_LightGridAccent3 = 206,
        StyleIdentifier_LightGridAccent4 = 220,
        StyleIdentifier_LightGridAccent5 = 234,
        StyleIdentifier_LightGridAccent6 = 248,
        StyleIdentifier_LightList = 159,
        StyleIdentifier_LightListAccent1 = 173,
        StyleIdentifier_LightListAccent2 = 191,
        StyleIdentifier_LightListAccent3 = 205,
        StyleIdentifier_LightListAccent4 = 219,
        StyleIdentifier_LightListAccent5 = 233,
        StyleIdentifier_LightListAccent6 = 247,
        StyleIdentifier_LightShading = 158,
        StyleIdentifier_LightShadingAccent1 = 172,
        StyleIdentifier_LightShadingAccent2 = 190,
        StyleIdentifier_LightShadingAccent3 = 204,
        StyleIdentifier_LightShadingAccent4 = 218,
        StyleIdentifier_LightShadingAccent5 = 232,
        StyleIdentifier_LightShadingAccent6 = 246,
        StyleIdentifier_MediumGrid1 = 165,
        StyleIdentifier_MediumGrid1Accent1 = 183,
        StyleIdentifier_MediumGrid1Accent2 = 197,
        StyleIdentifier_MediumGrid1Accent3 = 211,
        StyleIdentifier_MediumGrid1Accent4 = 225,
        StyleIdentifier_MediumGrid1Accent5 = 239,
        StyleIdentifier_MediumGrid1Accent6 = 253,
        StyleIdentifier_MediumGrid2 = 166,
        StyleIdentifier_MediumGrid2Accent1 = 184,
        StyleIdentifier_MediumGrid2Accent2 = 198,
        StyleIdentifier_MediumGrid2Accent3 = 212,
        StyleIdentifier_MediumGrid2Accent4 = 226,
        StyleIdentifier_MediumGrid2Accent5 = 240,
        StyleIdentifier_MediumGrid2Accent6 = 254,
        StyleIdentifier_MediumGrid3 = 167,
        StyleIdentifier_MediumGrid3Accent1 = 185,
        StyleIdentifier_MediumGrid3Accent2 = 199,
        StyleIdentifier_MediumGrid3Accent3 = 213,
        StyleIdentifier_MediumGrid3Accent4 = 227,
        StyleIdentifier_MediumGrid3Accent5 = 241,
        StyleIdentifier_MediumGrid3Accent6 = 255,
        StyleIdentifier_MediumList1 = 163,
        StyleIdentifier_MediumList1Accent1 = 177,
        StyleIdentifier_MediumList1Accent2 = 195,
        StyleIdentifier_MediumList1Accent3 = 209,
        StyleIdentifier_MediumList1Accent4 = 223,
        StyleIdentifier_MediumList1Accent5 = 237,
        StyleIdentifier_MediumList1Accent6 = 251,
        StyleIdentifier_MediumList2 = 164,
        StyleIdentifier_MediumList2Accent1 = 182,
        StyleIdentifier_MediumList2Accent2 = 196,
        StyleIdentifier_MediumList2Accent3 = 210,
        StyleIdentifier_MediumList2Accent4 = 224,
        StyleIdentifier_MediumList2Accent5 = 238,
        StyleIdentifier_MediumList2Accent6 = 252,
        StyleIdentifier_MediumShading1 = 161,
        StyleIdentifier_MediumShading1Accent1 = 175,
        StyleIdentifier_MediumShading1Accent2 = 193,
        StyleIdentifier_MediumShading1Accent3 = 207,
        StyleIdentifier_MediumShading1Accent4 = 221,
        StyleIdentifier_MediumShading1Accent5 = 235,
        StyleIdentifier_MediumShading1Accent6 = 249,
        StyleIdentifier_MediumShading2 = 162,
        StyleIdentifier_MediumShading2Accent1 = 176,
        StyleIdentifier_MediumShading2Accent2 = 194,
        StyleIdentifier_MediumShading2Accent3 = 208,
        StyleIdentifier_MediumShading2Accent4 = 222,
        StyleIdentifier_MediumShading2Accent5 = 236,
        StyleIdentifier_MediumShading2Accent6 = 250,
        StyleIdentifier_Table3DEffects1 = 142,
        StyleIdentifier_Table3DEffects2 = 143,
        StyleIdentifier_Table3DEffects3 = 144,
        StyleIdentifier_TableClassic1 = 114,
        StyleIdentifier_TableClassic2 = 115,
        StyleIdentifier_TableClassic3 = 116,
        StyleIdentifier_TableClassic4 = 117,
        StyleIdentifier_TableColorful1 = 118,
        StyleIdentifier_TableColorful2 = 119,
        StyleIdentifier_TableColorful3 = 120,
        StyleIdentifier_TableColumns1 = 121,
        StyleIdentifier_TableColumns2 = 122,
        StyleIdentifier_TableColumns3 = 123,
        StyleIdentifier_TableColumns4 = 124,
        StyleIdentifier_TableColumns5 = 125,
        StyleIdentifier_TableContemporary = 145,
        StyleIdentifier_TableElegant = 146,
        StyleIdentifier_TableGrid = 154,
        StyleIdentifier_TableGrid1 = 126,
        StyleIdentifier_TableGrid2 = 127,
        StyleIdentifier_TableGrid3 = 128,
        StyleIdentifier_TableGrid4 = 129,
        StyleIdentifier_TableGrid5 = 130,
        StyleIdentifier_TableGrid6 = 131,
        StyleIdentifier_TableGrid7 = 132,
        StyleIdentifier_TableGrid8 = 133,
        StyleIdentifier_TableList1 = 134,
        StyleIdentifier_TableList2 = 135,
        StyleIdentifier_TableList3 = 136,
        StyleIdentifier_TableList4 = 137,
        StyleIdentifier_TableList5 = 138,
        StyleIdentifier_TableList6 = 139,
        StyleIdentifier_TableList7 = 140,
        StyleIdentifier_TableList8 = 141,
        StyleIdentifier_TableNormal = 105,
        StyleIdentifier_TableProfessional = 147,
        StyleIdentifier_TableSimple1 = 111,
        StyleIdentifier_TableSimple2 = 112,
        StyleIdentifier_TableSimple3 = 113,
        StyleIdentifier_TableSubtle1 = 148,
        StyleIdentifier_TableSubtle2 = 149,
        StyleIdentifier_TableTheme = 155,
        StyleIdentifier_TableWeb1 = 150,
        StyleIdentifier_TableWeb2 = 151,
        StyleIdentifier_TableWeb3 = 152,
        StyleIdentifier_User = 4094,
        StyleIdentifier_Nil = 4095
    } StyleIdentifier;

    [
      uuid(FBF53EE3-AFFF-3720-BCB3-752F5DDA1FA4),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Style)
    ]
    coclass Style {
        [default] interface _Style;
        interface _Object;
    };

    [
      uuid(9548BD9B-4A67-35ED-BB7B-DAC2BEDA5805),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.List)
    ]
    coclass List {
        [default] interface _List;
        interface _Object;
    };

    [
      uuid(403203AA-7FA2-3B7C-AEE2-82CA7B2CF403),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListLevelCollection)
    ]
    coclass ListLevelCollection {
        [default] interface _ListLevelCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(DD917B67-8B95-3389-9806-546C6720924D), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.LoadFormat)    
]
    enum {
        LoadFormat_Auto = 0,
        LoadFormat_Doc = 1,
        LoadFormat_Docx = 5,
        LoadFormat_FlatOpc = 8,
        LoadFormat_Rtf = 3,
        LoadFormat_WordML = 4,
        LoadFormat_Html = 2,
        LoadFormat_Mhtml = 7,
        LoadFormat_Odt = 6,
        LoadFormat_DocPreWord97 = 100,
        LoadFormat_DocEncrypted = 101,
        LoadFormat_OoxmlEncrypted = 102,
        LoadFormat_Unknown = 0x7fffffff
    } LoadFormat;

    [
      uuid(26C7CC15-8B96-3FC7-B2A8-889A4F658E2F),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fonts.FontInfoCollection)
    ]
    coclass FontInfoCollection {
        [default] interface _FontInfoCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(730C71FF-5F97-3557-BA62-5505091BF23F),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fonts.FontInfo)
    ]
    coclass FontInfo {
        [default] interface _FontInfo;
        interface _Object;
    };

    typedef [uuid(AB5B3759-30D8-31B3-8D37-BE921C46225B), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fonts.FontPitch)    
]
    enum {
        FontPitch_Default = 0,
        FontPitch_Fixed = 1,
        FontPitch_Variable = 2
    } FontPitch;

    typedef [uuid(7262F27A-70F9-332F-B46D-EA47BEA3B6D8), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fonts.FontFamily)    
]
    enum {
        FontFamily_Auto = 0,
        FontFamily_Roman = 1,
        FontFamily_Swiss = 2,
        FontFamily_Modern = 3,
        FontFamily_Script = 4,
        FontFamily_Decorative = 5
    } FontFamily;

    [
      uuid(B9D4FBE9-460F-31CF-A087-CDFDB6BB46C1),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListCollection)
    ]
    coclass ListCollection {
        [default] interface _ListCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(B28B3258-9319-36C3-BAE1-E7F1EA9229D0), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListTemplate)    
]
    enum {
        ListTemplate_BulletDefault = 0,
        ListTemplate_BulletDisk = 0,
        ListTemplate_BulletCircle = 1,
        ListTemplate_BulletSquare = 2,
        ListTemplate_BulletDiamonds = 3,
        ListTemplate_BulletArrowHead = 4,
        ListTemplate_BulletTick = 5,
        ListTemplate_NumberDefault = 6,
        ListTemplate_NumberArabicDot = 6,
        ListTemplate_NumberArabicParenthesis = 7,
        ListTemplate_NumberUppercaseRomanDot = 8,
        ListTemplate_NumberUppercaseLetterDot = 9,
        ListTemplate_NumberLowercaseLetterParenthesis = 10,
        ListTemplate_NumberLowercaseLetterDot = 11,
        ListTemplate_NumberLowercaseRomanDot = 12,
        ListTemplate_OutlineNumbers = 13,
        ListTemplate_OutlineLegal = 14,
        ListTemplate_OutlineBullets = 15,
        ListTemplate_OutlineHeadingsArticleSection = 16,
        ListTemplate_OutlineHeadingsLegal = 17,
        ListTemplate_OutlineHeadingsNumbers = 18,
        ListTemplate_OutlineHeadingsChapter = 19
    } ListTemplate;

    typedef [uuid(7FA47395-4749-3A4F-BEA5-30F1ED62FAAD), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.StyleType)    
]
    enum {
        StyleType_Paragraph = 1,
        StyleType_Character = 2,
        StyleType_Table = 3,
        StyleType_List = 4
    } StyleType;

    typedef [uuid(EFFE926A-62C5-3B84-9D88-6A2F3C8B94F6), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ImportFormatMode)    
]
    enum {
        ImportFormatMode_UseDestinationStyles = 0,
        ImportFormatMode_KeepSourceFormatting = 1
    } ImportFormatMode;

    [
      uuid(B6408709-AF70-3FF2-875E-1C732F569D5D),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ParagraphFormat)
    ]
    coclass ParagraphFormat {
        [default] interface _ParagraphFormat;
        interface _Object;
    };

    [
      uuid(715CEEF9-78B6-3561-91F5-A24D7DA05109),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BorderCollection)
    ]
    coclass BorderCollection {
        [default] interface _BorderCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(99FF214E-5DED-34E4-BD98-39F9FF2B00EC), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BorderType)    
]
    enum {
        BorderType_None = 0xffffffff,
        BorderType_Bottom = 0,
        BorderType_Left = 1,
        BorderType_Right = 2,
        BorderType_Top = 3,
        BorderType_Horizontal = 4,
        BorderType_Vertical = 5,
        BorderType_DiagonalDown = 6,
        BorderType_DiagonalUp = 7
    } BorderType;

    [
      uuid(B83D7133-A82E-3C92-A913-7116AC39BEE1),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ListFormat)
    ]
    coclass ListFormat {
        [default] interface _ListFormat;
        interface _Object;
    };

    [
      uuid(D6550786-0F1B-3DB4-9220-018BCD3340B2),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Shape)
    ]
    coclass Shape {
        [default] interface _Shape;
        interface _ShapeBase;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(911ACFD6-7FF0-3EFA-A9B3-ED9780863325),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ShapeBase)
    ]
    coclass ShapeBase {
        [default] interface _ShapeBase;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(4A456F2A-D6AA-336F-8919-9DEBF99DCD81), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextBoxWrapMode)    
]
    enum {
        TextBoxWrapMode_Square = 0,
        TextBoxWrapMode_None = 2
    } TextBoxWrapMode;

    typedef [uuid(304CEC11-8B4B-31D6-9F35-9EB9E74E30D6), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.LayoutFlow)    
]
    enum {
        LayoutFlow_Horizontal = 0,
        LayoutFlow_TopToBottomIdeographic = 1,
        LayoutFlow_BottomToTop = 2,
        LayoutFlow_TopToBottom = 3,
        LayoutFlow_HorizontalIdeographic = 4,
        LayoutFlow_Vertical = 5
    } LayoutFlow;

    typedef [uuid(93F7F5AF-A59F-3C75-9BBC-E102C5E71AE2), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextPathAlignment)    
]
    enum {
        TextPathAlignment_Stretch = 0,
        TextPathAlignment_Center = 1,
        TextPathAlignment_Left = 2,
        TextPathAlignment_Right = 3,
        TextPathAlignment_LetterJustify = 4,
        TextPathAlignment_WordJustify = 5
    } TextPathAlignment;

    typedef [uuid(B2426982-54DA-3169-8F47-B31CED401DD4), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ShapeLineStyle)    
]
    enum {
        ShapeLineStyle_Single = 0,
        ShapeLineStyle_Double = 1,
        ShapeLineStyle_ThickThin = 2,
        ShapeLineStyle_ThinThick = 3,
        ShapeLineStyle_Triple = 4,
        ShapeLineStyle_Default = 0
    } ShapeLineStyle;

    typedef [uuid(A5EBE23B-20CC-3AAA-BAB4-E0584D0D3F31), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.DashStyle)    
]
    enum {
        DashStyle_Solid = 0,
        DashStyle_ShortDash = 1,
        DashStyle_ShortDot = 2,
        DashStyle_ShortDashDot = 3,
        DashStyle_ShortDashDotDot = 4,
        DashStyle_Dot = 5,
        DashStyle_Dash = 6,
        DashStyle_LongDash = 7,
        DashStyle_DashDot = 8,
        DashStyle_LongDashDot = 9,
        DashStyle_LongDashDotDot = 10,
        DashStyle_Default = 0
    } DashStyle;

    typedef [uuid(A7A0274F-C811-3637-ADBE-66D682E169C9), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ArrowType)    
]
    enum {
        ArrowType_None = 0,
        ArrowType_Arrow = 1,
        ArrowType_Stealth = 2,
        ArrowType_Diamond = 3,
        ArrowType_Oval = 4,
        ArrowType_Open = 5,
        ArrowType_Default = 0
    } ArrowType;

    typedef [uuid(C93D5964-3B8E-3FCD-A0FA-F40703EE1C71), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ArrowWidth)    
]
    enum {
        ArrowWidth_Narrow = 0,
        ArrowWidth_Medium = 1,
        ArrowWidth_Wide = 2,
        ArrowWidth_Default = 0
    } ArrowWidth;

    typedef [uuid(02AA53E0-BA81-3EB5-8C5F-4DD2B4C5D76E), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ArrowLength)    
]
    enum {
        ArrowLength_Short = 0,
        ArrowLength_Medium = 1,
        ArrowLength_Long = 2,
        ArrowLength_Default = 0
    } ArrowLength;

    typedef [uuid(4F20C271-90A8-3F3F-AAB0-1A6193D99699), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.JoinStyle)    
]
    enum {
        JoinStyle_Bevel = 0,
        JoinStyle_Miter = 1,
        JoinStyle_Round = 2
    } JoinStyle;

    typedef [uuid(6985AC61-2647-3100-80C0-1D788668C4E1), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.EndCap)    
]
    enum {
        EndCap_Round = 0,
        EndCap_Square = 1,
        EndCap_Flat = 2,
        EndCap_Default = 2
    } EndCap;

    typedef [uuid(4EE51CA1-A19A-3F1E-8F38-C00FE2BED9DA), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.FlipOrientation)    
]
    enum {
        FlipOrientation_None = 0,
        FlipOrientation_Horizontal = 1,
        FlipOrientation_Vertical = 2,
        FlipOrientation_Both = 3
    } FlipOrientation;

    typedef [uuid(77F8A1A0-B6B9-306D-AF00-9BADDBC37B12), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.WrapSide)    
]
    enum {
        WrapSide_Both = 0,
        WrapSide_Left = 1,
        WrapSide_Right = 2,
        WrapSide_Largest = 3,
        WrapSide_Default = 0
    } WrapSide;

    typedef [uuid(E2886B2B-70EA-306F-904C-723E36DF1106), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ShapeType)    
]
    enum {
        ShapeType_Image = 75,
        ShapeType_TextBox = 202,
        ShapeType_Group = 0xffffffff,
        ShapeType_OleObject = 0xfffffffe,
        ShapeType_OleControl = 201,
        ShapeType_NonPrimitive = 0,
        ShapeType_Rectangle = 1,
        ShapeType_RoundRectangle = 2,
        ShapeType_Ellipse = 3,
        ShapeType_Diamond = 4,
        ShapeType_Triangle = 5,
        ShapeType_RightTriangle = 6,
        ShapeType_Parallelogram = 7,
        ShapeType_Trapezoid = 8,
        ShapeType_Hexagon = 9,
        ShapeType_Octagon = 10,
        ShapeType_Plus = 11,
        ShapeType_Star = 12,
        ShapeType_Arrow = 13,
        ShapeType_ThickArrow = 14,
        ShapeType_HomePlate = 15,
        ShapeType_Cube = 16,
        ShapeType_Balloon = 17,
        ShapeType_Seal = 18,
        ShapeType_Arc = 19,
        ShapeType_Line = 20,
        ShapeType_Plaque = 21,
        ShapeType_Can = 22,
        ShapeType_Donut = 23,
        ShapeType_TextSimple = 24,
        ShapeType_TextOctagon = 25,
        ShapeType_TextHexagon = 26,
        ShapeType_TextCurve = 27,
        ShapeType_TextWave = 28,
        ShapeType_TextRing = 29,
        ShapeType_TextOnCurve = 30,
        ShapeType_TextOnRing = 31,
        ShapeType_StraightConnector1 = 32,
        ShapeType_BentConnector2 = 33,
        ShapeType_BentConnector3 = 34,
        ShapeType_BentConnector4 = 35,
        ShapeType_BentConnector5 = 36,
        ShapeType_CurvedConnector2 = 37,
        ShapeType_CurvedConnector3 = 38,
        ShapeType_CurvedConnector4 = 39,
        ShapeType_CurvedConnector5 = 40,
        ShapeType_Callout1 = 41,
        ShapeType_Callout2 = 42,
        ShapeType_Callout3 = 43,
        ShapeType_AccentCallout1 = 44,
        ShapeType_AccentCallout2 = 45,
        ShapeType_AccentCallout3 = 46,
        ShapeType_BorderCallout1 = 47,
        ShapeType_BorderCallout2 = 48,
        ShapeType_BorderCallout3 = 49,
        ShapeType_AccentBorderCallout1 = 50,
        ShapeType_AccentBorderCallout2 = 51,
        ShapeType_AccentBorderCallout3 = 52,
        ShapeType_Ribbon = 53,
        ShapeType_Ribbon2 = 54,
        ShapeType_Chevron = 55,
        ShapeType_Pentagon = 56,
        ShapeType_NoSmoking = 57,
        ShapeType_Seal8 = 58,
        ShapeType_Seal16 = 59,
        ShapeType_Seal32 = 60,
        ShapeType_WedgeRectCallout = 61,
        ShapeType_WedgeRRectCallout = 62,
        ShapeType_WedgeEllipseCallout = 63,
        ShapeType_Wave = 64,
        ShapeType_FoldedCorner = 65,
        ShapeType_LeftArrow = 66,
        ShapeType_DownArrow = 67,
        ShapeType_UpArrow = 68,
        ShapeType_LeftRightArrow = 69,
        ShapeType_UpDownArrow = 70,
        ShapeType_IrregularSeal1 = 71,
        ShapeType_IrregularSeal2 = 72,
        ShapeType_LightningBolt = 73,
        ShapeType_Heart = 74,
        ShapeType_QuadArrow = 76,
        ShapeType_LeftArrowCallout = 77,
        ShapeType_RightArrowCallout = 78,
        ShapeType_UpArrowCallout = 79,
        ShapeType_DownArrowCallout = 80,
        ShapeType_LeftRightArrowCallout = 81,
        ShapeType_UpDownArrowCallout = 82,
        ShapeType_QuadArrowCallout = 83,
        ShapeType_Bevel = 84,
        ShapeType_LeftBracket = 85,
        ShapeType_RightBracket = 86,
        ShapeType_LeftBrace = 87,
        ShapeType_RightBrace = 88,
        ShapeType_LeftUpArrow = 89,
        ShapeType_BentUpArrow = 90,
        ShapeType_BentArrow = 91,
        ShapeType_Seal24 = 92,
        ShapeType_StripedRightArrow = 93,
        ShapeType_NotchedRightArrow = 94,
        ShapeType_BlockArc = 95,
        ShapeType_SmileyFace = 96,
        ShapeType_VerticalScroll = 97,
        ShapeType_HorizontalScroll = 98,
        ShapeType_CircularArrow = 99,
        ShapeType_CustomShape = 100,
        ShapeType_UturnArrow = 101,
        ShapeType_CurvedRightArrow = 102,
        ShapeType_CurvedLeftArrow = 103,
        ShapeType_CurvedUpArrow = 104,
        ShapeType_CurvedDownArrow = 105,
        ShapeType_CloudCallout = 106,
        ShapeType_EllipseRibbon = 107,
        ShapeType_EllipseRibbon2 = 108,
        ShapeType_FlowChartProcess = 109,
        ShapeType_FlowChartDecision = 110,
        ShapeType_FlowChartInputOutput = 111,
        ShapeType_FlowChartPredefinedProcess = 112,
        ShapeType_FlowChartInternalStorage = 113,
        ShapeType_FlowChartDocument = 114,
        ShapeType_FlowChartMultidocument = 115,
        ShapeType_FlowChartTerminator = 116,
        ShapeType_FlowChartPreparation = 117,
        ShapeType_FlowChartManualInput = 118,
        ShapeType_FlowChartManualOperation = 119,
        ShapeType_FlowChartConnector = 120,
        ShapeType_FlowChartPunchedCard = 121,
        ShapeType_FlowChartPunchedTape = 122,
        ShapeType_FlowChartSummingJunction = 123,
        ShapeType_FlowChartOr = 124,
        ShapeType_FlowChartCollate = 125,
        ShapeType_FlowChartSort = 126,
        ShapeType_FlowChartExtract = 127,
        ShapeType_FlowChartMerge = 128,
        ShapeType_FlowChartOfflineStorage = 129,
        ShapeType_FlowChartOnlineStorage = 130,
        ShapeType_FlowChartMagneticTape = 131,
        ShapeType_FlowChartMagneticDisk = 132,
        ShapeType_FlowChartMagneticDrum = 133,
        ShapeType_FlowChartDisplay = 134,
        ShapeType_FlowChartDelay = 135,
        ShapeType_TextPlainText = 136,
        ShapeType_TextStop = 137,
        ShapeType_TextTriangle = 138,
        ShapeType_TextTriangleInverted = 139,
        ShapeType_TextChevron = 140,
        ShapeType_TextChevronInverted = 141,
        ShapeType_TextRingInside = 142,
        ShapeType_TextRingOutside = 143,
        ShapeType_TextArchUpCurve = 144,
        ShapeType_TextArchDownCurve = 145,
        ShapeType_TextCircleCurve = 146,
        ShapeType_TextButtonCurve = 147,
        ShapeType_TextArchUpPour = 148,
        ShapeType_TextArchDownPour = 149,
        ShapeType_TextCirclePour = 150,
        ShapeType_TextButtonPour = 151,
        ShapeType_TextCurveUp = 152,
        ShapeType_TextCurveDown = 153,
        ShapeType_TextCascadeUp = 154,
        ShapeType_TextCascadeDown = 155,
        ShapeType_TextWave1 = 156,
        ShapeType_TextWave2 = 157,
        ShapeType_TextWave3 = 158,
        ShapeType_TextWave4 = 159,
        ShapeType_TextInflate = 160,
        ShapeType_TextDeflate = 161,
        ShapeType_TextInflateBottom = 162,
        ShapeType_TextDeflateBottom = 163,
        ShapeType_TextInflateTop = 164,
        ShapeType_TextDeflateTop = 165,
        ShapeType_TextDeflateInflate = 166,
        ShapeType_TextDeflateInflateDeflate = 167,
        ShapeType_TextFadeRight = 168,
        ShapeType_TextFadeLeft = 169,
        ShapeType_TextFadeUp = 170,
        ShapeType_TextFadeDown = 171,
        ShapeType_TextSlantUp = 172,
        ShapeType_TextSlantDown = 173,
        ShapeType_TextCanUp = 174,
        ShapeType_TextCanDown = 175,
        ShapeType_FlowChartAlternateProcess = 176,
        ShapeType_FlowChartOffpageConnector = 177,
        ShapeType_Callout90 = 178,
        ShapeType_AccentCallout90 = 179,
        ShapeType_BorderCallout90 = 180,
        ShapeType_AccentBorderCallout90 = 181,
        ShapeType_LeftRightUpArrow = 182,
        ShapeType_Sun = 183,
        ShapeType_Moon = 184,
        ShapeType_BracketPair = 185,
        ShapeType_BracePair = 186,
        ShapeType_Seal4 = 187,
        ShapeType_DoubleWave = 188,
        ShapeType_ActionButtonBlank = 189,
        ShapeType_ActionButtonHome = 190,
        ShapeType_ActionButtonHelp = 191,
        ShapeType_ActionButtonInformation = 192,
        ShapeType_ActionButtonForwardNext = 193,
        ShapeType_ActionButtonBackPrevious = 194,
        ShapeType_ActionButtonEnd = 195,
        ShapeType_ActionButtonBeginning = 196,
        ShapeType_ActionButtonReturn = 197,
        ShapeType_ActionButtonDocument = 198,
        ShapeType_ActionButtonSound = 199,
        ShapeType_ActionButtonMovie = 200,
        ShapeType_MinValue = 0xfffffffe
    } ShapeType;

    typedef [uuid(00C3BA4C-B9D1-3670-9CF4-11B539202CA4), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.TextFormFieldType)    
]
    enum {
        TextFormFieldType_RegularText = 0,
        TextFormFieldType_NumberText = 1,
        TextFormFieldType_DateText = 2
    } TextFormFieldType;

    [
      uuid(4C450CDE-98BE-30F1-930A-A97E37486960),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.DropDownItemCollection)
    ]
    coclass DropDownItemCollection {
        [default] interface _DropDownItemCollection;
        interface _Object;
        interface IList;
        interface ICollection;
        interface IEnumerable;
    };

    [
      uuid(B227745F-FE89-342B-9D5C-06B9B5DB67D4),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ImageData)
    ]
    coclass ImageData {
        [default] interface _ImageData;
        interface _Object;
    };

    [
      uuid(56ED8766-EE22-39E5-85E3-B0C88E74BECF),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ImageSize)
    ]
    coclass ImageSize {
        [default] interface _ImageSize;
        interface _Object;
    };

    [
      uuid(B2779325-5DCA-3A29-8EA0-8FF22EB2F6F9),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ConvertUtil)
    ]
    coclass ConvertUtil {
        [default] interface _ConvertUtil;
        interface _Object;
    };

    typedef [uuid(0E1B9CB6-FA8B-358C-A846-11C8E742AA42), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ImageType)    
]
    enum {
        ImageType_NoImage = 0,
        ImageType_Unknown = 1,
        ImageType_Emf = 2,
        ImageType_Wmf = 3,
        ImageType_Pict = 4,
        ImageType_Jpeg = 5,
        ImageType_Png = 6,
        ImageType_Bmp = 7
    } ImageType;

    [
      uuid(A088EEEA-2FB7-34D4-8A21-EE1249B089BB),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FormField)
    ]
    coclass FormField {
        [default] interface _FormField;
        interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(732B5A61-E93D-3348-9897-7C3461BB5C9E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.GroupShape)
    ]
    coclass GroupShape {
        [default] interface _GroupShape;
        interface _ShapeBase;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(49947D1E-4044-3D2D-B7A4-19A58B8068BD), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.VisitorAction)    
]
    enum {
        VisitorAction_Continue = 0,
        VisitorAction_SkipThisNode = 1,
        VisitorAction_Stop = 2
    } VisitorAction;

    [
      uuid(4692D919-B96D-3E3F-950E-1EA109F7BC76),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.OleFormat)
    ]
    coclass OleFormat {
        [default] interface _OleFormat;
        interface _Object;
    };

    [
      uuid(A17C9A0F-AB93-34BF-B84E-3A95E0086C9B),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Stroke)
    ]
    coclass Stroke {
        [default] interface _Stroke;
        interface _Object;
    };

    [
      uuid(49693A2E-32A1-30C2-82EA-E8D914F32F76),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Fill)
    ]
    coclass Fill {
        [default] interface _Fill;
        interface _Object;
    };

    [
      uuid(8BB448AF-99EE-3556-9394-1C114867B15A),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextBox)
    ]
    coclass TextBox {
        [default] interface _TextBox;
        interface _Object;
    };

    [
      uuid(6C329713-474B-3B74-9568-4457AA33A338),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextPath)
    ]
    coclass TextPath {
        [default] interface _TextPath;
        interface _Object;
    };

    [
      uuid(01F621D8-06A8-32E1-A554-92B90F8E3640),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Section)
    ]
    coclass Section {
        [default] interface _Section;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(2519B42C-923C-3782-85BE-7EAF2B00A8D6),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SpecialChar)
    ]
    coclass SpecialChar {
        [default] interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(E89ACE9A-1946-3EAE-A843-5E3756A22E7C),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.MailMergeSettings)
    ]
    coclass MailMergeSettings {
        [default] interface _MailMergeSettings;
        interface _Object;
    };

    typedef [uuid(82AC8463-8D0F-31A8-AE0E-34F64A03CDD7), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.MailMergeCheckErrors)    
]
    enum {
        MailMergeCheckErrors_Simulate = 1,
        MailMergeCheckErrors_PauseOnError = 2,
        MailMergeCheckErrors_CollectErrors = 3,
        MailMergeCheckErrors_Default = 2
    } MailMergeCheckErrors;

    typedef [uuid(67E13F37-E6BD-3B16-B11A-AB1782DCDF27), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.MailMergeDataType)    
]
    enum {
        MailMergeDataType_None = 0xffffffff,
        MailMergeDataType_TextFile = 0,
        MailMergeDataType_Database = 1,
        MailMergeDataType_Spreadsheet = 2,
        MailMergeDataType_Query = 3,
        MailMergeDataType_Odbc = 4,
        MailMergeDataType_Native = 5,
        MailMergeDataType_Default = 0xffffffff
    } MailMergeDataType;

    typedef [uuid(A5F38ACA-0871-338B-836D-A01BB7D2EF76), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.MailMergeDestination)    
]
    enum {
        MailMergeDestination_NewDocument = 0,
        MailMergeDestination_Printer = 1,
        MailMergeDestination_Email = 2,
        MailMergeDestination_Fax = 4,
        MailMergeDestination_Default = 0
    } MailMergeDestination;

    typedef [uuid(8E3210FC-2A23-330D-B764-C0AA20CC3C59), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.MailMergeMainDocumentType)    
]
    enum {
        MailMergeMainDocumentType_NotAMergeDocument = 0,
        MailMergeMainDocumentType_FormLetters = 1,
        MailMergeMainDocumentType_MailingLabels = 2,
        MailMergeMainDocumentType_Envelopes = 4,
        MailMergeMainDocumentType_Catalog = 8,
        MailMergeMainDocumentType_Email = 16,
        MailMergeMainDocumentType_Fax = 32,
        MailMergeMainDocumentType_Default = 0
    } MailMergeMainDocumentType;

    [
      uuid(C062B559-41F0-3FE1-9ACF-E74EB3B142FC),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.Odso)
    ]
    coclass Odso {
        [default] interface _Odso;
        interface _Object;
    };

    typedef [uuid(DA43D359-B689-34EE-9716-128D256FEAB1), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.OdsoDataSourceType)    
]
    enum {
        OdsoDataSourceType_Text = 0,
        OdsoDataSourceType_Database = 1,
        OdsoDataSourceType_AddressBook = 2,
        OdsoDataSourceType_Document1 = 3,
        OdsoDataSourceType_Document2 = 4,
        OdsoDataSourceType_Native = 5,
        OdsoDataSourceType_Email = 6,
        OdsoDataSourceType_None = 7,
        OdsoDataSourceType_Legacy = 8,
        OdsoDataSourceType_Master = 9,
        OdsoDataSourceType_Default = 7
    } OdsoDataSourceType;

    [
      uuid(A957205F-C194-3FD9-94ED-58E3B9DEBA8A),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.OdsoFieldMapDataCollection)
    ]
    coclass OdsoFieldMapDataCollection {
        [default] interface _OdsoFieldMapDataCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(999FD2CE-75A0-3A7D-ABEF-FE244B722BC4),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.OdsoFieldMapData)
    ]
    coclass OdsoFieldMapData {
        [default] interface _OdsoFieldMapData;
        interface _Object;
    };

    typedef [uuid(2354D1C6-6169-35B0-B260-AD81038B3AE6), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.OdsoFieldMappingType)    
]
    enum {
        OdsoFieldMappingType_Column = 0,
        OdsoFieldMappingType_Null = 1,
        OdsoFieldMappingType_Default = 1
    } OdsoFieldMappingType;

    [
      uuid(449B131E-9F7B-3251-AF42-67E6C73026FA),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.OdsoRecipientDataCollection)
    ]
    coclass OdsoRecipientDataCollection {
        [default] interface _OdsoRecipientDataCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(E0F8D21D-885E-32E8-9A14-33BB071E39B7),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.OdsoRecipientData)
    ]
    coclass OdsoRecipientData {
        [default] interface _OdsoRecipientData;
        interface _Object;
    };

    typedef [uuid(6F8EE8AE-118C-3B51-A655-58189A72B721), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ProtectionType)    
]
    enum {
        ProtectionType_AllowOnlyComments = 1,
        ProtectionType_AllowOnlyFormFields = 2,
        ProtectionType_AllowOnlyRevisions = 0,
        ProtectionType_ReadOnly = 3,
        ProtectionType_NoProtection = 0xffffffff
    } ProtectionType;

    [
      uuid(9983AF70-F2C7-3096-9DA3-BF0A5C7D056F),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.WriteProtection)
    ]
    coclass WriteProtection {
        [default] interface _WriteProtection;
        interface _Object;
    };

    [
      uuid(AFDBEEA8-DA21-3650-99B3-CF7A05D172A0),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextColumn)
    ]
    coclass TextColumn {
        [default] interface _TextColumn;
        interface _Object;
    };

    typedef [uuid(BFF34452-6A9D-347E-95F8-27B874A83DBE), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SectionStart)    
]
    enum {
        SectionStart_Continuous = 0,
        SectionStart_NewColumn = 1,
        SectionStart_NewPage = 2,
        SectionStart_EvenPage = 3,
        SectionStart_OddPage = 4
    } SectionStart;

    typedef [uuid(E4272525-2D3E-3F28-A29D-35627D92FADE), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PaperTray)    
]
    enum {
        PaperTray_AutomaticSheetFeed = 7,
        PaperTray_DefaultBin = 0,
        PaperTray_EnvelopeFeed = 5,
        PaperTray_FormSource = 15,
        PaperTray_LargeCapacityBin = 11,
        PaperTray_LargeFormatBin = 10,
        PaperTray_LowerBin = 2,
        PaperTray_ManualEnvelopeFeed = 6,
        PaperTray_ManualFeed = 4,
        PaperTray_MiddleBin = 3,
        PaperTray_PaperCassette = 14,
        PaperTray_SmallFormatBin = 9,
        PaperTray_TractorFeed = 8,
        PaperTray_UpperBin = 1
    } PaperTray;

    typedef [uuid(C790078A-41C6-3CA4-8B5B-A252FBB5BD3D), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.LineNumberRestartMode)    
]
    enum {
        LineNumberRestartMode_RestartPage = 0,
        LineNumberRestartMode_RestartSection = 1,
        LineNumberRestartMode_Continuous = 2
    } LineNumberRestartMode;

    typedef [uuid(4A03A895-9566-3A5F-BE52-654C851FE0C0), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Orientation)    
]
    enum {
        Orientation_Portrait = 1,
        Orientation_Landscape = 2
    } Orientation;

    typedef [uuid(AC9CBFF2-BFCE-34E7-BAFE-CE44486D248D), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PageBorderAppliesTo)    
]
    enum {
        PageBorderAppliesTo_AllPages = 0,
        PageBorderAppliesTo_FirstPage = 1,
        PageBorderAppliesTo_OtherPages = 2
    } PageBorderAppliesTo;

    typedef [uuid(97913408-7CCE-3D2E-B809-9057A48B5CC6), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PageBorderDistanceFrom)    
]
    enum {
        PageBorderDistanceFrom_Text = 0,
        PageBorderDistanceFrom_PageEdge = 1
    } PageBorderDistanceFrom;

    typedef [uuid(8343ED02-5C61-3D66-935D-DEBB1A38DEBD), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PageVerticalAlignment)    
]
    enum {
        PageVerticalAlignment_Bottom = 3,
        PageVerticalAlignment_Center = 1,
        PageVerticalAlignment_Justify = 2,
        PageVerticalAlignment_Top = 0
    } PageVerticalAlignment;

    typedef [uuid(31D711D0-C8FD-3063-88FD-9778904B0AD0), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FootnoteLocation)    
]
    enum {
        FootnoteLocation_BottomOfPage = 1,
        FootnoteLocation_BeneathText = 2,
        FootnoteLocation_EndOfSection = 0,
        FootnoteLocation_EndOfDocument = 3
    } FootnoteLocation;

    typedef [uuid(9B0124FE-D10B-37AB-9A33-554FA40918A7), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FootnoteNumberingRule)    
]
    enum {
        FootnoteNumberingRule_Continuous = 0,
        FootnoteNumberingRule_RestartSection = 1,
        FootnoteNumberingRule_RestartPage = 2,
        FootnoteNumberingRule_Default = 0
    } FootnoteNumberingRule;

    [
      uuid(F28B36B1-DE04-375B-8939-FE95B83E5EF7),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.CompatibilityOptions)
    ]
    coclass CompatibilityOptions {
        [default] interface _CompatibilityOptions;
        interface _Object;
    };

    [
      uuid(DC12BC6A-151B-38EA-B864-6236AF21D5A3),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.ViewOptions)
    ]
    coclass ViewOptions {
        [default] interface _ViewOptions;
        interface _Object;
    };

    typedef [uuid(BB459215-879C-3CB2-9969-311297645897), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.ViewType)    
]
    enum {
        ViewType_None = 0,
        ViewType_Reading = 0,
        ViewType_PageLayout = 1,
        ViewType_Outline = 3,
        ViewType_Normal = 4,
        ViewType_Web = 5
    } ViewType;

    typedef [uuid(0BBBF223-B408-3F06-A3D8-F1E2DAAC6482), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.ZoomType)    
]
    enum {
        ZoomType_Custom = 0,
        ZoomType_None = 0,
        ZoomType_FullPage = 1,
        ZoomType_PageWidth = 2,
        ZoomType_TextFit = 3
    } ZoomType;

    [
      uuid(25ED3E93-7DD4-3F3D-ADF9-8C83A2FE430C),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PageSetup)
    ]
    coclass PageSetup {
        [default] interface _PageSetup;
        interface _Object;
    };

    [
      uuid(39A6F736-860A-3FAD-8DFD-6A6D3AA5FEDF),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextColumnCollection)
    ]
    coclass TextColumnCollection {
        [default] interface _TextColumnCollection;
        interface _Object;
    };

    [
      uuid(E3A09AAF-B008-3A6E-9CA6-98BB57060886),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FootnoteOptions)
    ]
    coclass FootnoteOptions {
        [default] interface _FootnoteOptions;
        interface _Object;
    };

    typedef [uuid(ADB1B3EE-704B-3240-9464-98296153040B), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FootnoteType)    
]
    enum {
        FootnoteType_Footnote = 0,
        FootnoteType_Endnote = 1
    } FootnoteType;

    typedef [uuid(2F39EF30-966D-3F70-B1A0-BADC52751946), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PaperSize)    
]
    enum {
        PaperSize_A3 = 0,
        PaperSize_A4 = 1,
        PaperSize_A5 = 2,
        PaperSize_B4 = 3,
        PaperSize_B5 = 4,
        PaperSize_Executive = 5,
        PaperSize_Folio = 6,
        PaperSize_Ledger = 7,
        PaperSize_Legal = 8,
        PaperSize_Letter = 9,
        PaperSize_EnvelopeDL = 10,
        PaperSize_Quarto = 11,
        PaperSize_Statement = 12,
        PaperSize_Tabloid = 13,
        PaperSize_Paper10x14 = 14,
        PaperSize_Paper11x17 = 15,
        PaperSize_Custom = 16
    } PaperSize;

    [
      uuid(B30982AF-298C-3085-908C-6C4CF3C4DC54),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ControlChar)
    ]
    coclass ControlChar {
        [default] interface _ControlChar;
        interface _Object;
    };

    typedef [uuid(D17FF87B-FCDA-3DF2-95D2-6DDBE0294889), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeaderFooterType)    
]
    enum {
        HeaderFooterType_HeaderEven = 0,
        HeaderFooterType_HeaderPrimary = 1,
        HeaderFooterType_FooterEven = 2,
        HeaderFooterType_FooterPrimary = 3,
        HeaderFooterType_HeaderFirst = 4,
        HeaderFooterType_FooterFirst = 5
    } HeaderFooterType;

    typedef [uuid(F9BF715C-103B-3D6A-B722-77FD83B7EADB), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.StoryType)    
]
    enum {
        StoryType_MainText = 1,
        StoryType_Footnotes = 2,
        StoryType_Endnotes = 3,
        StoryType_Comments = 4,
        StoryType_Textbox = 5,
        StoryType_EvenPagesHeader = 6,
        StoryType_PrimaryHeader = 7,
        StoryType_EvenPagesFooter = 8,
        StoryType_PrimaryFooter = 9,
        StoryType_FirstPageHeader = 10,
        StoryType_FirstPageFooter = 11
    } StoryType;

    [
      uuid(5014BCE5-7767-38BD-92CB-ED3C5E7E6F9F),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Run)
    ]
    coclass Run {
        [default] interface _Run;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(C62A791B-F162-395E-BF53-65183825BBEA),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Body)
    ]
    coclass Body {
        [default] interface _Body;
        interface _Story;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(964AAF36-78C2-351F-9796-230E72CFEB7F),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Story)
    ]
    coclass Story {
        [default] interface _Story;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(0BDC3DC0-E6B7-34DF-B324-50A9FAF358BB),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ParagraphCollection)
    ]
    coclass ParagraphCollection {
        [default] interface _ParagraphCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(F12F36A0-2DB9-3521-9B89-9FCC483734BC),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.TableCollection)
    ]
    coclass TableCollection {
        [default] interface _TableCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(AB350315-F200-35AE-828A-3EA6149C66CD),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Table)
    ]
    coclass Table {
        [default] interface _Table;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(A2DE15A7-9957-3FF8-A573-B20E702D7E24),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.RowCollection)
    ]
    coclass RowCollection {
        [default] interface _RowCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(B2C4CD15-20E4-3B12-AF93-1BF6D76A7D53),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Row)
    ]
    coclass Row {
        [default] interface _Row;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(DD07AB65-7FFB-34FC-804B-8B5D3895385F),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Inline)
    ]
    coclass Inline {
        [default] interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(E16C350E-D448-315B-96AD-D6EE944B70B8),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Document)
    ]
    coclass Document {
        [default] interface _Document;
        interface _DocumentBase;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(3D4959D1-E1F6-334F-859D-B64BA468CFE3), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.RowAlignment)    
]
    enum {
        RowAlignment_Left = 0,
        RowAlignment_Center = 1,
        RowAlignment_Right = 2
    } RowAlignment;

    [
      uuid(B39AE6EC-E667-3BE5-A3AA-5961EE280837),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.DocumentBase)
    ]
    coclass DocumentBase {
        [default] interface _DocumentBase;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(51462721-9D5A-3EE8-BBBB-F437717E29B3), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellMerge)    
]
    enum {
        CellMerge_None = 0,
        CellMerge_First = 1,
        CellMerge_Previous = 2
    } CellMerge;

    typedef [uuid(FF1D9599-76CA-3FE5-A38B-DAB5EFE36906), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellVerticalAlignment)    
]
    enum {
        CellVerticalAlignment_Top = 0,
        CellVerticalAlignment_Center = 1,
        CellVerticalAlignment_Bottom = 2
    } CellVerticalAlignment;

    [
      uuid(073F6039-FD0A-3AB8-8278-9B3114F18B6D),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.RowFormat)
    ]
    coclass RowFormat {
        [default] interface _RowFormat;
        interface _Object;
    };

    [
      uuid(9F7EB6D8-C751-3822-985C-4C0F21AA9A57),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellCollection)
    ]
    coclass CellCollection {
        [default] interface _CellCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(CBC35282-BFAA-37F4-9F9A-E720D8C07381),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Cell)
    ]
    coclass Cell {
        [default] interface _Cell;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(27B78876-C00C-3636-8ED6-A0970C2AACAC),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellFormat)
    ]
    coclass CellFormat {
        [default] interface _CellFormat;
        interface _Object;
    };

    [
      uuid(FB4C264C-4E64-31F7-A601-2DE5138B04E4),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeaderFooterCollection)
    ]
    coclass HeaderFooterCollection {
        [default] interface _HeaderFooterCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(80C2C124-85DA-3B65-BF63-438ABC90DE14),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeaderFooter)
    ]
    coclass HeaderFooter {
        [default] interface _HeaderFooter;
        interface _Story;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(4B78BA6A-C225-311D-8F64-EFDECEF0D18D),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeImporter)
    ]
    coclass NodeImporter {
        [default] interface _NodeImporter;
        interface _Object;
    };

    [
      uuid(05ECC46A-968F-333F-A87D-5CB3DCF722CC),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.VariableCollection)
    ]
    coclass VariableCollection {
        [default] interface _VariableCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(2B6F87D5-3BD2-349E-A206-4CD0E9AB176C),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.BuiltInDocumentProperties)
    ]
    coclass BuiltInDocumentProperties {
        [default] interface _BuiltInDocumentProperties;
        interface _DocumentPropertyCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(A8B17ACD-0C17-3421-91EC-F08CBA084BFD),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.DocumentPropertyCollection)
    ]
    coclass DocumentPropertyCollection {
        [default] interface _DocumentPropertyCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(4481AAE5-6997-3901-A005-80C506541081),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.DocumentProperty)
    ]
    coclass DocumentProperty {
        [default] interface _DocumentProperty;
        interface _Object;
    };

    typedef [uuid(C8EF8FBF-D96F-33E7-ABAA-84C608534146), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.PropertyType)    
]
    enum {
        PropertyType_Boolean = 0,
        PropertyType_DateTime = 1,
        PropertyType_Double = 2,
        PropertyType_Number = 3,
        PropertyType_String = 4,
        PropertyType_StringArray = 5,
        PropertyType_ObjectArray = 6,
        PropertyType_Other = 7
    } PropertyType;

    typedef [uuid(9C100A6D-2F3E-3F94-87B8-C3C754291AA8), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.DocumentSecurity)    
]
    enum {
        DocumentSecurity_None = 0,
        DocumentSecurity_PasswordProtected = 1,
        DocumentSecurity_ReadOnlyRecommended = 2,
        DocumentSecurity_ReadOnlyEnforced = 4,
        DocumentSecurity_ReadOnlyExceptAnnotations = 8
    } DocumentSecurity;

    [
      uuid(8CFD8454-7677-3643-8C5C-8751D79320B4),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.CustomDocumentProperties)
    ]
    coclass CustomDocumentProperties {
        [default] interface _CustomDocumentProperties;
        interface _DocumentPropertyCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(93611ACC-F383-3983-BC07-077EC46F5462),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SaveOptions)
    ]
    coclass SaveOptions {
        [default] interface _SaveOptions;
        interface _Object;
    };

    [
      uuid(81E30BB3-CF7A-3ECA-B0B8-6025C6B2D5F3),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ExportImageSavingEventHandler)
    ]
    coclass ExportImageSavingEventHandler {
        [default] interface _ExportImageSavingEventHandler;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    [
      uuid(8C6D4262-245B-37B7-A800-531383813B6F),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ExportImageSavingEventArgs)
    ]
    coclass ExportImageSavingEventArgs {
        [default] interface _ExportImageSavingEventArgs;
        interface _Object;
    };

    typedef [uuid(17F57D58-62D3-33C1-A07B-248A04F8F1EF), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.CssStyleSheetType)    
]
    enum {
        CssStyleSheetType_Inline = 0,
        CssStyleSheetType_Embedded = 1,
        CssStyleSheetType_External = 2
    } CssStyleSheetType;

    typedef [uuid(3DBB5938-41D3-3F82-8C2E-5E706883102D), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldType)    
]
    enum {
        FieldType_FieldNone = 0,
        FieldType_FieldCannotParse = 1,
        FieldType_FieldAddin = 81,
        FieldType_FieldAddressBlock = 93,
        FieldType_FieldAdvance = 84,
        FieldType_FieldAsk = 38,
        FieldType_FieldAuthor = 17,
        FieldType_FieldAutoNum = 54,
        FieldType_FieldAutoNumLegal = 53,
        FieldType_FieldAutoNumOutline = 52,
        FieldType_FieldAutoText = 79,
        FieldType_FieldAutoTextList = 89,
        FieldType_FieldBarCode = 63,
        FieldType_FieldBidiOutline = 92,
        FieldType_FieldComments = 19,
        FieldType_FieldCompare = 80,
        FieldType_FieldCreateDate = 21,
        FieldType_FieldData = 40,
        FieldType_FieldDatabase = 78,
        FieldType_FieldDate = 31,
        FieldType_FieldDDE = 45,
        FieldType_FieldDDEAuto = 46,
        FieldType_FieldDocProperty = 85,
        FieldType_FieldDocVariable = 64,
        FieldType_FieldEditTime = 25,
        FieldType_FieldEmbed = 58,
        FieldType_FieldEquation = 49,
        FieldType_FieldFileName = 29,
        FieldType_FieldFileSize = 69,
        FieldType_FieldFillIn = 39,
        FieldType_FieldFootnoteRef = 5,
        FieldType_FieldFormCheckBox = 71,
        FieldType_FieldFormDropDown = 83,
        FieldType_FieldFormTextInput = 70,
        FieldType_FieldFormula = 34,
        FieldType_FieldGreetingLine = 94,
        FieldType_FieldGlossary = 47,
        FieldType_FieldGoToButton = 50,
        FieldType_FieldHTMLActiveX = 91,
        FieldType_FieldHyperlink = 88,
        FieldType_FieldIf = 7,
        FieldType_FieldInclude = 36,
        FieldType_FieldIncludePicture = 67,
        FieldType_FieldIncludeText = 68,
        FieldType_FieldIndex = 8,
        FieldType_FieldIndexEntry = 4,
        FieldType_FieldInfo = 14,
        FieldType_FieldImport = 55,
        FieldType_FieldKeyword = 18,
        FieldType_FieldLastSavedBy = 20,
        FieldType_FieldLink = 56,
        FieldType_FieldListNum = 90,
        FieldType_FieldMacroButton = 51,
        FieldType_FieldMergeField = 59,
        FieldType_FieldMergeRec = 44,
        FieldType_FieldMergeSeq = 75,
        FieldType_FieldNext = 41,
        FieldType_FieldNextIf = 42,
        FieldType_FieldNoteRef = 72,
        FieldType_FieldNumChars = 28,
        FieldType_FieldNumPages = 26,
        FieldType_FieldNumWords = 27,
        FieldType_FieldOCX = 87,
        FieldType_FieldPage = 33,
        FieldType_FieldPageRef = 37,
        FieldType_FieldPrint = 48,
        FieldType_FieldPrintDate = 23,
        FieldType_FieldPrivate = 77,
        FieldType_FieldQuote = 35,
        FieldType_FieldRef = 3,
        FieldType_FieldRefNoKeyword = 2,
        FieldType_FieldRefDoc = 11,
        FieldType_FieldRevisionNum = 24,
        FieldType_FieldSaveDate = 22,
        FieldType_FieldSection = 65,
        FieldType_FieldSectionPages = 66,
        FieldType_FieldSequence = 12,
        FieldType_FieldSet = 6,
        FieldType_FieldShape = 95,
        FieldType_FieldSkipIf = 43,
        FieldType_FieldStyleRef = 10,
        FieldType_FieldSubject = 16,
        FieldType_FieldSymbol = 57,
        FieldType_FieldTemplate = 30,
        FieldType_FieldTime = 32,
        FieldType_FieldTitle = 15,
        FieldType_FieldTOA = 73,
        FieldType_FieldTOAEntry = 74,
        FieldType_FieldTOC = 13,
        FieldType_FieldTOCEntry = 9,
        FieldType_FieldUserAddress = 62,
        FieldType_FieldUserInitials = 61,
        FieldType_FieldUserName = 60
    } FieldType;

    [
      uuid(3F6537DB-569A-3A84-9775-D99C2B39F937),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.SmartTag)
    ]
    coclass SmartTag {
        [default] interface _SmartTag;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(9D924A2E-066D-3062-895B-C93586FE0F9F),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.CustomXmlPropertyCollection)
    ]
    coclass CustomXmlPropertyCollection {
        [default] interface _CustomXmlPropertyCollection;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(91F45624-2AD8-368C-811F-0879F733413C),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.CustomXmlProperty)
    ]
    coclass CustomXmlProperty {
        [default] interface _CustomXmlProperty;
        interface _Object;
    };

    [
      uuid(E09287A7-ED51-3E71-A053-51BDB33711A3),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.UnsupportedFileFormatException)
    ]
    coclass UnsupportedFileFormatException {
        [default] interface _UnsupportedFileFormatException;
        interface _Object;
        interface ISerializable;
        interface _Exception;
    };

    [
      uuid(C773A65A-1788-334C-AC1B-41C6B3D4C8B5),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.IncorrectPasswordException)
    ]
    coclass IncorrectPasswordException {
        [default] interface _IncorrectPasswordException;
        interface _Object;
        interface ISerializable;
        interface _Exception;
    };

    [
      uuid(A6A9C5AA-4E54-3B56-96B4-CB178A71800E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.CompositeNode)
    ]
    coclass CompositeNode {
        [default] interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(FDED5049-B046-3C4A-83BD-10B8ED1132F1),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Node)
    ]
    coclass Node {
        [default] interface _Node;
        interface _Object;
    };

    [
      uuid(97877149-4BC6-3B98-ADA1-99A1E887CD59),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Comment)
    ]
    coclass Comment {
        [default] interface _Comment;
        interface _InlineStory;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(89867512-E943-341D-B369-8B1683FEAF55),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.InlineStory)
    ]
    coclass InlineStory {
        [default] interface _InlineStory;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(454A3C2C-1457-37B2-B81C-015A9EE3041B),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldEnd)
    ]
    coclass FieldEnd {
        [default] interface _FieldEnd;
        interface _FieldChar;
        interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(3977EEE8-FFB9-3144-8411-2500266E8165),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldChar)
    ]
    coclass FieldChar {
        [default] interface _FieldChar;
        interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(915A4E3A-F8EC-39FE-8F44-8D450ED79A2A),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldStart)
    ]
    coclass FieldStart {
        [default] interface _FieldStart;
        interface _FieldChar;
        interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(01E42ECF-6825-30EE-A1BA-27C53F70DB41),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldSeparator)
    ]
    coclass FieldSeparator {
        [default] interface _FieldSeparator;
        interface _FieldChar;
        interface _SpecialChar;
        interface _Inline;
        interface _Node;
        interface _Object;
    };

    [
      uuid(52BEDF5F-2BB7-3B0B-9DD7-D7BE10186EF6),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.Field)
    ]
    coclass Field {
        [default] interface _Field;
        interface _Object;
    };

    [
      uuid(6821627E-6EFE-39E2-A6B2-D81289A1E844),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MailMerge)
    ]
    coclass MailMerge {
        [default] interface _MailMerge;
        interface _Object;
    };

    [
      uuid(C8C79B3A-D4B8-3E68-8217-2FB21E653B63),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventHandler)
    ]
    coclass MergeFieldEventHandler {
        [default] interface _MergeFieldEventHandler;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    [
      uuid(679DFEB6-440F-3609-98D6-1AE111711DFF),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventArgs)
    ]
    coclass MergeFieldEventArgs {
        [default] interface _MergeFieldEventArgs;
        interface _MergeFieldEventArgsBase;
        interface _Object;
    };

    [
      uuid(F10CFB1F-05A9-359D-B449-13B1E2F335B4),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventArgsBase)
    ]
    coclass MergeFieldEventArgsBase {
        [default] interface _MergeFieldEventArgsBase;
        interface _Object;
    };

    [
      uuid(519ACEA0-7ACE-3C3E-94CF-0E1327824BF1),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeImageFieldEventHandler)
    ]
    coclass MergeImageFieldEventHandler {
        [default] interface _MergeImageFieldEventHandler;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    [
      uuid(E68E76A1-D57C-3900-B4B8-352225E85D0A),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeImageFieldEventArgs)
    ]
    coclass MergeImageFieldEventArgs {
        [default] interface _MergeImageFieldEventArgs;
        interface _MergeFieldEventArgsBase;
        interface _Object;
    };

    [
      uuid(6ACCE717-B523-3F3F-8C60-3D37D69076EE),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MappedDataFieldCollection)
    ]
    coclass MappedDataFieldCollection {
        [default] interface _MappedDataFieldCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(B8221293-F000-3B67-914A-F06F2475116C), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeType)    
]
    enum {
        NodeType_Any = 0,
        NodeType_Document = 1,
        NodeType_Section = 2,
        NodeType_Body = 3,
        NodeType_HeaderFooter = 4,
        NodeType_Table = 5,
        NodeType_Row = 6,
        NodeType_Cell = 7,
        NodeType_Paragraph = 8,
        NodeType_BookmarkStart = 9,
        NodeType_BookmarkEnd = 10,
        NodeType_GroupShape = 11,
        NodeType_Shape = 12,
        NodeType_Comment = 13,
        NodeType_Footnote = 14,
        NodeType_Run = 15,
        NodeType_FieldStart = 16,
        NodeType_FieldSeparator = 17,
        NodeType_FieldEnd = 18,
        NodeType_FormField = 19,
        NodeType_SpecialChar = 20,
        NodeType_SmartTag = 21,
        NodeType_GlossaryDocument = 22,
        NodeType_BuildingBlock = 23,
        NodeType_System = 24,
        NodeType_Null = 25
    } NodeType;

    [
      uuid(40D858B9-6C7E-351F-8BED-455F3C75788E),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.DocumentBuilder)
    ]
    coclass DocumentBuilder {
        [default] interface _DocumentBuilder;
        interface _Object;
    };

    [
      uuid(DB1C3793-5447-3853-8349-AEEE3938971C),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Range)
    ]
    coclass Range {
        [default] interface _Range;
        interface _Object;
    };

    [
      uuid(7116F329-DF00-3FC5-BAF6-6AE51CA827CF),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Bookmark)
    ]
    coclass Bookmark {
        [default] interface _Bookmark;
        interface _Object;
    };

    [
      uuid(E0380F82-DC31-3A30-9B65-D34287DCB4A2),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkStart)
    ]
    coclass BookmarkStart {
        [default] interface _BookmarkStart;
        interface _Node;
        interface _Object;
    };

    [
      uuid(729A7A37-6019-30F7-9911-CCFBAF4DA318),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkEnd)
    ]
    coclass BookmarkEnd {
        [default] interface _BookmarkEnd;
        interface _Node;
        interface _Object;
    };

    [
      uuid(A4004B9E-D6DC-3A70-80CB-B5F01E32324B),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkCollection)
    ]
    coclass BookmarkCollection {
        [default] interface _BookmarkCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(248DDCB7-817D-366B-9EA3-0D4007BC37E2), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BreakType)    
]
    enum {
        BreakType_ParagraphBreak = 0,
        BreakType_PageBreak = 1,
        BreakType_ColumnBreak = 2,
        BreakType_SectionBreakContinuous = 3,
        BreakType_SectionBreakNewColumn = 4,
        BreakType_SectionBreakNewPage = 5,
        BreakType_SectionBreakEvenPage = 6,
        BreakType_SectionBreakOddPage = 7,
        BreakType_LineBreak = 8
    } BreakType;

    [
      uuid(BEC498BC-60F5-3B59-AF21-C1B06D9BE984),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Footnote)
    ]
    coclass Footnote {
        [default] interface _Footnote;
        interface _InlineStory;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(12F7EBE0-6308-3B17-9738-FFD135B932FC), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SaveFormat)    
]
    enum {
        SaveFormat_None = 0,
        SaveFormat_Doc = 1,
        SaveFormat_Docx = 8,
        SaveFormat_Docm = 9,
        SaveFormat_FlatOpc = 10,
        SaveFormat_Rtf = 6,
        SaveFormat_WordML = 5,
        SaveFormat_Pdf = 15,
        SaveFormat_Xps = 16,
        SaveFormat_Html = 4,
        SaveFormat_Mhtml = 13,
        SaveFormat_Text = 2,
        SaveFormat_Odt = 12,
        SaveFormat_Epub = 14,
        SaveFormat_Xaml = 20,
        SaveFormat_AsposePdf = 3
    } SaveFormat;

    [
      uuid(7AC722A8-D1A2-3B06-A4B6-CC231882CD88),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SaveOutputParameters)
    ]
    coclass SaveOutputParameters {
        [default] interface _SaveOutputParameters;
        interface _Object;
    };

    typedef [uuid(212F3778-AB16-365B-A91C-9527E6994809), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Underline)    
]
    enum {
        Underline_None = 0,
        Underline_Single = 1,
        Underline_Words = 2,
        Underline_Double = 3,
        Underline_Dotted = 4,
        Underline_Thick = 6,
        Underline_Dash = 7,
        Underline_DashLong = 39,
        Underline_DotDash = 9,
        Underline_DotDotDash = 10,
        Underline_Wavy = 11,
        Underline_DottedHeavy = 20,
        Underline_DashHeavy = 23,
        Underline_DashLongHeavy = 55,
        Underline_DotDashHeavy = 25,
        Underline_DotDotDashHeavy = 26,
        Underline_WavyHeavy = 27,
        Underline_WavyDouble = 43
    } Underline;

    typedef [uuid(9908D78C-0510-3126-A9EE-AF677579E7AB), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextEffect)    
]
    enum {
        TextEffect_None = 0,
        TextEffect_LasVegasLights = 1,
        TextEffect_BlinkingBackground = 2,
        TextEffect_SparkleText = 3,
        TextEffect_MarchingBlackAnts = 4,
        TextEffect_MarchingRedAnts = 5,
        TextEffect_Shimmer = 6
    } TextEffect;

    [
      uuid(0034804A-29F0-34C4-81A7-9F4347A6CCF3),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Border)
    ]
    coclass Border {
        [default] interface _Border;
        interface _Object;
    };

    [
      uuid(E84B0808-622B-384E-912D-57F272434993),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FormFieldCollection)
    ]
    coclass FormFieldCollection {
        [default] interface _FormFieldCollection;
        interface _Object;
        interface IEnumerable;
    };

    typedef [uuid(D2309EA8-F761-3135-96E0-C205B16B42A1), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.LineStyle)    
]
    enum {
        LineStyle_None = 0,
        LineStyle_Single = 1,
        LineStyle_Thick = 2,
        LineStyle_Double = 3,
        LineStyle_Hairline = 5,
        LineStyle_Dot = 6,
        LineStyle_DashLargeGap = 7,
        LineStyle_DotDash = 8,
        LineStyle_DotDotDash = 9,
        LineStyle_Triple = 10,
        LineStyle_ThinThickSmallGap = 11,
        LineStyle_ThickThinSmallGap = 12,
        LineStyle_ThinThickThinSmallGap = 13,
        LineStyle_ThinThickMediumGap = 14,
        LineStyle_ThickThinMediumGap = 15,
        LineStyle_ThinThickThinMediumGap = 16,
        LineStyle_ThinThickLargeGap = 17,
        LineStyle_ThickThinLargeGap = 18,
        LineStyle_ThinThickThinLargeGap = 19,
        LineStyle_Wave = 20,
        LineStyle_DoubleWave = 21,
        LineStyle_DashSmallGap = 22,
        LineStyle_DashDotStroker = 23,
        LineStyle_Emboss3D = 24,
        LineStyle_Engrave3D = 25,
        LineStyle_Outset = 26,
        LineStyle_Inset = 27
    } LineStyle;

    [
      uuid(5003C586-D953-3926-A652-913CB4193B20),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SectionCollection)
    ]
    coclass SectionCollection {
        [default] interface _SectionCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    typedef [uuid(D7A6488E-FD96-36C1-BEC9-741912C0823B), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BuildingBlocks.BuildingBlockBehavior)    
]
    enum {
        BuildingBlockBehavior_Content = 0,
        BuildingBlockBehavior_Paragraph = 1,
        BuildingBlockBehavior_Page = 2,
        BuildingBlockBehavior_Default = 0
    } BuildingBlockBehavior;

    typedef [uuid(E7D7206A-2146-32FB-A6BE-5B3404AC23F0), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BuildingBlocks.BuildingBlockGallery)    
]
    enum {
        BuildingBlockGallery_All = 0,
        BuildingBlockGallery_AutoText = 1,
        BuildingBlockGallery_Bibliography = 2,
        BuildingBlockGallery_CoverPage = 3,
        BuildingBlockGallery_CustomAutoText = 4,
        BuildingBlockGallery_CustomBibliography = 5,
        BuildingBlockGallery_CustomCoverPage = 6,
        BuildingBlockGallery_CustomEquations = 7,
        BuildingBlockGallery_CustomFooters = 8,
        BuildingBlockGallery_CustomHeaders = 9,
        BuildingBlockGallery_Custom1 = 10,
        BuildingBlockGallery_Custom2 = 11,
        BuildingBlockGallery_Custom3 = 12,
        BuildingBlockGallery_Custom4 = 13,
        BuildingBlockGallery_Custom5 = 14,
        BuildingBlockGallery_CustomPageNumber = 15,
        BuildingBlockGallery_CustomPageNumberAtBottom = 16,
        BuildingBlockGallery_CustomPageNumberAtMargin = 17,
        BuildingBlockGallery_CustomPageNumberAtTop = 18,
        BuildingBlockGallery_CustomQuickParts = 19,
        BuildingBlockGallery_CustomTableOfContents = 20,
        BuildingBlockGallery_CustomTables = 21,
        BuildingBlockGallery_CustomTextBox = 22,
        BuildingBlockGallery_CustomWatermarks = 23,
        BuildingBlockGallery_NoGallery = 24,
        BuildingBlockGallery_QuickParts = 25,
        BuildingBlockGallery_Equations = 26,
        BuildingBlockGallery_Footers = 27,
        BuildingBlockGallery_Headers = 28,
        BuildingBlockGallery_PageNumber = 29,
        BuildingBlockGallery_PageNumberAtBottom = 30,
        BuildingBlockGallery_PageNumberAtMargin = 31,
        BuildingBlockGallery_PageNumberAtTop = 32,
        BuildingBlockGallery_StructuredDocumentTagPlaceholderText = 33,
        BuildingBlockGallery_TableOfContents = 34,
        BuildingBlockGallery_Tables = 35,
        BuildingBlockGallery_TextBox = 36,
        BuildingBlockGallery_Watermarks = 37,
        BuildingBlockGallery_Default = 0
    } BuildingBlockGallery;

    typedef [uuid(327DDB8B-CA29-31BD-8FF2-898826FF82CA), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BuildingBlocks.BuildingBlockType)    
]
    enum {
        BuildingBlockType_None = 0,
        BuildingBlockType_AutomaticallyReplaceNameWithContent = 1,
        BuildingBlockType_StructuredDocumentTagPlaceholderText = 2,
        BuildingBlockType_FormFieldHelpText = 3,
        BuildingBlockType_Normal = 4,
        BuildingBlockType_AutoCorrect = 5,
        BuildingBlockType_AutoText = 6,
        BuildingBlockType_All = 7,
        BuildingBlockType_Default = 0
    } BuildingBlockType;

    [
      uuid(F866D79E-6582-37BA-BFCF-C49F27913984),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BuildingBlocks.GlossaryDocument)
    ]
    coclass GlossaryDocument {
        [default] interface _GlossaryDocument;
        interface _DocumentBase;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(0AEB4749-7290-34CC-A319-887203E1759F),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BuildingBlocks.BuildingBlockCollection)
    ]
    coclass BuildingBlockCollection {
        [default] interface _BuildingBlockCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(58312F77-ABB7-3244-A13B-A33960F6AE58),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BuildingBlocks.BuildingBlock)
    ]
    coclass BuildingBlock {
        [default] interface _BuildingBlock;
        interface _CompositeNode;
        interface _Node;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(CED00606-5EF5-3E6C-B5C4-6659746F2A66),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.RunCollection)
    ]
    coclass RunCollection {
        [default] interface _RunCollection;
        interface _NodeCollection;
        interface _Object;
        interface INodeCollection;
        interface IEnumerable;
    };

    [
      uuid(3B9256AC-B203-38CF-9C93-E1D97E753EDF),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FileCorruptedException)
    ]
    coclass FileCorruptedException {
        [default] interface _FileCorruptedException;
        interface _Object;
        interface ISerializable;
        interface _Exception;
    };

    [
      uuid(2AD10846-97A0-33CD-88DC-E9A8266E91F8),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ReplaceEvaluator)
    ]
    coclass ReplaceEvaluator {
        [default] interface _ReplaceEvaluator;
        interface _Delegate;
        interface _Object;
        interface ICloneable;
        interface ISerializable;
    };

    [
      uuid(81C1228A-3A7A-370F-A347-DF150C429B57),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ReplaceEvaluatorArgs)
    ]
    coclass ReplaceEvaluatorArgs {
        [default] interface _ReplaceEvaluatorArgs;
        interface _Object;
    };

    typedef [uuid(AF141013-A875-3DDE-8017-8A13F43E1926), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ReplaceAction)    
]
    enum {
        ReplaceAction_Replace = 0,
        ReplaceAction_Skip = 1,
        ReplaceAction_Stop = 2
    } ReplaceAction;

    [
      uuid(1AEF8205-9757-353F-846B-518FD0A5F4E3),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeList)
    ]
    coclass NodeList {
        [default] interface _NodeList;
        interface _Object;
        interface IEnumerable;
    };

    [
      uuid(CB4EB2D5-BC7A-3F31-840E-FC40CFEC7A71),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FileFormatUtil)
    ]
    coclass FileFormatUtil {
        [default] interface _FileFormatUtil;
        interface _Object;
    };

    [
      uuid(E11C705C-8636-3B7C-BEDC-420AE386A309),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.PdfOptions)
    ]
    coclass PdfOptions {
        [default] interface _PdfOptions;
        interface _Object;
    };

    typedef [uuid(3AA99FF1-74D5-3ADC-BBC8-D4BD4BFBE017), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.PdfTextCompression)    
]
    enum {
        PdfTextCompression_None = 0,
        PdfTextCompression_Flate = 1
    } PdfTextCompression;

    typedef [uuid(AE71528E-34E8-3B93-A3EF-D86B9477AF9D), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.PdfCompliance)    
]
    enum {
        PdfCompliance_Pdf15 = 0,
        PdfCompliance_PdfA1b = 1
    } PdfCompliance;

    [
      uuid(AEAB7EE7-F4C4-3B35-AB85-58B41267E4F8),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.XpsOptions)
    ]
    coclass XpsOptions {
        [default] interface _XpsOptions;
        interface _Object;
    };

    typedef [uuid(F70A31C0-BC5D-3597-A04F-65100DB79B22), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SaveType)    
]
    enum {
        SaveType_OpenInApplication = 0,
        SaveType_OpenInBrowser = 1,
        SaveType_OpenInWord = 0
    } SaveType;

    [
      uuid(A0615463-1772-3636-A613-A69F169B5AEA),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.ImageOptions)
    ]
    coclass ImageOptions {
        [default] interface _ImageOptions;
        interface _Object;
    };

    typedef [uuid(716FB3EE-E78C-3039-8B38-6DD8069CE12A), version(1.0)    ,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.TiffCompression)    
]
    enum {
        TiffCompression_None = 0,
        TiffCompression_Rle = 1,
        TiffCompression_Lzw = 2,
        TiffCompression_Ccitt3 = 3,
        TiffCompression_Ccitt4 = 4
    } TiffCompression;

    [
      uuid(3C6D54BB-09FC-3DFF-9CE8-74B52D0B677E),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.PageInfo)
    ]
    coclass PageInfo {
        [default] interface _PageInfo;
        interface _Object;
    };

    [
      uuid(C98BF381-400A-3E83-AC12-D77FD195B629),
      version(1.0),
      noncreatable,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.AsposeWordsPrintDocument)
    ]
    coclass AsposeWordsPrintDocument {
        [default] interface _AsposeWordsPrintDocument;
        interface _Object;
        interface IComponent;
        interface IDisposable;
    };

    [
      uuid(67DB11C9-9611-3449-B2CC-8113D4EF8EB7),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ComHelper)
    ]
    coclass ComHelper {
        [default] interface _ComHelper;
        interface _Object;
    };

    [
      uuid(82702D6F-E78E-3A10-8434-B8524B4C40EB),
      version(1.0),
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.License)
    ]
    coclass License {
        [default] interface _License;
        interface _Object;
    };

    [
      odl,
      uuid(41314F8F-9E4F-3567-B34C-E4040707908D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.DocumentVisitor)    

    ]
    interface _DocumentVisitor : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT VisitDocumentStart(
                        [in] _Document* doc, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020005)]
        HRESULT VisitDocumentEnd(
                        [in] _Document* doc, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020006)]
        HRESULT VisitSectionStart(
                        [in] _Section* Section, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020007)]
        HRESULT VisitSectionEnd(
                        [in] _Section* Section, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020008)]
        HRESULT VisitBodyStart(
                        [in] _Body* Body, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020009)]
        HRESULT VisitBodyEnd(
                        [in] _Body* Body, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000a)]
        HRESULT VisitHeaderFooterStart(
                        [in] _HeaderFooter* HeaderFooter, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000b)]
        HRESULT VisitHeaderFooterEnd(
                        [in] _HeaderFooter* HeaderFooter, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000c)]
        HRESULT VisitParagraphStart(
                        [in] _Paragraph* Paragraph, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000d)]
        HRESULT VisitParagraphEnd(
                        [in] _Paragraph* Paragraph, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000e)]
        HRESULT VisitTableStart(
                        [in] _Table* Table, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002000f)]
        HRESULT VisitTableEnd(
                        [in] _Table* Table, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020010)]
        HRESULT VisitRowStart(
                        [in] _Row* Row, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020011)]
        HRESULT VisitRowEnd(
                        [in] _Row* Row, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020012)]
        HRESULT VisitCellStart(
                        [in] _Cell* Cell, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020013)]
        HRESULT VisitCellEnd(
                        [in] _Cell* Cell, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020014)]
        HRESULT VisitRun(
                        [in] _Run* Run, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020015)]
        HRESULT VisitFieldStart(
                        [in] _FieldStart* FieldStart, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020016)]
        HRESULT VisitFieldSeparator(
                        [in] _FieldSeparator* FieldSeparator, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020017)]
        HRESULT VisitFieldEnd(
                        [in] _FieldEnd* FieldEnd, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020018)]
        HRESULT VisitFormField(
                        [in] _FormField* FormField, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020019)]
        HRESULT VisitBookmarkStart(
                        [in] _BookmarkStart* BookmarkStart, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001a)]
        HRESULT VisitBookmarkEnd(
                        [in] _BookmarkEnd* BookmarkEnd, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001b)]
        HRESULT VisitFootnoteStart(
                        [in] _Footnote* Footnote, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001c)]
        HRESULT VisitFootnoteEnd(
                        [in] _Footnote* Footnote, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001d)]
        HRESULT VisitCommentStart(
                        [in] _Comment* Comment, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001e)]
        HRESULT VisitCommentEnd(
                        [in] _Comment* Comment, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x6002001f)]
        HRESULT VisitShapeStart(
                        [in] _Shape* Shape, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020020)]
        HRESULT VisitShapeEnd(
                        [in] _Shape* Shape, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020021)]
        HRESULT VisitGroupShapeStart(
                        [in] _GroupShape* GroupShape, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020022)]
        HRESULT VisitGroupShapeEnd(
                        [in] _GroupShape* GroupShape, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020023)]
        HRESULT VisitSpecialChar(
                        [in] _SpecialChar* SpecialChar, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020024)]
        HRESULT VisitSmartTagStart(
                        [in] _SmartTag* SmartTag, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020025)]
        HRESULT VisitSmartTagEnd(
                        [in] _SmartTag* SmartTag, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020026)]
        HRESULT VisitGlossaryDocumentStart(
                        [in] _GlossaryDocument* glossary, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020027)]
        HRESULT VisitGlossaryDocumentEnd(
                        [in] _GlossaryDocument* glossary, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020028)]
        HRESULT VisitBuildingBlockStart(
                        [in] _BuildingBlock* block, 
                        [out, retval] VisitorAction* pRetVal);
        [id(0x60020029)]
        HRESULT VisitBuildingBlockEnd(
                        [in] _BuildingBlock* block, 
                        [out, retval] VisitorAction* pRetVal);
    };

    [
      odl,
      uuid(323250D6-686E-3C2E-83C3-903CBFB3667D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Shading)    

    ]
    interface _Shading : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT BackgroundPatternColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020005), propput]
        HRESULT BackgroundPatternColor([in] OLE_COLOR pRetVal);
        [id(0x60020007), propget]
        HRESULT ForegroundPatternColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020007), propput]
        HRESULT ForegroundPatternColor([in] OLE_COLOR pRetVal);
        [id(0x60020009), propget]
        HRESULT Texture([out, retval] TextureIndex* pRetVal);
        [id(0x60020009), propput]
        HRESULT Texture([in] TextureIndex pRetVal);
    };

    [
      odl,
      uuid(47276ED5-BBD6-3101-AA11-0C8900D5495D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeCollection)    

    ]
    interface _NodeCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
    };

    [
      odl,
      uuid(999D0307-4592-34E5-B758-0E123501950A),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeChangedEventArgs)    

    ]
    interface _NodeChangedEventArgs : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Node([out, retval] _Node** pRetVal);
        [id(0x60020005), propget]
        HRESULT OldParent([out, retval] _Node** pRetVal);
        [id(0x60020006), propget]
        HRESULT NewParent([out, retval] _Node** pRetVal);
        [id(0x60020007), propget]
        HRESULT Action([out, retval] NodeChangedAction* pRetVal);
    };

    [
      odl,
      uuid(17F533BF-2E3A-366A-87CF-4D34E4E20651),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Paragraph)    

    ]
    interface _Paragraph : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT ParentStory([out, retval] _Story** pRetVal);
        [id(0x60020029), propget]
        HRESULT ParentSection([out, retval] _Section** pRetVal);
        [id(0x6002002a), propget]
        HRESULT IsInCell([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propget]
        HRESULT IsEndOfCell([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propget]
        HRESULT IsEndOfSection([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT IsEndOfHeaderFooter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002e), propget]
        HRESULT IsEndOfDocument([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propget]
        HRESULT ParagraphFormat([out, retval] _ParagraphFormat** pRetVal);
        [id(0x60020030), propget]
        HRESULT ListFormat([out, retval] _ListFormat** pRetVal);
        [id(0x60020031), propget]
        HRESULT Runs([out, retval] _RunCollection** pRetVal);
        [id(0x60020032), propget]
        HRESULT ParagraphBreakFont([out, retval] _Font** pRetVal);
        [id(0x60020033), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020034), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020035), propget]
        HRESULT IsListItem([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(0696BC04-3FA9-33FA-9C86-06D24A195F86),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeChangedEventHandler)    

    ]
    interface _NodeChangedEventHandler : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2(
                        [in] VARIANT sender, 
                        [in] _NodeChangedEventArgs* e);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] VARIANT sender, 
                        [in] _NodeChangedEventArgs* e, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke([in] IAsyncResult* result);
    };

    [
      odl,
      uuid(FBB2B7FA-F3A0-3CCE-B0D8-5F5F380C737A),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabStopCollection)    

    ]
    interface _TabStopCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _TabStop** pRetVal);
        [id(0x60020006), propget]
        HRESULT Item_2(
                        [in] double position, 
                        [out, retval] _TabStop** pRetVal);
        [id(0x60020007)]
        HRESULT Clear();
        [id(0x60020008)]
        HRESULT GetPositionByIndex(
                        [in] long index, 
                        [out, retval] double* pRetVal);
        [id(0x60020009)]
        HRESULT GetIndexByPosition(
                        [in] double position, 
                        [out, retval] long* pRetVal);
        [id(0x6002000a)]
        HRESULT Add([in] _TabStop* TabStop);
        [id(0x6002000b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_2(
                        [in] double position, 
                        [in] unsigned char alignment, 
                        [in] unsigned char leader);
        [id(0x6002000c)]
        HRESULT RemoveByPosition([in] double position);
        [id(0x6002000d)]
        HRESULT RemoveByIndex([in] long index);
        [id(0x6002000e)]
        HRESULT After(
                        [in] double position, 
                        [out, retval] _TabStop** pRetVal);
        [id(0x6002000f)]
        HRESULT Before(
                        [in] double position, 
                        [out, retval] _TabStop** pRetVal);
    };

    [
      odl,
      uuid(EB20FA7F-B521-33F5-B820-653C3BD6C496),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TabStop)    

    ]
    interface _TabStop : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT position([out, retval] double* pRetVal);
        [id(0x60020005), propget]
        HRESULT alignment([out, retval] unsigned char* pRetVal);
        [id(0x60020005), propput]
        HRESULT alignment([in] unsigned char pRetVal);
        [id(0x60020007), propget]
        HRESULT leader([out, retval] unsigned char* pRetVal);
        [id(0x60020007), propput]
        HRESULT leader([in] unsigned char pRetVal);
        [id(0x60020009), propget]
        HRESULT IsClear([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(3B7DEF7C-0927-3E05-9545-F65B2FEB3412),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListLevel)    

    ]
    interface _ListLevel : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT StartAt([out, retval] long* pRetVal);
        [id(0x60020004), propput]
        HRESULT StartAt([in] long pRetVal);
        [id(0x60020006), propget]
        HRESULT NumberStyle([out, retval] NumberStyle* pRetVal);
        [id(0x60020006), propput]
        HRESULT NumberStyle([in] NumberStyle pRetVal);
        [id(0x60020008), propget]
        HRESULT NumberFormat([out, retval] BSTR* pRetVal);
        [id(0x60020008), propput]
        HRESULT NumberFormat([in] BSTR pRetVal);
        [id(0x6002000a), propget]
        HRESULT alignment([out, retval] ListLevelAlignment* pRetVal);
        [id(0x6002000a), propput]
        HRESULT alignment([in] ListLevelAlignment pRetVal);
        [id(0x6002000c), propget]
        HRESULT IsLegal([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propput]
        HRESULT IsLegal([in] VARIANT_BOOL pRetVal);
        [id(0x6002000e), propget]
        HRESULT RestartAfterLevel([out, retval] long* pRetVal);
        [id(0x6002000e), propput]
        HRESULT RestartAfterLevel([in] long pRetVal);
        [id(0x60020010), propget]
        HRESULT TrailingCharacter([out, retval] ListTrailingCharacter* pRetVal);
        [id(0x60020010), propput]
        HRESULT TrailingCharacter([in] ListTrailingCharacter pRetVal);
        [id(0x60020012), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020013), propget]
        HRESULT TabPosition([out, retval] double* pRetVal);
        [id(0x60020013), propput]
        HRESULT TabPosition([in] double pRetVal);
        [id(0x60020015), propget]
        HRESULT NumberPosition([out, retval] double* pRetVal);
        [id(0x60020015), propput]
        HRESULT NumberPosition([in] double pRetVal);
        [id(0x60020017), propget]
        HRESULT TextPosition([out, retval] double* pRetVal);
        [id(0x60020017), propput]
        HRESULT TextPosition([in] double pRetVal);
        [id(0x60020019), propget]
        HRESULT LinkedStyle([out, retval] _Style** pRetVal);
        [id(0x60020019), propputref]
        HRESULT LinkedStyle([in] _Style* pRetVal);
    };

    [
      odl,
      uuid(67B4D523-8A5F-3BBF-8CF1-A04A7D03DE8C),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Font)    

    ]
    interface _Font : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020005), propput]
        HRESULT Name([in] BSTR pRetVal);
        [id(0x60020007), propget]
        HRESULT NameAscii([out, retval] BSTR* pRetVal);
        [id(0x60020007), propput]
        HRESULT NameAscii([in] BSTR pRetVal);
        [id(0x60020009), propget]
        HRESULT NameBi([out, retval] BSTR* pRetVal);
        [id(0x60020009), propput]
        HRESULT NameBi([in] BSTR pRetVal);
        [id(0x6002000b), propget]
        HRESULT NameFarEast([out, retval] BSTR* pRetVal);
        [id(0x6002000b), propput]
        HRESULT NameFarEast([in] BSTR pRetVal);
        [id(0x6002000d), propget]
        HRESULT NameOther([out, retval] BSTR* pRetVal);
        [id(0x6002000d), propput]
        HRESULT NameOther([in] BSTR pRetVal);
        [id(0x6002000f), propget]
        HRESULT Size([out, retval] double* pRetVal);
        [id(0x6002000f), propput]
        HRESULT Size([in] double pRetVal);
        [id(0x60020011), propget]
        HRESULT SizeBi([out, retval] double* pRetVal);
        [id(0x60020011), propput]
        HRESULT SizeBi([in] double pRetVal);
        [id(0x60020013), propget]
        HRESULT Bold([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020013), propput]
        HRESULT Bold([in] VARIANT_BOOL pRetVal);
        [id(0x60020015), propget]
        HRESULT BoldBi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020015), propput]
        HRESULT BoldBi([in] VARIANT_BOOL pRetVal);
        [id(0x60020017), propget]
        HRESULT Italic([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propput]
        HRESULT Italic([in] VARIANT_BOOL pRetVal);
        [id(0x60020019), propget]
        HRESULT ItalicBi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020019), propput]
        HRESULT ItalicBi([in] VARIANT_BOOL pRetVal);
        [id(0x6002001b), propget]
        HRESULT Color([out, retval] OLE_COLOR* pRetVal);
        [id(0x6002001b), propput]
        HRESULT Color([in] OLE_COLOR pRetVal);
        [id(0x6002001d), propget]
        HRESULT StrikeThrough([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001d), propput]
        HRESULT StrikeThrough([in] VARIANT_BOOL pRetVal);
        [id(0x6002001f), propget]
        HRESULT DoubleStrikeThrough([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001f), propput]
        HRESULT DoubleStrikeThrough([in] VARIANT_BOOL pRetVal);
        [id(0x60020021), propget]
        HRESULT Shadow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020021), propput]
        HRESULT Shadow([in] VARIANT_BOOL pRetVal);
        [id(0x60020023), propget]
        HRESULT Outline([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020023), propput]
        HRESULT Outline([in] VARIANT_BOOL pRetVal);
        [id(0x60020025), propget]
        HRESULT Emboss([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020025), propput]
        HRESULT Emboss([in] VARIANT_BOOL pRetVal);
        [id(0x60020027), propget]
        HRESULT Engrave([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020027), propput]
        HRESULT Engrave([in] VARIANT_BOOL pRetVal);
        [id(0x60020029), propget]
        HRESULT Superscript([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020029), propput]
        HRESULT Superscript([in] VARIANT_BOOL pRetVal);
        [id(0x6002002b), propget]
        HRESULT Subscript([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propput]
        HRESULT Subscript([in] VARIANT_BOOL pRetVal);
        [id(0x6002002d), propget]
        HRESULT SmallCaps([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propput]
        HRESULT SmallCaps([in] VARIANT_BOOL pRetVal);
        [id(0x6002002f), propget]
        HRESULT AllCaps([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propput]
        HRESULT AllCaps([in] VARIANT_BOOL pRetVal);
        [id(0x60020031), propget]
        HRESULT Hidden([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020031), propput]
        HRESULT Hidden([in] VARIANT_BOOL pRetVal);
        [id(0x60020033), propget]
        HRESULT Underline([out, retval] unsigned char* pRetVal);
        [id(0x60020033), propput]
        HRESULT Underline([in] unsigned char pRetVal);
        [id(0x60020035), propget]
        HRESULT UnderlineColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020035), propput]
        HRESULT UnderlineColor([in] OLE_COLOR pRetVal);
        [id(0x60020037), propget]
        HRESULT Scaling([out, retval] long* pRetVal);
        [id(0x60020037), propput]
        HRESULT Scaling([in] long pRetVal);
        [id(0x60020039), propget]
        HRESULT Spacing([out, retval] double* pRetVal);
        [id(0x60020039), propput]
        HRESULT Spacing([in] double pRetVal);
        [id(0x6002003b), propget]
        HRESULT position([out, retval] double* pRetVal);
        [id(0x6002003b), propput]
        HRESULT position([in] double pRetVal);
        [id(0x6002003d), propget]
        HRESULT Kerning([out, retval] double* pRetVal);
        [id(0x6002003d), propput]
        HRESULT Kerning([in] double pRetVal);
        [id(0x6002003f), propget]
        HRESULT HighlightColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x6002003f), propput]
        HRESULT HighlightColor([in] OLE_COLOR pRetVal);
        [id(0x60020041), propget]
        HRESULT TextEffect([out, retval] TextEffect* pRetVal);
        [id(0x60020041), propput]
        HRESULT TextEffect([in] TextEffect pRetVal);
        [id(0x60020043), propget]
        HRESULT Bidi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020043), propput]
        HRESULT Bidi([in] VARIANT_BOOL pRetVal);
        [id(0x60020045), propget]
        HRESULT ComplexScript([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020045), propput]
        HRESULT ComplexScript([in] VARIANT_BOOL pRetVal);
        [id(0x60020047), propget]
        HRESULT NoProofing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020047), propput]
        HRESULT NoProofing([in] VARIANT_BOOL pRetVal);
        [id(0x60020049), propget]
        HRESULT LocaleId([out, retval] long* pRetVal);
        [id(0x60020049), propput]
        HRESULT LocaleId([in] long pRetVal);
        [id(0x6002004b), propget]
        HRESULT LocaleIdBi([out, retval] long* pRetVal);
        [id(0x6002004b), propput]
        HRESULT LocaleIdBi([in] long pRetVal);
        [id(0x6002004d), propget]
        HRESULT LocaleIdFarEast([out, retval] long* pRetVal);
        [id(0x6002004d), propput]
        HRESULT LocaleIdFarEast([in] long pRetVal);
        [id(0x6002004f), propget]
        HRESULT Border([out, retval] _Border** pRetVal);
        [id(0x60020050), propget]
        HRESULT Shading([out, retval] _Shading** pRetVal);
        [id(0x60020051), propget]
        HRESULT Style([out, retval] _Style** pRetVal);
        [id(0x60020051), propputref]
        HRESULT Style([in] _Style* pRetVal);
        [id(0x60020053), propget]
        HRESULT StyleName([out, retval] BSTR* pRetVal);
        [id(0x60020053), propput]
        HRESULT StyleName([in] BSTR pRetVal);
        [id(0x60020055), propget]
        HRESULT StyleIdentifier([out, retval] StyleIdentifier* pRetVal);
        [id(0x60020055), propput]
        HRESULT StyleIdentifier([in] StyleIdentifier pRetVal);
    };

    [
      odl,
      uuid(6DD2F33E-5151-30F4-922A-96E39B40398F),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.StyleCollection)    

    ]
    interface _StyleCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _Style** pRetVal);
        [id(0x60020008), propget]
        HRESULT Item_2(
                        [in] StyleIdentifier sti, 
                        [out, retval] _Style** pRetVal);
        [id(0x60020009), propget]
        HRESULT Item_3(
                        [in] long index, 
                        [out, retval] _Style** pRetVal);
        [id(0x6002000a)]
        HRESULT Add(
                        [in] StyleType type, 
                        [in] BSTR Name, 
                        [out, retval] _Style** pRetVal);
    };

    [
      odl,
      uuid(A5C5611D-DDDA-3D6D-86F8-2E68C29419B9),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Style)    

    ]
    interface _Style : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020005), propget]
        HRESULT StyleIdentifier([out, retval] StyleIdentifier* pRetVal);
        [id(0x60020006), propget]
        HRESULT IsHeading([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propget]
        HRESULT type([out, retval] StyleType* pRetVal);
        [id(0x60020008), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x60020009), propget]
        HRESULT BaseStyle([out, retval] BSTR* pRetVal);
        [id(0x60020009), propput]
        HRESULT BaseStyle([in] BSTR pRetVal);
        [id(0x6002000b), propget]
        HRESULT NextParagraphStyle([out, retval] BSTR* pRetVal);
        [id(0x6002000b), propput]
        HRESULT NextParagraphStyle([in] BSTR pRetVal);
        [id(0x6002000d), propget]
        HRESULT BuiltIn([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x6002000f), propget]
        HRESULT ParagraphFormat([out, retval] _ParagraphFormat** pRetVal);
        [id(0x60020010), propget]
        HRESULT List([out, retval] _List** pRetVal);
        [id(0x60020011), propget]
        HRESULT ListFormat([out, retval] _ListFormat** pRetVal);
        [id(0x60020012), propget]
        HRESULT Styles([out, retval] _StyleCollection** pRetVal);
    };

    [
      odl,
      uuid(8CC6A0F3-1B67-3A0E-8A2C-FFF4EF35C4FF),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.List)    

    ]
    interface _List : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT ListId([out, retval] long* pRetVal);
        [id(0x60020005), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x60020006), propget]
        HRESULT IsMultiLevel([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propget]
        HRESULT ListLevels([out, retval] _ListLevelCollection** pRetVal);
        [id(0x60020008), propget]
        HRESULT IsListStyleDefinition([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009), propget]
        HRESULT IsListStyleReference([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propget]
        HRESULT Style([out, retval] _Style** pRetVal);
    };

    [
      odl,
      uuid(A8A9D1DB-7AEF-3F18-962B-326CDAA00B08),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListLevelCollection)    

    ]
    interface _ListLevelCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _ListLevel** pRetVal);
        [id(00000000), propputref]
        HRESULT Item(
                        [in] long index, 
                        [in] _ListLevel* pRetVal);
        [id(0x60020007), propget]
        HRESULT Count([out, retval] long* pRetVal);
    };

    [
      odl,
      uuid(BFFA2260-7E40-3AAC-B50C-28D32EF64EFA),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fonts.FontInfoCollection)    

    ]
    interface _FontInfoCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _FontInfo** pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _FontInfo** pRetVal);
        [id(0x60020008)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(79EE5190-312B-39D7-BBEE-E7B87F0311D1),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fonts.FontInfo)    

    ]
    interface _FontInfo : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Pitch([out, retval] FontPitch* pRetVal);
        [id(0x60020004), propput]
        HRESULT Pitch([in] FontPitch pRetVal);
        [id(0x60020006), propget]
        HRESULT IsTrueType([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006), propput]
        HRESULT IsTrueType([in] VARIANT_BOOL pRetVal);
        [id(0x60020008), propget]
        HRESULT Family([out, retval] FontFamily* pRetVal);
        [id(0x60020008), propput]
        HRESULT Family([in] FontFamily pRetVal);
        [id(0x6002000a), propget]
        HRESULT Charset([out, retval] long* pRetVal);
        [id(0x6002000a), propput]
        HRESULT Charset([in] long pRetVal);
        [id(0x6002000c), propget]
        HRESULT Panose([out, retval] SAFEARRAY(unsigned char)* pRetVal);
        [id(0x6002000c), propput]
        HRESULT Panose([in] SAFEARRAY(unsigned char) pRetVal);
        [id(0x6002000e), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x6002000f), propget]
        HRESULT AltName([out, retval] BSTR* pRetVal);
        [id(0x6002000f), propput]
        HRESULT AltName([in] BSTR pRetVal);
        [id(0x60020011), propget]
        HRESULT EmbeddedData([out, retval] SAFEARRAY(unsigned char)* pRetVal);
        [id(0x60020011), propput]
        HRESULT EmbeddedData([in] SAFEARRAY(unsigned char) pRetVal);
    };

    [
      odl,
      uuid(8A20F3C4-B054-3CA2-86C5-02A203981364),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Lists.ListCollection)    

    ]
    interface _ListCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005)]
        HRESULT Add(
                        [in] ListTemplate template, 
                        [out, retval] _List** pRetVal);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_2(
                        [in] _Style* listStyle, 
                        [out, retval] _List** pRetVal);
        [id(0x60020007)]
        HRESULT AddCopy(
                        [in] _List* srcList, 
                        [out, retval] _List** pRetVal);
        [id(0x60020008)]
        HRESULT GetListByListId(
                        [in] long ListId, 
                        [out, retval] _List** pRetVal);
        [id(0x60020009), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _List** pRetVal);
        [id(0x6002000b), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
    };

    [
      odl,
      uuid(FC89AC7B-D5B8-304E-AD4F-88BC062A0958),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ParagraphFormat)    

    ]
    interface _ParagraphFormat : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT alignment([out, retval] unsigned char* pRetVal);
        [id(0x60020005), propput]
        HRESULT alignment([in] unsigned char pRetVal);
        [id(0x60020007), propget]
        HRESULT NoSpaceBetweenParagraphsOfSameStyle([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propput]
        HRESULT NoSpaceBetweenParagraphsOfSameStyle([in] VARIANT_BOOL pRetVal);
        [id(0x60020009), propget]
        HRESULT KeepTogether([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009), propput]
        HRESULT KeepTogether([in] VARIANT_BOOL pRetVal);
        [id(0x6002000b), propget]
        HRESULT KeepWithNext([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000b), propput]
        HRESULT KeepWithNext([in] VARIANT_BOOL pRetVal);
        [id(0x6002000d), propget]
        HRESULT PageBreakBefore([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d), propput]
        HRESULT PageBreakBefore([in] VARIANT_BOOL pRetVal);
        [id(0x6002000f), propget]
        HRESULT SuppressAutoHyphens([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000f), propput]
        HRESULT SuppressAutoHyphens([in] VARIANT_BOOL pRetVal);
        [id(0x60020011), propget]
        HRESULT WidowControl([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020011), propput]
        HRESULT WidowControl([in] VARIANT_BOOL pRetVal);
        [id(0x60020013), propget]
        HRESULT Bidi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020013), propput]
        HRESULT Bidi([in] VARIANT_BOOL pRetVal);
        [id(0x60020015), propget]
        HRESULT LeftIndent([out, retval] double* pRetVal);
        [id(0x60020015), propput]
        HRESULT LeftIndent([in] double pRetVal);
        [id(0x60020017), propget]
        HRESULT RightIndent([out, retval] double* pRetVal);
        [id(0x60020017), propput]
        HRESULT RightIndent([in] double pRetVal);
        [id(0x60020019), propget]
        HRESULT FirstLineIndent([out, retval] double* pRetVal);
        [id(0x60020019), propput]
        HRESULT FirstLineIndent([in] double pRetVal);
        [id(0x6002001b), propget]
        HRESULT SpaceBeforeAuto([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001b), propput]
        HRESULT SpaceBeforeAuto([in] VARIANT_BOOL pRetVal);
        [id(0x6002001d), propget]
        HRESULT SpaceAfterAuto([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001d), propput]
        HRESULT SpaceAfterAuto([in] VARIANT_BOOL pRetVal);
        [id(0x6002001f), propget]
        HRESULT SpaceBefore([out, retval] double* pRetVal);
        [id(0x6002001f), propput]
        HRESULT SpaceBefore([in] double pRetVal);
        [id(0x60020021), propget]
        HRESULT SpaceAfter([out, retval] double* pRetVal);
        [id(0x60020021), propput]
        HRESULT SpaceAfter([in] double pRetVal);
        [id(0x60020023), propget]
        HRESULT LineSpacingRule([out, retval] LineSpacingRule* pRetVal);
        [id(0x60020023), propput]
        HRESULT LineSpacingRule([in] LineSpacingRule pRetVal);
        [id(0x60020025), propget]
        HRESULT LineSpacing([out, retval] double* pRetVal);
        [id(0x60020025), propput]
        HRESULT LineSpacing([in] double pRetVal);
        [id(0x60020027), propget]
        HRESULT IsHeading([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020028), propget]
        HRESULT IsListItem([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020029), propget]
        HRESULT OutlineLevel([out, retval] OutlineLevel* pRetVal);
        [id(0x60020029), propput]
        HRESULT OutlineLevel([in] OutlineLevel pRetVal);
        [id(0x6002002b), propget]
        HRESULT Shading([out, retval] _Shading** pRetVal);
        [id(0x6002002c), propget]
        HRESULT Borders([out, retval] _BorderCollection** pRetVal);
        [id(0x6002002d), propget]
        HRESULT Style([out, retval] _Style** pRetVal);
        [id(0x6002002d), propputref]
        HRESULT Style([in] _Style* pRetVal);
        [id(0x6002002f), propget]
        HRESULT StyleName([out, retval] BSTR* pRetVal);
        [id(0x6002002f), propput]
        HRESULT StyleName([in] BSTR pRetVal);
        [id(0x60020031), propget]
        HRESULT StyleIdentifier([out, retval] StyleIdentifier* pRetVal);
        [id(0x60020031), propput]
        HRESULT StyleIdentifier([in] StyleIdentifier pRetVal);
        [id(0x60020033), propget]
        HRESULT TabStops([out, retval] _TabStopCollection** pRetVal);
    };

    [
      odl,
      uuid(A68ED0A9-5A2B-379C-AA65-C6E91F4B2F94),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BorderCollection)    

    ]
    interface _BorderCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BorderType BorderType, 
                        [out, retval] _Border** pRetVal);
        [id(0x60020006), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Border** pRetVal);
        [id(0x60020007), propget]
        HRESULT Left([out, retval] _Border** pRetVal);
        [id(0x60020008), propget]
        HRESULT Right([out, retval] _Border** pRetVal);
        [id(0x60020009), propget]
        HRESULT Top([out, retval] _Border** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Bottom([out, retval] _Border** pRetVal);
        [id(0x6002000b), propget]
        HRESULT Horizontal([out, retval] _Border** pRetVal);
        [id(0x6002000c), propget]
        HRESULT Vertical([out, retval] _Border** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002000e), propget]
        HRESULT LineWidth([out, retval] double* pRetVal);
        [id(0x6002000e), propput]
        HRESULT LineWidth([in] double pRetVal);
        [id(0x60020010), propget]
        HRESULT LineStyle([out, retval] LineStyle* pRetVal);
        [id(0x60020010), propput]
        HRESULT LineStyle([in] LineStyle pRetVal);
        [id(0x60020012), propget]
        HRESULT Color([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020012), propput]
        HRESULT Color([in] OLE_COLOR pRetVal);
        [id(0x60020014), propget]
        HRESULT DistanceFromText([out, retval] double* pRetVal);
        [id(0x60020014), propput]
        HRESULT DistanceFromText([in] double pRetVal);
        [id(0x60020016), propget]
        HRESULT Shadow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propput]
        HRESULT Shadow([in] VARIANT_BOOL pRetVal);
        [id(0x60020018)]
        HRESULT ClearFormatting();
    };

    [
      odl,
      uuid(5E976AE9-684F-3731-8F57-B919D14DEB37),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ListFormat)    

    ]
    interface _ListFormat : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ApplyBulletDefault();
        [id(0x60020005)]
        HRESULT ApplyNumberDefault();
        [id(0x60020006)]
        HRESULT RemoveNumbers();
        [id(0x60020007)]
        HRESULT ListIndent();
        [id(0x60020008)]
        HRESULT ListOutdent();
        [id(0x60020009), propget]
        HRESULT ListLevelNumber([out, retval] long* pRetVal);
        [id(0x60020009), propput]
        HRESULT ListLevelNumber([in] long pRetVal);
        [id(0x6002000b), propget]
        HRESULT IsListItem([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propget]
        HRESULT List([out, retval] _List** pRetVal);
        [id(0x6002000c), propputref]
        HRESULT List([in] _List* pRetVal);
        [id(0x6002000e), propget]
        HRESULT ListLevel([out, retval] _ListLevel** pRetVal);
    };

    [
      odl,
      uuid(41D30DC1-CB60-3C16-9E28-5A6E071E7755),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Shape)    

    ]
    interface _Shape : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028)]
        HRESULT LocalToParent(
                        [in] PointF value, 
                        [out, retval] PointF* pRetVal);
        [id(0x60020029), propget]
        HRESULT ShapeType([out, retval] ShapeType* pRetVal);
        [id(0x6002002a), propget]
        HRESULT IsGroup([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propget]
        HRESULT IsImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propget]
        HRESULT IsHorizontalRule([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT IsWordArt([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002e), propget]
        HRESULT CanHaveImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propget]
        HRESULT Left([out, retval] double* pRetVal);
        [id(0x6002002f), propput]
        HRESULT Left([in] double pRetVal);
        [id(0x60020031), propget]
        HRESULT Top([out, retval] double* pRetVal);
        [id(0x60020031), propput]
        HRESULT Top([in] double pRetVal);
        [id(0x60020033), propget]
        HRESULT Right([out, retval] double* pRetVal);
        [id(0x60020034), propget]
        HRESULT Bottom([out, retval] double* pRetVal);
        [id(0x60020035), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x60020035), propput]
        HRESULT Width([in] double pRetVal);
        [id(0x60020037), propget]
        HRESULT Height([out, retval] double* pRetVal);
        [id(0x60020037), propput]
        HRESULT Height([in] double pRetVal);
        [id(0x60020039), propget]
        HRESULT SizeInPoints([out, retval] SizeF* pRetVal);
        [id(0x6002003a), propget]
        HRESULT FlipOrientation([out, retval] FlipOrientation* pRetVal);
        [id(0x6002003a), propput]
        HRESULT FlipOrientation([in] FlipOrientation pRetVal);
        [id(0x6002003c), propget]
        HRESULT RelativeHorizontalPosition([out, retval] RelativeHorizontalPosition* pRetVal);
        [id(0x6002003c), propput]
        HRESULT RelativeHorizontalPosition([in] RelativeHorizontalPosition pRetVal);
        [id(0x6002003e), propget]
        HRESULT RelativeVerticalPosition([out, retval] RelativeVerticalPosition* pRetVal);
        [id(0x6002003e), propput]
        HRESULT RelativeVerticalPosition([in] RelativeVerticalPosition pRetVal);
        [id(0x60020040), propget]
        HRESULT HorizontalAlignment([out, retval] HorizontalAlignment* pRetVal);
        [id(0x60020040), propput]
        HRESULT HorizontalAlignment([in] HorizontalAlignment pRetVal);
        [id(0x60020042), propget]
        HRESULT VerticalAlignment([out, retval] VerticalAlignment* pRetVal);
        [id(0x60020042), propput]
        HRESULT VerticalAlignment([in] VerticalAlignment pRetVal);
        [id(0x60020044), propget]
        HRESULT WrapType([out, retval] WrapType* pRetVal);
        [id(0x60020044), propput]
        HRESULT WrapType([in] WrapType pRetVal);
        [id(0x60020046), propget]
        HRESULT WrapSide([out, retval] WrapSide* pRetVal);
        [id(0x60020046), propput]
        HRESULT WrapSide([in] WrapSide pRetVal);
        [id(0x60020048), propget]
        HRESULT AnchorLocked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020048), propput]
        HRESULT AnchorLocked([in] VARIANT_BOOL pRetVal);
        [id(0x6002004a), propget]
        HRESULT AllowOverlap([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004a), propput]
        HRESULT AllowOverlap([in] VARIANT_BOOL pRetVal);
        [id(0x6002004c), propget]
        HRESULT BehindText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004c), propput]
        HRESULT BehindText([in] VARIANT_BOOL pRetVal);
        [id(0x6002004e), propget]
        HRESULT DistanceTop([out, retval] double* pRetVal);
        [id(0x6002004e), propput]
        HRESULT DistanceTop([in] double pRetVal);
        [id(0x60020050), propget]
        HRESULT DistanceBottom([out, retval] double* pRetVal);
        [id(0x60020050), propput]
        HRESULT DistanceBottom([in] double pRetVal);
        [id(0x60020052), propget]
        HRESULT DistanceLeft([out, retval] double* pRetVal);
        [id(0x60020052), propput]
        HRESULT DistanceLeft([in] double pRetVal);
        [id(0x60020054), propget]
        HRESULT DistanceRight([out, retval] double* pRetVal);
        [id(0x60020054), propput]
        HRESULT DistanceRight([in] double pRetVal);
        [id(0x60020056), propget]
        HRESULT IsInline([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020057), propget]
        HRESULT ZOrder([out, retval] long* pRetVal);
        [id(0x60020057), propput]
        HRESULT ZOrder([in] long pRetVal);
        [id(0x60020059), propget]
        HRESULT Rotation([out, retval] double* pRetVal);
        [id(0x60020059), propput]
        HRESULT Rotation([in] double pRetVal);
        [id(0x6002005b), propget]
        HRESULT CoordOrigin([out, retval] Point* pRetVal);
        [id(0x6002005b), propput]
        HRESULT CoordOrigin([in] Point pRetVal);
        [id(0x6002005d), propget]
        HRESULT CoordSize([out, retval] Size* pRetVal);
        [id(0x6002005d), propput]
        HRESULT CoordSize([in] Size pRetVal);
        [id(0x6002005f), propget]
        HRESULT ScreenTip([out, retval] BSTR* pRetVal);
        [id(0x6002005f), propput]
        HRESULT ScreenTip([in] BSTR pRetVal);
        [id(0x60020061), propget]
        HRESULT HRef([out, retval] BSTR* pRetVal);
        [id(0x60020061), propput]
        HRESULT HRef([in] BSTR pRetVal);
        [id(0x60020063), propget]
        HRESULT Target([out, retval] BSTR* pRetVal);
        [id(0x60020063), propput]
        HRESULT Target([in] BSTR pRetVal);
        [id(0x60020065), propget]
        HRESULT AlternativeText([out, retval] BSTR* pRetVal);
        [id(0x60020065), propput]
        HRESULT AlternativeText([in] BSTR pRetVal);
        [id(0x60020067), propget]
        HRESULT IsTopLevel([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020068), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020069), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006a), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006b), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x6002006b), propput]
        HRESULT Name([in] BSTR pRetVal);
        [id(0x6002006d), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x6002006e), propget]
        HRESULT Filled([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006e), propput]
        HRESULT Filled([in] VARIANT_BOOL pRetVal);
        [id(0x60020070), propget]
        HRESULT FillColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020070), propput]
        HRESULT FillColor([in] OLE_COLOR pRetVal);
        [id(0x60020072), propget]
        HRESULT Stroked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020072), propput]
        HRESULT Stroked([in] VARIANT_BOOL pRetVal);
        [id(0x60020074), propget]
        HRESULT StrokeWeight([out, retval] double* pRetVal);
        [id(0x60020074), propput]
        HRESULT StrokeWeight([in] double pRetVal);
        [id(0x60020076), propget]
        HRESULT StrokeColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020076), propput]
        HRESULT StrokeColor([in] OLE_COLOR pRetVal);
        [id(0x60020078), propget]
        HRESULT Stroke([out, retval] _Stroke** pRetVal);
        [id(0x60020079), propget]
        HRESULT Fill([out, retval] _Fill** pRetVal);
        [id(0x6002007a), propget]
        HRESULT HasImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002007b), propget]
        HRESULT ImageData([out, retval] _ImageData** pRetVal);
        [id(0x6002007c), propget]
        HRESULT OleFormat([out, retval] _OleFormat** pRetVal);
        [id(0x6002007d), propget]
        HRESULT TextBox([out, retval] _TextBox** pRetVal);
        [id(0x6002007e), propget]
        HRESULT TextPath([out, retval] _TextPath** pRetVal);
        [id(0x6002007f), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020080), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
    };

    [
      odl,
      uuid(5CE58AE3-83F4-36BB-8F13-8E037CEA3213),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ShapeBase)    

    ]
    interface _ShapeBase : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028)]
        HRESULT LocalToParent(
                        [in] PointF value, 
                        [out, retval] PointF* pRetVal);
        [id(0x60020029), propget]
        HRESULT ShapeType([out, retval] ShapeType* pRetVal);
        [id(0x6002002a), propget]
        HRESULT IsGroup([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propget]
        HRESULT IsImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propget]
        HRESULT IsHorizontalRule([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT IsWordArt([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002e), propget]
        HRESULT CanHaveImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propget]
        HRESULT Left([out, retval] double* pRetVal);
        [id(0x6002002f), propput]
        HRESULT Left([in] double pRetVal);
        [id(0x60020031), propget]
        HRESULT Top([out, retval] double* pRetVal);
        [id(0x60020031), propput]
        HRESULT Top([in] double pRetVal);
        [id(0x60020033), propget]
        HRESULT Right([out, retval] double* pRetVal);
        [id(0x60020034), propget]
        HRESULT Bottom([out, retval] double* pRetVal);
        [id(0x60020035), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x60020035), propput]
        HRESULT Width([in] double pRetVal);
        [id(0x60020037), propget]
        HRESULT Height([out, retval] double* pRetVal);
        [id(0x60020037), propput]
        HRESULT Height([in] double pRetVal);
        [id(0x60020039), propget]
        HRESULT SizeInPoints([out, retval] SizeF* pRetVal);
        [id(0x6002003a), propget]
        HRESULT FlipOrientation([out, retval] FlipOrientation* pRetVal);
        [id(0x6002003a), propput]
        HRESULT FlipOrientation([in] FlipOrientation pRetVal);
        [id(0x6002003c), propget]
        HRESULT RelativeHorizontalPosition([out, retval] RelativeHorizontalPosition* pRetVal);
        [id(0x6002003c), propput]
        HRESULT RelativeHorizontalPosition([in] RelativeHorizontalPosition pRetVal);
        [id(0x6002003e), propget]
        HRESULT RelativeVerticalPosition([out, retval] RelativeVerticalPosition* pRetVal);
        [id(0x6002003e), propput]
        HRESULT RelativeVerticalPosition([in] RelativeVerticalPosition pRetVal);
        [id(0x60020040), propget]
        HRESULT HorizontalAlignment([out, retval] HorizontalAlignment* pRetVal);
        [id(0x60020040), propput]
        HRESULT HorizontalAlignment([in] HorizontalAlignment pRetVal);
        [id(0x60020042), propget]
        HRESULT VerticalAlignment([out, retval] VerticalAlignment* pRetVal);
        [id(0x60020042), propput]
        HRESULT VerticalAlignment([in] VerticalAlignment pRetVal);
        [id(0x60020044), propget]
        HRESULT WrapType([out, retval] WrapType* pRetVal);
        [id(0x60020044), propput]
        HRESULT WrapType([in] WrapType pRetVal);
        [id(0x60020046), propget]
        HRESULT WrapSide([out, retval] WrapSide* pRetVal);
        [id(0x60020046), propput]
        HRESULT WrapSide([in] WrapSide pRetVal);
        [id(0x60020048), propget]
        HRESULT AnchorLocked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020048), propput]
        HRESULT AnchorLocked([in] VARIANT_BOOL pRetVal);
        [id(0x6002004a), propget]
        HRESULT AllowOverlap([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004a), propput]
        HRESULT AllowOverlap([in] VARIANT_BOOL pRetVal);
        [id(0x6002004c), propget]
        HRESULT BehindText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004c), propput]
        HRESULT BehindText([in] VARIANT_BOOL pRetVal);
        [id(0x6002004e), propget]
        HRESULT DistanceTop([out, retval] double* pRetVal);
        [id(0x6002004e), propput]
        HRESULT DistanceTop([in] double pRetVal);
        [id(0x60020050), propget]
        HRESULT DistanceBottom([out, retval] double* pRetVal);
        [id(0x60020050), propput]
        HRESULT DistanceBottom([in] double pRetVal);
        [id(0x60020052), propget]
        HRESULT DistanceLeft([out, retval] double* pRetVal);
        [id(0x60020052), propput]
        HRESULT DistanceLeft([in] double pRetVal);
        [id(0x60020054), propget]
        HRESULT DistanceRight([out, retval] double* pRetVal);
        [id(0x60020054), propput]
        HRESULT DistanceRight([in] double pRetVal);
        [id(0x60020056), propget]
        HRESULT IsInline([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020057), propget]
        HRESULT ZOrder([out, retval] long* pRetVal);
        [id(0x60020057), propput]
        HRESULT ZOrder([in] long pRetVal);
        [id(0x60020059), propget]
        HRESULT Rotation([out, retval] double* pRetVal);
        [id(0x60020059), propput]
        HRESULT Rotation([in] double pRetVal);
        [id(0x6002005b), propget]
        HRESULT CoordOrigin([out, retval] Point* pRetVal);
        [id(0x6002005b), propput]
        HRESULT CoordOrigin([in] Point pRetVal);
        [id(0x6002005d), propget]
        HRESULT CoordSize([out, retval] Size* pRetVal);
        [id(0x6002005d), propput]
        HRESULT CoordSize([in] Size pRetVal);
        [id(0x6002005f), propget]
        HRESULT ScreenTip([out, retval] BSTR* pRetVal);
        [id(0x6002005f), propput]
        HRESULT ScreenTip([in] BSTR pRetVal);
        [id(0x60020061), propget]
        HRESULT HRef([out, retval] BSTR* pRetVal);
        [id(0x60020061), propput]
        HRESULT HRef([in] BSTR pRetVal);
        [id(0x60020063), propget]
        HRESULT Target([out, retval] BSTR* pRetVal);
        [id(0x60020063), propput]
        HRESULT Target([in] BSTR pRetVal);
        [id(0x60020065), propget]
        HRESULT AlternativeText([out, retval] BSTR* pRetVal);
        [id(0x60020065), propput]
        HRESULT AlternativeText([in] BSTR pRetVal);
        [id(0x60020067), propget]
        HRESULT IsTopLevel([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020068), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020069), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006a), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006b), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x6002006b), propput]
        HRESULT Name([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(EE42276F-552A-32B1-8B02-158108ABAFC4),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.DropDownItemCollection)    

    ]
    interface _DropDownItemCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Clear();
        [id(0x60020005)]
        HRESULT RemoveAt([in] long index);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] BSTR* pRetVal);
        [id(00000000), propput]
        HRESULT Item(
                        [in] long index, 
                        [in] BSTR pRetVal);
        [id(0x6002000a)]
        HRESULT Add(
                        [in] BSTR s, 
                        [out, retval] long* pRetVal);
        [id(0x6002000b)]
        HRESULT Insert(
                        [in] long index, 
                        [in] BSTR value);
    };

    [
      odl,
      uuid(50FE8941-F14E-3B88-8C4B-767D6F5F7FC3),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ImageData)    

    ]
    interface _ImageData : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT SetImage([in] _Image* image);
        [id(0x60020005),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SetImage)]
        HRESULT SetImage_2([in] BSTR fileName);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SetImage)]
        HRESULT SetImage_3([in] _Stream* stream);
        [id(0x60020007),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SetImage)]
        HRESULT SetImage_4([in] SAFEARRAY(unsigned char) imageBytes);
        [id(0x60020008)]
        HRESULT ToImage([out, retval] _Image** pRetVal);
        [id(0x60020009)]
        HRESULT ToStream([out, retval] _Stream** pRetVal);
        [id(0x6002000a)]
        HRESULT ToByteArray([out, retval] SAFEARRAY(unsigned char)* pRetVal);
        [id(0x6002000b)]
        HRESULT Save([in] _Stream* stream);
        [id(0x6002000c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_2([in] BSTR fileName);
        [id(0x6002000d), propget]
        HRESULT imageBytes([out, retval] SAFEARRAY(unsigned char)* pRetVal);
        [id(0x6002000e), propget]
        HRESULT HasImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000f), propget]
        HRESULT ImageSize([out, retval] _ImageSize** pRetVal);
        [id(0x60020010), propget]
        HRESULT ImageType([out, retval] ImageType* pRetVal);
        [id(0x60020011), propget]
        HRESULT SourceFullName([out, retval] BSTR* pRetVal);
        [id(0x60020011), propput]
        HRESULT SourceFullName([in] BSTR pRetVal);
        [id(0x60020013), propget]
        HRESULT IsLink([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020014), propget]
        HRESULT IsLinkOnly([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020015), propget]
        HRESULT Title([out, retval] BSTR* pRetVal);
        [id(0x60020015), propput]
        HRESULT Title([in] BSTR pRetVal);
        [id(0x60020017), propget]
        HRESULT CropTop([out, retval] double* pRetVal);
        [id(0x60020017), propput]
        HRESULT CropTop([in] double pRetVal);
        [id(0x60020019), propget]
        HRESULT CropBottom([out, retval] double* pRetVal);
        [id(0x60020019), propput]
        HRESULT CropBottom([in] double pRetVal);
        [id(0x6002001b), propget]
        HRESULT CropLeft([out, retval] double* pRetVal);
        [id(0x6002001b), propput]
        HRESULT CropLeft([in] double pRetVal);
        [id(0x6002001d), propget]
        HRESULT CropRight([out, retval] double* pRetVal);
        [id(0x6002001d), propput]
        HRESULT CropRight([in] double pRetVal);
        [id(0x6002001f), propget]
        HRESULT Borders([out, retval] _BorderCollection** pRetVal);
        [id(0x60020020), propget]
        HRESULT ChromaKey([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020020), propput]
        HRESULT ChromaKey([in] OLE_COLOR pRetVal);
        [id(0x60020022), propget]
        HRESULT Brightness([out, retval] double* pRetVal);
        [id(0x60020022), propput]
        HRESULT Brightness([in] double pRetVal);
        [id(0x60020024), propget]
        HRESULT Contrast([out, retval] double* pRetVal);
        [id(0x60020024), propput]
        HRESULT Contrast([in] double pRetVal);
        [id(0x60020026), propget]
        HRESULT BiLevel([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020026), propput]
        HRESULT BiLevel([in] VARIANT_BOOL pRetVal);
        [id(0x60020028), propget]
        HRESULT GrayScale([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020028), propput]
        HRESULT GrayScale([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(F2373CBA-C508-38A9-9DC5-ABAD0EE2CD17),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.ImageSize)    

    ]
    interface _ImageSize : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT WidthPixels([out, retval] long* pRetVal);
        [id(0x60020005), propget]
        HRESULT HeightPixels([out, retval] long* pRetVal);
        [id(0x60020006), propget]
        HRESULT HorizontalResolution([out, retval] double* pRetVal);
        [id(0x60020007), propget]
        HRESULT VerticalResolution([out, retval] double* pRetVal);
        [id(0x60020008), propget]
        HRESULT WidthPoints([out, retval] double* pRetVal);
        [id(0x60020009), propget]
        HRESULT HeightPoints([out, retval] double* pRetVal);
    };

    [
      odl,
      uuid(273C7BF2-94B5-3C70-92D6-CADE64D1D759),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ConvertUtil)    

    ]
    interface _ConvertUtil : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
    };

    [
      odl,
      uuid(C0AA915A-1955-3FB8-B898-D141B69EFB18),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FormField)    

    ]
    interface _FormField : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018)]
        HRESULT SetTextInputValue([in] VARIANT newValue);
        [id(0x60020019), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020019), propput]
        HRESULT Name([in] BSTR pRetVal);
        [id(0x6002001b), propget]
        HRESULT type([out, retval] FieldType* pRetVal);
        [id(0x6002001c), propget]
        HRESULT result([out, retval] BSTR* pRetVal);
        [id(0x6002001c), propput]
        HRESULT result([in] BSTR pRetVal);
        [id(0x6002001e), propget]
        HRESULT StatusText([out, retval] BSTR* pRetVal);
        [id(0x6002001e), propput]
        HRESULT StatusText([in] BSTR pRetVal);
        [id(0x60020020), propget]
        HRESULT OwnStatus([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020020), propput]
        HRESULT OwnStatus([in] VARIANT_BOOL pRetVal);
        [id(0x60020022), propget]
        HRESULT HelpText([out, retval] BSTR* pRetVal);
        [id(0x60020022), propput]
        HRESULT HelpText([in] BSTR pRetVal);
        [id(0x60020024), propget]
        HRESULT OwnHelp([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020024), propput]
        HRESULT OwnHelp([in] VARIANT_BOOL pRetVal);
        [id(0x60020026), propget]
        HRESULT CalculateOnExit([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020026), propput]
        HRESULT CalculateOnExit([in] VARIANT_BOOL pRetVal);
        [id(0x60020028), propget]
        HRESULT EntryMacro([out, retval] BSTR* pRetVal);
        [id(0x60020028), propput]
        HRESULT EntryMacro([in] BSTR pRetVal);
        [id(0x6002002a), propget]
        HRESULT ExitMacro([out, retval] BSTR* pRetVal);
        [id(0x6002002a), propput]
        HRESULT ExitMacro([in] BSTR pRetVal);
        [id(0x6002002c), propget]
        HRESULT Enabled([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propput]
        HRESULT Enabled([in] VARIANT_BOOL pRetVal);
        [id(0x6002002e), propget]
        HRESULT TextInputFormat([out, retval] BSTR* pRetVal);
        [id(0x6002002e), propput]
        HRESULT TextInputFormat([in] BSTR pRetVal);
        [id(0x60020030), propget]
        HRESULT TextInputType([out, retval] TextFormFieldType* pRetVal);
        [id(0x60020030), propput]
        HRESULT TextInputType([in] TextFormFieldType pRetVal);
        [id(0x60020032), propget]
        HRESULT MaxLength([out, retval] long* pRetVal);
        [id(0x60020032), propput]
        HRESULT MaxLength([in] long pRetVal);
        [id(0x60020034), propget]
        HRESULT DropDownItems([out, retval] _DropDownItemCollection** pRetVal);
        [id(0x60020035), propget]
        HRESULT DropDownSelectedIndex([out, retval] long* pRetVal);
        [id(0x60020035), propput]
        HRESULT DropDownSelectedIndex([in] long pRetVal);
        [id(0x60020037), propget]
        HRESULT Checked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020037), propput]
        HRESULT Checked([in] VARIANT_BOOL pRetVal);
        [id(0x60020039), propget]
        HRESULT IsCheckBoxExactSize([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020039), propput]
        HRESULT IsCheckBoxExactSize([in] VARIANT_BOOL pRetVal);
        [id(0x6002003b), propget]
        HRESULT CheckBoxSize([out, retval] double* pRetVal);
        [id(0x6002003b), propput]
        HRESULT CheckBoxSize([in] double pRetVal);
    };

    [
      odl,
      uuid(D7422126-3313-36BF-819F-AC5A83C0F01E),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.GroupShape)    

    ]
    interface _GroupShape : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028)]
        HRESULT LocalToParent(
                        [in] PointF value, 
                        [out, retval] PointF* pRetVal);
        [id(0x60020029), propget]
        HRESULT ShapeType([out, retval] ShapeType* pRetVal);
        [id(0x6002002a), propget]
        HRESULT IsGroup([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propget]
        HRESULT IsImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propget]
        HRESULT IsHorizontalRule([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT IsWordArt([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002e), propget]
        HRESULT CanHaveImage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propget]
        HRESULT Left([out, retval] double* pRetVal);
        [id(0x6002002f), propput]
        HRESULT Left([in] double pRetVal);
        [id(0x60020031), propget]
        HRESULT Top([out, retval] double* pRetVal);
        [id(0x60020031), propput]
        HRESULT Top([in] double pRetVal);
        [id(0x60020033), propget]
        HRESULT Right([out, retval] double* pRetVal);
        [id(0x60020034), propget]
        HRESULT Bottom([out, retval] double* pRetVal);
        [id(0x60020035), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x60020035), propput]
        HRESULT Width([in] double pRetVal);
        [id(0x60020037), propget]
        HRESULT Height([out, retval] double* pRetVal);
        [id(0x60020037), propput]
        HRESULT Height([in] double pRetVal);
        [id(0x60020039), propget]
        HRESULT SizeInPoints([out, retval] SizeF* pRetVal);
        [id(0x6002003a), propget]
        HRESULT FlipOrientation([out, retval] FlipOrientation* pRetVal);
        [id(0x6002003a), propput]
        HRESULT FlipOrientation([in] FlipOrientation pRetVal);
        [id(0x6002003c), propget]
        HRESULT RelativeHorizontalPosition([out, retval] RelativeHorizontalPosition* pRetVal);
        [id(0x6002003c), propput]
        HRESULT RelativeHorizontalPosition([in] RelativeHorizontalPosition pRetVal);
        [id(0x6002003e), propget]
        HRESULT RelativeVerticalPosition([out, retval] RelativeVerticalPosition* pRetVal);
        [id(0x6002003e), propput]
        HRESULT RelativeVerticalPosition([in] RelativeVerticalPosition pRetVal);
        [id(0x60020040), propget]
        HRESULT HorizontalAlignment([out, retval] HorizontalAlignment* pRetVal);
        [id(0x60020040), propput]
        HRESULT HorizontalAlignment([in] HorizontalAlignment pRetVal);
        [id(0x60020042), propget]
        HRESULT VerticalAlignment([out, retval] VerticalAlignment* pRetVal);
        [id(0x60020042), propput]
        HRESULT VerticalAlignment([in] VerticalAlignment pRetVal);
        [id(0x60020044), propget]
        HRESULT WrapType([out, retval] WrapType* pRetVal);
        [id(0x60020044), propput]
        HRESULT WrapType([in] WrapType pRetVal);
        [id(0x60020046), propget]
        HRESULT WrapSide([out, retval] WrapSide* pRetVal);
        [id(0x60020046), propput]
        HRESULT WrapSide([in] WrapSide pRetVal);
        [id(0x60020048), propget]
        HRESULT AnchorLocked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020048), propput]
        HRESULT AnchorLocked([in] VARIANT_BOOL pRetVal);
        [id(0x6002004a), propget]
        HRESULT AllowOverlap([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004a), propput]
        HRESULT AllowOverlap([in] VARIANT_BOOL pRetVal);
        [id(0x6002004c), propget]
        HRESULT BehindText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004c), propput]
        HRESULT BehindText([in] VARIANT_BOOL pRetVal);
        [id(0x6002004e), propget]
        HRESULT DistanceTop([out, retval] double* pRetVal);
        [id(0x6002004e), propput]
        HRESULT DistanceTop([in] double pRetVal);
        [id(0x60020050), propget]
        HRESULT DistanceBottom([out, retval] double* pRetVal);
        [id(0x60020050), propput]
        HRESULT DistanceBottom([in] double pRetVal);
        [id(0x60020052), propget]
        HRESULT DistanceLeft([out, retval] double* pRetVal);
        [id(0x60020052), propput]
        HRESULT DistanceLeft([in] double pRetVal);
        [id(0x60020054), propget]
        HRESULT DistanceRight([out, retval] double* pRetVal);
        [id(0x60020054), propput]
        HRESULT DistanceRight([in] double pRetVal);
        [id(0x60020056), propget]
        HRESULT IsInline([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020057), propget]
        HRESULT ZOrder([out, retval] long* pRetVal);
        [id(0x60020057), propput]
        HRESULT ZOrder([in] long pRetVal);
        [id(0x60020059), propget]
        HRESULT Rotation([out, retval] double* pRetVal);
        [id(0x60020059), propput]
        HRESULT Rotation([in] double pRetVal);
        [id(0x6002005b), propget]
        HRESULT CoordOrigin([out, retval] Point* pRetVal);
        [id(0x6002005b), propput]
        HRESULT CoordOrigin([in] Point pRetVal);
        [id(0x6002005d), propget]
        HRESULT CoordSize([out, retval] Size* pRetVal);
        [id(0x6002005d), propput]
        HRESULT CoordSize([in] Size pRetVal);
        [id(0x6002005f), propget]
        HRESULT ScreenTip([out, retval] BSTR* pRetVal);
        [id(0x6002005f), propput]
        HRESULT ScreenTip([in] BSTR pRetVal);
        [id(0x60020061), propget]
        HRESULT HRef([out, retval] BSTR* pRetVal);
        [id(0x60020061), propput]
        HRESULT HRef([in] BSTR pRetVal);
        [id(0x60020063), propget]
        HRESULT Target([out, retval] BSTR* pRetVal);
        [id(0x60020063), propput]
        HRESULT Target([in] BSTR pRetVal);
        [id(0x60020065), propget]
        HRESULT AlternativeText([out, retval] BSTR* pRetVal);
        [id(0x60020065), propput]
        HRESULT AlternativeText([in] BSTR pRetVal);
        [id(0x60020067), propget]
        HRESULT IsTopLevel([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020068), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020069), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006a), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006b), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x6002006b), propput]
        HRESULT Name([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(13B9B2B6-F28F-376B-9CF3-8AFB77511466),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.OleFormat)    

    ]
    interface _OleFormat : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Save([in] _Stream* stream);
        [id(0x60020005),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_2([in] BSTR fileName);
        [id(0x60020006)]
        HRESULT GetOleEntry(
                        [in] BSTR oleEntryName, 
                        [out, retval] _MemoryStream** pRetVal);
        [id(0x60020007), propget]
        HRESULT ProgId([out, retval] BSTR* pRetVal);
        [id(0x60020007), propput]
        HRESULT ProgId([in] BSTR pRetVal);
        [id(0x60020009), propget]
        HRESULT IsLink([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propget]
        HRESULT SourceFullName([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT SourceFullName([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT SourceItem([out, retval] BSTR* pRetVal);
        [id(0x6002000c), propput]
        HRESULT SourceItem([in] BSTR pRetVal);
        [id(0x6002000e), propget]
        HRESULT AutoUpdate([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT AutoUpdate([in] VARIANT_BOOL pRetVal);
        [id(0x60020010), propget]
        HRESULT OleIcon([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020010), propput]
        HRESULT OleIcon([in] VARIANT_BOOL pRetVal);
        [id(0x60020012), propget]
        HRESULT IsLocked([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020012), propput]
        HRESULT IsLocked([in] VARIANT_BOOL pRetVal);
        [id(0x60020014), propget]
        HRESULT Clsid([out, retval] GUID* pRetVal);
    };

    [
      odl,
      uuid(829516B4-CB74-3A26-9403-C68EF5C81BBF),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Stroke)    

    ]
    interface _Stroke : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT On([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020004), propput]
        HRESULT On([in] VARIANT_BOOL pRetVal);
        [id(0x60020006), propget]
        HRESULT Weight([out, retval] double* pRetVal);
        [id(0x60020006), propput]
        HRESULT Weight([in] double pRetVal);
        [id(0x60020008), propget]
        HRESULT Color([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020008), propput]
        HRESULT Color([in] OLE_COLOR pRetVal);
        [id(0x6002000a), propget]
        HRESULT Color2([out, retval] OLE_COLOR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT Color2([in] OLE_COLOR pRetVal);
        [id(0x6002000c), propget]
        HRESULT DashStyle([out, retval] DashStyle* pRetVal);
        [id(0x6002000c), propput]
        HRESULT DashStyle([in] DashStyle pRetVal);
        [id(0x6002000e), propget]
        HRESULT JoinStyle([out, retval] JoinStyle* pRetVal);
        [id(0x6002000e), propput]
        HRESULT JoinStyle([in] JoinStyle pRetVal);
        [id(0x60020010), propget]
        HRESULT EndCap([out, retval] EndCap* pRetVal);
        [id(0x60020010), propput]
        HRESULT EndCap([in] EndCap pRetVal);
        [id(0x60020012), propget]
        HRESULT LineStyle([out, retval] ShapeLineStyle* pRetVal);
        [id(0x60020012), propput]
        HRESULT LineStyle([in] ShapeLineStyle pRetVal);
        [id(0x60020014), propget]
        HRESULT StartArrowType([out, retval] ArrowType* pRetVal);
        [id(0x60020014), propput]
        HRESULT StartArrowType([in] ArrowType pRetVal);
        [id(0x60020016), propget]
        HRESULT EndArrowType([out, retval] ArrowType* pRetVal);
        [id(0x60020016), propput]
        HRESULT EndArrowType([in] ArrowType pRetVal);
        [id(0x60020018), propget]
        HRESULT StartArrowWidth([out, retval] ArrowWidth* pRetVal);
        [id(0x60020018), propput]
        HRESULT StartArrowWidth([in] ArrowWidth pRetVal);
        [id(0x6002001a), propget]
        HRESULT StartArrowLength([out, retval] ArrowLength* pRetVal);
        [id(0x6002001a), propput]
        HRESULT StartArrowLength([in] ArrowLength pRetVal);
        [id(0x6002001c), propget]
        HRESULT EndArrowWidth([out, retval] ArrowWidth* pRetVal);
        [id(0x6002001c), propput]
        HRESULT EndArrowWidth([in] ArrowWidth pRetVal);
        [id(0x6002001e), propget]
        HRESULT EndArrowLength([out, retval] ArrowLength* pRetVal);
        [id(0x6002001e), propput]
        HRESULT EndArrowLength([in] ArrowLength pRetVal);
        [id(0x60020020), propget]
        HRESULT Opacity([out, retval] double* pRetVal);
        [id(0x60020020), propput]
        HRESULT Opacity([in] double pRetVal);
        [id(0x60020022), propget]
        HRESULT imageBytes([out, retval] SAFEARRAY(unsigned char)* pRetVal);
    };

    [
      odl,
      uuid(ABB5BCAB-5041-3789-8525-29EC37A53870),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.Fill)    

    ]
    interface _Fill : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Color([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020004), propput]
        HRESULT Color([in] OLE_COLOR pRetVal);
        [id(0x60020006), propget]
        HRESULT Opacity([out, retval] double* pRetVal);
        [id(0x60020006), propput]
        HRESULT Opacity([in] double pRetVal);
        [id(0x60020008), propget]
        HRESULT On([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008), propput]
        HRESULT On([in] VARIANT_BOOL pRetVal);
        [id(0x6002000a), propget]
        HRESULT imageBytes([out, retval] SAFEARRAY(unsigned char)* pRetVal);
    };

    [
      odl,
      uuid(5B4E22CD-F663-3CD2-A65D-AD4A23DD3836),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextBox)    

    ]
    interface _TextBox : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT InternalMarginLeft([out, retval] double* pRetVal);
        [id(0x60020004), propput]
        HRESULT InternalMarginLeft([in] double pRetVal);
        [id(0x60020006), propget]
        HRESULT InternalMarginRight([out, retval] double* pRetVal);
        [id(0x60020006), propput]
        HRESULT InternalMarginRight([in] double pRetVal);
        [id(0x60020008), propget]
        HRESULT InternalMarginTop([out, retval] double* pRetVal);
        [id(0x60020008), propput]
        HRESULT InternalMarginTop([in] double pRetVal);
        [id(0x6002000a), propget]
        HRESULT InternalMarginBottom([out, retval] double* pRetVal);
        [id(0x6002000a), propput]
        HRESULT InternalMarginBottom([in] double pRetVal);
        [id(0x6002000c), propget]
        HRESULT FitShapeToText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propput]
        HRESULT FitShapeToText([in] VARIANT_BOOL pRetVal);
        [id(0x6002000e), propget]
        HRESULT LayoutFlow([out, retval] LayoutFlow* pRetVal);
        [id(0x6002000e), propput]
        HRESULT LayoutFlow([in] LayoutFlow pRetVal);
        [id(0x60020010), propget]
        HRESULT TextBoxWrapMode([out, retval] TextBoxWrapMode* pRetVal);
        [id(0x60020010), propput]
        HRESULT TextBoxWrapMode([in] TextBoxWrapMode pRetVal);
    };

    [
      odl,
      uuid(FA7EFCED-D530-33A2-B8F9-048821C1DE42),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Drawing.TextPath)    

    ]
    interface _TextPath : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT On([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020004), propput]
        HRESULT On([in] VARIANT_BOOL pRetVal);
        [id(0x60020006), propget]
        HRESULT FitPath([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006), propput]
        HRESULT FitPath([in] VARIANT_BOOL pRetVal);
        [id(0x60020008), propget]
        HRESULT FitShape([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008), propput]
        HRESULT FitShape([in] VARIANT_BOOL pRetVal);
        [id(0x6002000a), propget]
        HRESULT FontFamily([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT FontFamily([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT Size([out, retval] double* pRetVal);
        [id(0x6002000c), propput]
        HRESULT Size([in] double pRetVal);
        [id(0x6002000e), propget]
        HRESULT Bold([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT Bold([in] VARIANT_BOOL pRetVal);
        [id(0x60020010), propget]
        HRESULT Italic([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020010), propput]
        HRESULT Italic([in] VARIANT_BOOL pRetVal);
        [id(0x60020012), propget]
        HRESULT SmallCaps([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020012), propput]
        HRESULT SmallCaps([in] VARIANT_BOOL pRetVal);
        [id(0x60020014), propget]
        HRESULT RotateLetters([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020014), propput]
        HRESULT RotateLetters([in] VARIANT_BOOL pRetVal);
        [id(0x60020016), propget]
        HRESULT Trim([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propput]
        HRESULT Trim([in] VARIANT_BOOL pRetVal);
        [id(0x60020018), propget]
        HRESULT Kerning([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propput]
        HRESULT Kerning([in] VARIANT_BOOL pRetVal);
        [id(0x6002001a), propget]
        HRESULT Shadow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001a), propput]
        HRESULT Shadow([in] VARIANT_BOOL pRetVal);
        [id(0x6002001c), propget]
        HRESULT Underline([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001c), propput]
        HRESULT Underline([in] VARIANT_BOOL pRetVal);
        [id(0x6002001e), propget]
        HRESULT StrikeThrough([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001e), propput]
        HRESULT StrikeThrough([in] VARIANT_BOOL pRetVal);
        [id(0x60020020), propget]
        HRESULT SameLetterHeights([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020020), propput]
        HRESULT SameLetterHeights([in] VARIANT_BOOL pRetVal);
        [id(0x60020022), propget]
        HRESULT Text([out, retval] BSTR* pRetVal);
        [id(0x60020022), propput]
        HRESULT Text([in] BSTR pRetVal);
        [id(0x60020024), propget]
        HRESULT TextPathAlignment([out, retval] TextPathAlignment* pRetVal);
        [id(0x60020024), propput]
        HRESULT TextPathAlignment([in] TextPathAlignment pRetVal);
        [id(0x60020026), propget]
        HRESULT ReverseRows([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020026), propput]
        HRESULT ReverseRows([in] VARIANT_BOOL pRetVal);
        [id(0x60020028), propget]
        HRESULT Spacing([out, retval] double* pRetVal);
        [id(0x60020028), propput]
        HRESULT Spacing([in] double pRetVal);
        [id(0x6002002a), propget]
        HRESULT XScale([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propput]
        HRESULT XScale([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(08736A62-CDA0-31D0-9251-D3E1B67A0848),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Section)    

    ]
    interface _Section : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT Body([out, retval] _Body** pRetVal);
        [id(0x60020029), propget]
        HRESULT HeadersFooters([out, retval] _HeaderFooterCollection** pRetVal);
        [id(0x6002002a), propget]
        HRESULT PageSetup([out, retval] _PageSetup** pRetVal);
        [id(0x6002002b), propget]
        HRESULT ProtectedForForms([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propput]
        HRESULT ProtectedForForms([in] VARIANT_BOOL pRetVal);
        [id(0x6002002d),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Clone)]
        HRESULT Clone_2([out, retval] _Section** pRetVal);
        [id(0x6002002e)]
        HRESULT PrependContent([in] _Section* sourceSection);
        [id(0x6002002f)]
        HRESULT AppendContent([in] _Section* sourceSection);
        [id(0x60020030)]
        HRESULT ClearContent();
        [id(0x60020031)]
        HRESULT ClearHeadersFooters();
        [id(0x60020032)]
        HRESULT DeleteHeaderFooterShapes();
        [id(0x60020033)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(C76C02B4-C93F-3CE4-AA69-2B4A05DBE0AE),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SpecialChar)    

    ]
    interface _SpecialChar : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(384B5FA2-86A3-3A22-B3A9-44E9D85F42D9),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.MailMergeSettings)    

    ]
    interface _MailMergeSettings : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Clear();
        [id(0x60020005)]
        HRESULT Clone([out, retval] _MailMergeSettings** pRetVal);
        [id(0x60020006), propget]
        HRESULT ActiveRecord([out, retval] long* pRetVal);
        [id(0x60020006), propput]
        HRESULT ActiveRecord([in] long pRetVal);
        [id(0x60020008), propget]
        HRESULT AddressFieldName([out, retval] BSTR* pRetVal);
        [id(0x60020008), propput]
        HRESULT AddressFieldName([in] BSTR pRetVal);
        [id(0x6002000a), propget]
        HRESULT CheckErrors([out, retval] MailMergeCheckErrors* pRetVal);
        [id(0x6002000a), propput]
        HRESULT CheckErrors([in] MailMergeCheckErrors pRetVal);
        [id(0x6002000c), propget]
        HRESULT ConnectString([out, retval] BSTR* pRetVal);
        [id(0x6002000c), propput]
        HRESULT ConnectString([in] BSTR pRetVal);
        [id(0x6002000e), propget]
        HRESULT DataSource([out, retval] BSTR* pRetVal);
        [id(0x6002000e), propput]
        HRESULT DataSource([in] BSTR pRetVal);
        [id(0x60020010), propget]
        HRESULT DataType([out, retval] MailMergeDataType* pRetVal);
        [id(0x60020010), propput]
        HRESULT DataType([in] MailMergeDataType pRetVal);
        [id(0x60020012), propget]
        HRESULT Destination([out, retval] MailMergeDestination* pRetVal);
        [id(0x60020012), propput]
        HRESULT Destination([in] MailMergeDestination pRetVal);
        [id(0x60020014), propget]
        HRESULT DoNotSupressBlankLines([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020014), propput]
        HRESULT DoNotSupressBlankLines([in] VARIANT_BOOL pRetVal);
        [id(0x60020016), propget]
        HRESULT HeaderSource([out, retval] BSTR* pRetVal);
        [id(0x60020016), propput]
        HRESULT HeaderSource([in] BSTR pRetVal);
        [id(0x60020018), propget]
        HRESULT LinkToQuery([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propput]
        HRESULT LinkToQuery([in] VARIANT_BOOL pRetVal);
        [id(0x6002001a), propget]
        HRESULT MailAsAttachment([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001a), propput]
        HRESULT MailAsAttachment([in] VARIANT_BOOL pRetVal);
        [id(0x6002001c), propget]
        HRESULT MailSubject([out, retval] BSTR* pRetVal);
        [id(0x6002001c), propput]
        HRESULT MailSubject([in] BSTR pRetVal);
        [id(0x6002001e), propget]
        HRESULT MainDocumentType([out, retval] MailMergeMainDocumentType* pRetVal);
        [id(0x6002001e), propput]
        HRESULT MainDocumentType([in] MailMergeMainDocumentType pRetVal);
        [id(0x60020020), propget]
        HRESULT Odso([out, retval] _Odso** pRetVal);
        [id(0x60020020), propputref]
        HRESULT Odso([in] _Odso* pRetVal);
        [id(0x60020022), propget]
        HRESULT Query([out, retval] BSTR* pRetVal);
        [id(0x60020022), propput]
        HRESULT Query([in] BSTR pRetVal);
        [id(0x60020024), propget]
        HRESULT ViewMergedData([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020024), propput]
        HRESULT ViewMergedData([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(D711EB0A-AA23-35B9-8733-AB1776B23C4D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.Odso)    

    ]
    interface _Odso : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Clone([out, retval] _Odso** pRetVal);
        [id(0x60020005), propget]
        HRESULT ColumnDelimeter([out, retval] unsigned short* pRetVal);
        [id(0x60020005), propput]
        HRESULT ColumnDelimeter([in] unsigned short pRetVal);
        [id(0x60020007), propget]
        HRESULT FirstRowContainsColumnNames([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propput]
        HRESULT FirstRowContainsColumnNames([in] VARIANT_BOOL pRetVal);
        [id(0x60020009), propget]
        HRESULT DataSource([out, retval] BSTR* pRetVal);
        [id(0x60020009), propput]
        HRESULT DataSource([in] BSTR pRetVal);
        [id(0x6002000b), propget]
        HRESULT TableName([out, retval] BSTR* pRetVal);
        [id(0x6002000b), propput]
        HRESULT TableName([in] BSTR pRetVal);
        [id(0x6002000d), propget]
        HRESULT DataSourceType([out, retval] OdsoDataSourceType* pRetVal);
        [id(0x6002000d), propput]
        HRESULT DataSourceType([in] OdsoDataSourceType pRetVal);
        [id(0x6002000f), propget]
        HRESULT UdlConnectString([out, retval] BSTR* pRetVal);
        [id(0x6002000f), propput]
        HRESULT UdlConnectString([in] BSTR pRetVal);
        [id(0x60020011), propget]
        HRESULT FieldMapDatas([out, retval] _OdsoFieldMapDataCollection** pRetVal);
        [id(0x60020011), propputref]
        HRESULT FieldMapDatas([in] _OdsoFieldMapDataCollection* pRetVal);
        [id(0x60020013), propget]
        HRESULT RecipientDatas([out, retval] _OdsoRecipientDataCollection** pRetVal);
        [id(0x60020013), propputref]
        HRESULT RecipientDatas([in] _OdsoRecipientDataCollection* pRetVal);
    };

    [
      odl,
      uuid(AF1F608F-EF3E-3001-B559-91633F7925DB),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.OdsoFieldMapDataCollection)    

    ]
    interface _OdsoFieldMapDataCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _OdsoFieldMapData** pRetVal);
        [id(00000000), propputref]
        HRESULT Item(
                        [in] long index, 
                        [in] _OdsoFieldMapData* pRetVal);
        [id(0x60020008)]
        HRESULT Add(
                        [in] _OdsoFieldMapData* value, 
                        [out, retval] long* pRetVal);
        [id(0x60020009)]
        HRESULT Clear();
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
    };

    [
      odl,
      uuid(5497A382-6C72-35E4-AC68-2D22A22AFE5F),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.OdsoFieldMapData)    

    ]
    interface _OdsoFieldMapData : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Clone([out, retval] _OdsoFieldMapData** pRetVal);
        [id(0x60020005), propget]
        HRESULT Column([out, retval] long* pRetVal);
        [id(0x60020005), propput]
        HRESULT Column([in] long pRetVal);
        [id(0x60020007), propget]
        HRESULT MappedName([out, retval] BSTR* pRetVal);
        [id(0x60020007), propput]
        HRESULT MappedName([in] BSTR pRetVal);
        [id(0x60020009), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020009), propput]
        HRESULT Name([in] BSTR pRetVal);
        [id(0x6002000b), propget]
        HRESULT type([out, retval] OdsoFieldMappingType* pRetVal);
        [id(0x6002000b), propput]
        HRESULT type([in] OdsoFieldMappingType pRetVal);
    };

    [
      odl,
      uuid(AF2C2C69-3EDB-3371-91F7-FE4F4187E8FC),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.OdsoRecipientDataCollection)    

    ]
    interface _OdsoRecipientDataCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _OdsoRecipientData** pRetVal);
        [id(00000000), propputref]
        HRESULT Item(
                        [in] long index, 
                        [in] _OdsoRecipientData* pRetVal);
        [id(0x60020008)]
        HRESULT Add(
                        [in] _OdsoRecipientData* value, 
                        [out, retval] long* pRetVal);
        [id(0x60020009)]
        HRESULT Clear();
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
    };

    [
      odl,
      uuid(058EEF65-D572-3DE4-A3F5-21F14BACEFBB),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.OdsoRecipientData)    

    ]
    interface _OdsoRecipientData : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Clone([out, retval] _OdsoRecipientData** pRetVal);
        [id(0x60020005), propget]
        HRESULT Active([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020005), propput]
        HRESULT Active([in] VARIANT_BOOL pRetVal);
        [id(0x60020007), propget]
        HRESULT Column([out, retval] long* pRetVal);
        [id(0x60020007), propput]
        HRESULT Column([in] long pRetVal);
        [id(0x60020009), propget]
        HRESULT UniqueTag([out, retval] SAFEARRAY(unsigned char)* pRetVal);
        [id(0x60020009), propput]
        HRESULT UniqueTag([in] SAFEARRAY(unsigned char) pRetVal);
        [id(0x6002000b), propget]
        HRESULT Hash([out, retval] long* pRetVal);
        [id(0x6002000b), propput]
        HRESULT Hash([in] long pRetVal);
    };

    [
      odl,
      uuid(D3043B81-2162-3E5D-9865-DDE801F407DB),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.WriteProtection)    

    ]
    interface _WriteProtection : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT ReadOnlyRecommended([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020004), propput]
        HRESULT ReadOnlyRecommended([in] VARIANT_BOOL pRetVal);
        [id(0x60020006)]
        HRESULT SetPassword([in] BSTR password);
        [id(0x60020007), propget]
        HRESULT IsWriteProtected([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(4A4654E5-D1F8-3684-B7CA-E0ED5165B644),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextColumn)    

    ]
    interface _TextColumn : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x60020004), propput]
        HRESULT Width([in] double pRetVal);
        [id(0x60020006), propget]
        HRESULT SpaceAfter([out, retval] double* pRetVal);
        [id(0x60020006), propput]
        HRESULT SpaceAfter([in] double pRetVal);
    };

    [
      odl,
      uuid(67E8A3AA-DF1D-3979-995A-E36B252A7A0F),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.CompatibilityOptions)    

    ]
    interface _CompatibilityOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NoTabHangInd([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020004), propput]
        HRESULT NoTabHangInd([in] VARIANT_BOOL pRetVal);
        [id(0x60020006), propget]
        HRESULT NoSpaceRaiseLower([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006), propput]
        HRESULT NoSpaceRaiseLower([in] VARIANT_BOOL pRetVal);
        [id(0x60020008), propget]
        HRESULT SuppressSpBfAfterPgBrk([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008), propput]
        HRESULT SuppressSpBfAfterPgBrk([in] VARIANT_BOOL pRetVal);
        [id(0x6002000a), propget]
        HRESULT WrapTrailSpaces([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propput]
        HRESULT WrapTrailSpaces([in] VARIANT_BOOL pRetVal);
        [id(0x6002000c), propget]
        HRESULT PrintColBlack([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propput]
        HRESULT PrintColBlack([in] VARIANT_BOOL pRetVal);
        [id(0x6002000e), propget]
        HRESULT NoColumnBalance([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT NoColumnBalance([in] VARIANT_BOOL pRetVal);
        [id(0x60020010), propget]
        HRESULT ConvMailMergeEsc([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020010), propput]
        HRESULT ConvMailMergeEsc([in] VARIANT_BOOL pRetVal);
        [id(0x60020012), propget]
        HRESULT SuppressTopSpacing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020012), propput]
        HRESULT SuppressTopSpacing([in] VARIANT_BOOL pRetVal);
        [id(0x60020014), propget]
        HRESULT UseSingleBorderforContiguousCells([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020014), propput]
        HRESULT UseSingleBorderforContiguousCells([in] VARIANT_BOOL pRetVal);
        [id(0x60020016), propget]
        HRESULT TransparentMetafiles([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propput]
        HRESULT TransparentMetafiles([in] VARIANT_BOOL pRetVal);
        [id(0x60020018), propget]
        HRESULT ShowBreaksInFrames([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propput]
        HRESULT ShowBreaksInFrames([in] VARIANT_BOOL pRetVal);
        [id(0x6002001a), propget]
        HRESULT SwapBordersFacingPgs([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001a), propput]
        HRESULT SwapBordersFacingPgs([in] VARIANT_BOOL pRetVal);
        [id(0x6002001c), propget]
        HRESULT DoNotLeaveBackslashAlone([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001c), propput]
        HRESULT DoNotLeaveBackslashAlone([in] VARIANT_BOOL pRetVal);
        [id(0x6002001e), propget]
        HRESULT DoNotExpandShiftReturn([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001e), propput]
        HRESULT DoNotExpandShiftReturn([in] VARIANT_BOOL pRetVal);
        [id(0x60020020), propget]
        HRESULT UlTrailSpace([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020020), propput]
        HRESULT UlTrailSpace([in] VARIANT_BOOL pRetVal);
        [id(0x60020022), propget]
        HRESULT BalanceSingleByteDoubleByteWidth([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020022), propput]
        HRESULT BalanceSingleByteDoubleByteWidth([in] VARIANT_BOOL pRetVal);
        [id(0x60020024), propget]
        HRESULT SuppressSpacingAtTopOfPage([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020024), propput]
        HRESULT SuppressSpacingAtTopOfPage([in] VARIANT_BOOL pRetVal);
        [id(0x60020026), propget]
        HRESULT SpacingInWholePoints([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020026), propput]
        HRESULT SpacingInWholePoints([in] VARIANT_BOOL pRetVal);
        [id(0x60020028), propget]
        HRESULT BrintBodyTextBeforeHeader([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020028), propput]
        HRESULT BrintBodyTextBeforeHeader([in] VARIANT_BOOL pRetVal);
        [id(0x6002002a), propget]
        HRESULT NoLeading([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propput]
        HRESULT NoLeading([in] VARIANT_BOOL pRetVal);
        [id(0x6002002c), propget]
        HRESULT SpaceForUL([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propput]
        HRESULT SpaceForUL([in] VARIANT_BOOL pRetVal);
        [id(0x6002002e), propget]
        HRESULT MWSmallCaps([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002e), propput]
        HRESULT MWSmallCaps([in] VARIANT_BOOL pRetVal);
        [id(0x60020030), propget]
        HRESULT SuppressTopSpacingWP([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020030), propput]
        HRESULT SuppressTopSpacingWP([in] VARIANT_BOOL pRetVal);
        [id(0x60020032), propget]
        HRESULT TruncateFontHeightsLikeWP6([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020032), propput]
        HRESULT TruncateFontHeightsLikeWP6([in] VARIANT_BOOL pRetVal);
        [id(0x60020034), propget]
        HRESULT SubFontBySize([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020034), propput]
        HRESULT SubFontBySize([in] VARIANT_BOOL pRetVal);
        [id(0x60020036), propget]
        HRESULT LineWrapLikeWord6([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020036), propput]
        HRESULT LineWrapLikeWord6([in] VARIANT_BOOL pRetVal);
        [id(0x60020038), propget]
        HRESULT DoNotSuppressParagraphBorders([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020038), propput]
        HRESULT DoNotSuppressParagraphBorders([in] VARIANT_BOOL pRetVal);
        [id(0x6002003a), propget]
        HRESULT NoExtraLineSpacing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003a), propput]
        HRESULT NoExtraLineSpacing([in] VARIANT_BOOL pRetVal);
        [id(0x6002003c), propget]
        HRESULT SuppressBottomSpacing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003c), propput]
        HRESULT SuppressBottomSpacing([in] VARIANT_BOOL pRetVal);
        [id(0x6002003e), propget]
        HRESULT WPSpaceWidth([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003e), propput]
        HRESULT WPSpaceWidth([in] VARIANT_BOOL pRetVal);
        [id(0x60020040), propget]
        HRESULT WPJustification([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020040), propput]
        HRESULT WPJustification([in] VARIANT_BOOL pRetVal);
        [id(0x60020042), propget]
        HRESULT UsePrinterMetrics([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020042), propput]
        HRESULT UsePrinterMetrics([in] VARIANT_BOOL pRetVal);
        [id(0x60020044), propget]
        HRESULT ShapeLayoutLikeWW8([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020044), propput]
        HRESULT ShapeLayoutLikeWW8([in] VARIANT_BOOL pRetVal);
        [id(0x60020046), propget]
        HRESULT FootnoteLayoutLikeWW8([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020046), propput]
        HRESULT FootnoteLayoutLikeWW8([in] VARIANT_BOOL pRetVal);
        [id(0x60020048), propget]
        HRESULT DoNotUseHTMLParagraphAutoSpacing([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020048), propput]
        HRESULT DoNotUseHTMLParagraphAutoSpacing([in] VARIANT_BOOL pRetVal);
        [id(0x6002004a), propget]
        HRESULT AdjustLineHeightInTable([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004a), propput]
        HRESULT AdjustLineHeightInTable([in] VARIANT_BOOL pRetVal);
        [id(0x6002004c), propget]
        HRESULT ForgetLastTabAlignment([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004c), propput]
        HRESULT ForgetLastTabAlignment([in] VARIANT_BOOL pRetVal);
        [id(0x6002004e), propget]
        HRESULT AutoSpaceLikeWord95([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004e), propput]
        HRESULT AutoSpaceLikeWord95([in] VARIANT_BOOL pRetVal);
        [id(0x60020050), propget]
        HRESULT AlignTablesRowByRow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020050), propput]
        HRESULT AlignTablesRowByRow([in] VARIANT_BOOL pRetVal);
        [id(0x60020052), propget]
        HRESULT LayoutRawTableWidth([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020052), propput]
        HRESULT LayoutRawTableWidth([in] VARIANT_BOOL pRetVal);
        [id(0x60020054), propget]
        HRESULT LayoutTableRowsApart([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020054), propput]
        HRESULT LayoutTableRowsApart([in] VARIANT_BOOL pRetVal);
        [id(0x60020056), propget]
        HRESULT UseWord97LineBreakRules([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020056), propput]
        HRESULT UseWord97LineBreakRules([in] VARIANT_BOOL pRetVal);
        [id(0x60020058), propget]
        HRESULT DoNotBreakWrappedTables([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020058), propput]
        HRESULT DoNotBreakWrappedTables([in] VARIANT_BOOL pRetVal);
        [id(0x6002005a), propget]
        HRESULT DoNotSnapToGridInCell([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002005a), propput]
        HRESULT DoNotSnapToGridInCell([in] VARIANT_BOOL pRetVal);
        [id(0x6002005c), propget]
        HRESULT SelectFldWithFirstOrLastChar([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002005c), propput]
        HRESULT SelectFldWithFirstOrLastChar([in] VARIANT_BOOL pRetVal);
        [id(0x6002005e), propget]
        HRESULT ApplyBreakingRules([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002005e), propput]
        HRESULT ApplyBreakingRules([in] VARIANT_BOOL pRetVal);
        [id(0x60020060), propget]
        HRESULT DoNotWrapTextWithPunct([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020060), propput]
        HRESULT DoNotWrapTextWithPunct([in] VARIANT_BOOL pRetVal);
        [id(0x60020062), propget]
        HRESULT DoNotUseEastAsianBreakRules([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020062), propput]
        HRESULT DoNotUseEastAsianBreakRules([in] VARIANT_BOOL pRetVal);
        [id(0x60020064), propget]
        HRESULT UseWord2002TableStyleRules([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020064), propput]
        HRESULT UseWord2002TableStyleRules([in] VARIANT_BOOL pRetVal);
        [id(0x60020066), propget]
        HRESULT GrowAutofit([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020066), propput]
        HRESULT GrowAutofit([in] VARIANT_BOOL pRetVal);
        [id(0x60020068), propget]
        HRESULT UseNormalStyleForList([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020068), propput]
        HRESULT UseNormalStyleForList([in] VARIANT_BOOL pRetVal);
        [id(0x6002006a), propget]
        HRESULT DoNotUseIndentAsNumberingTabStop([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006a), propput]
        HRESULT DoNotUseIndentAsNumberingTabStop([in] VARIANT_BOOL pRetVal);
        [id(0x6002006c), propget]
        HRESULT UseAltKinsokuLineBreakRules([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006c), propput]
        HRESULT UseAltKinsokuLineBreakRules([in] VARIANT_BOOL pRetVal);
        [id(0x6002006e), propget]
        HRESULT AllowSpaceOfSameStyleInTable([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002006e), propput]
        HRESULT AllowSpaceOfSameStyleInTable([in] VARIANT_BOOL pRetVal);
        [id(0x60020070), propget]
        HRESULT DoNotSuppressIndentation([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020070), propput]
        HRESULT DoNotSuppressIndentation([in] VARIANT_BOOL pRetVal);
        [id(0x60020072), propget]
        HRESULT DoNotAutofitConstrainedTables([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020072), propput]
        HRESULT DoNotAutofitConstrainedTables([in] VARIANT_BOOL pRetVal);
        [id(0x60020074), propget]
        HRESULT AutofitToFirstFixedWidthCell([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020074), propput]
        HRESULT AutofitToFirstFixedWidthCell([in] VARIANT_BOOL pRetVal);
        [id(0x60020076), propget]
        HRESULT UnderlineTabInNumList([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020076), propput]
        HRESULT UnderlineTabInNumList([in] VARIANT_BOOL pRetVal);
        [id(0x60020078), propget]
        HRESULT DisplayHangulFixedWidth([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020078), propput]
        HRESULT DisplayHangulFixedWidth([in] VARIANT_BOOL pRetVal);
        [id(0x6002007a), propget]
        HRESULT SplitPgBreakAndParaMark([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002007a), propput]
        HRESULT SplitPgBreakAndParaMark([in] VARIANT_BOOL pRetVal);
        [id(0x6002007c), propget]
        HRESULT DoNotVertAlignCellWithSp([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002007c), propput]
        HRESULT DoNotVertAlignCellWithSp([in] VARIANT_BOOL pRetVal);
        [id(0x6002007e), propget]
        HRESULT DoNotBreakConstrainedForcedTable([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002007e), propput]
        HRESULT DoNotBreakConstrainedForcedTable([in] VARIANT_BOOL pRetVal);
        [id(0x60020080), propget]
        HRESULT DoNotVertAlignInTxbx([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020080), propput]
        HRESULT DoNotVertAlignInTxbx([in] VARIANT_BOOL pRetVal);
        [id(0x60020082), propget]
        HRESULT UseAnsiKerningPairs([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020082), propput]
        HRESULT UseAnsiKerningPairs([in] VARIANT_BOOL pRetVal);
        [id(0x60020084), propget]
        HRESULT CachedColBalance([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020084), propput]
        HRESULT CachedColBalance([in] VARIANT_BOOL pRetVal);
        [id(0x60020086), propget]
        HRESULT UseFELayout([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020086), propput]
        HRESULT UseFELayout([in] VARIANT_BOOL pRetVal);
        [id(0x60020088), propget]
        HRESULT UICompat97To2003([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020088), propput]
        HRESULT UICompat97To2003([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(66DC1A01-A89D-3E4E-91F4-378068A2ADEB),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Settings.ViewOptions)    

    ]
    interface _ViewOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT ViewType([out, retval] ViewType* pRetVal);
        [id(0x60020004), propput]
        HRESULT ViewType([in] ViewType pRetVal);
        [id(0x60020006), propget]
        HRESULT ZoomType([out, retval] ZoomType* pRetVal);
        [id(0x60020006), propput]
        HRESULT ZoomType([in] ZoomType pRetVal);
        [id(0x60020008), propget]
        HRESULT ZoomPercent([out, retval] long* pRetVal);
        [id(0x60020008), propput]
        HRESULT ZoomPercent([in] long pRetVal);
        [id(0x6002000a), propget]
        HRESULT DoNotDisplayPageBoundaries([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propput]
        HRESULT DoNotDisplayPageBoundaries([in] VARIANT_BOOL pRetVal);
        [id(0x6002000c), propget]
        HRESULT DisplayBackgroundShape([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propput]
        HRESULT DisplayBackgroundShape([in] VARIANT_BOOL pRetVal);
        [id(0x6002000e), propget]
        HRESULT FormsDesign([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT FormsDesign([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(FCF8669F-5322-3843-A2B9-253C56797822),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.PageSetup)    

    ]
    interface _PageSetup : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT OddAndEvenPagesHeaderFooter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020005), propput]
        HRESULT OddAndEvenPagesHeaderFooter([in] VARIANT_BOOL pRetVal);
        [id(0x60020007), propget]
        HRESULT DifferentFirstPageHeaderFooter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propput]
        HRESULT DifferentFirstPageHeaderFooter([in] VARIANT_BOOL pRetVal);
        [id(0x60020009), propget]
        HRESULT MirrorMargins([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009), propput]
        HRESULT MirrorMargins([in] VARIANT_BOOL pRetVal);
        [id(0x6002000b), propget]
        HRESULT SectionStart([out, retval] SectionStart* pRetVal);
        [id(0x6002000b), propput]
        HRESULT SectionStart([in] SectionStart pRetVal);
        [id(0x6002000d), propget]
        HRESULT SuppressEndnotes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d), propput]
        HRESULT SuppressEndnotes([in] VARIANT_BOOL pRetVal);
        [id(0x6002000f), propget]
        HRESULT VerticalAlignment([out, retval] PageVerticalAlignment* pRetVal);
        [id(0x6002000f), propput]
        HRESULT VerticalAlignment([in] PageVerticalAlignment pRetVal);
        [id(0x60020011), propget]
        HRESULT Bidi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020011), propput]
        HRESULT Bidi([in] VARIANT_BOOL pRetVal);
        [id(0x60020013), propget]
        HRESULT PageWidth([out, retval] double* pRetVal);
        [id(0x60020013), propput]
        HRESULT PageWidth([in] double pRetVal);
        [id(0x60020015), propget]
        HRESULT PageHeight([out, retval] double* pRetVal);
        [id(0x60020015), propput]
        HRESULT PageHeight([in] double pRetVal);
        [id(0x60020017), propget]
        HRESULT PaperSize([out, retval] PaperSize* pRetVal);
        [id(0x60020017), propput]
        HRESULT PaperSize([in] PaperSize pRetVal);
        [id(0x60020019), propget]
        HRESULT Orientation([out, retval] Orientation* pRetVal);
        [id(0x60020019), propput]
        HRESULT Orientation([in] Orientation pRetVal);
        [id(0x6002001b), propget]
        HRESULT LeftMargin([out, retval] double* pRetVal);
        [id(0x6002001b), propput]
        HRESULT LeftMargin([in] double pRetVal);
        [id(0x6002001d), propget]
        HRESULT RightMargin([out, retval] double* pRetVal);
        [id(0x6002001d), propput]
        HRESULT RightMargin([in] double pRetVal);
        [id(0x6002001f), propget]
        HRESULT TopMargin([out, retval] double* pRetVal);
        [id(0x6002001f), propput]
        HRESULT TopMargin([in] double pRetVal);
        [id(0x60020021), propget]
        HRESULT BottomMargin([out, retval] double* pRetVal);
        [id(0x60020021), propput]
        HRESULT BottomMargin([in] double pRetVal);
        [id(0x60020023), propget]
        HRESULT HeaderDistance([out, retval] double* pRetVal);
        [id(0x60020023), propput]
        HRESULT HeaderDistance([in] double pRetVal);
        [id(0x60020025), propget]
        HRESULT FooterDistance([out, retval] double* pRetVal);
        [id(0x60020025), propput]
        HRESULT FooterDistance([in] double pRetVal);
        [id(0x60020027), propget]
        HRESULT Gutter([out, retval] double* pRetVal);
        [id(0x60020027), propput]
        HRESULT Gutter([in] double pRetVal);
        [id(0x60020029), propget]
        HRESULT FirstPageTray([out, retval] PaperTray* pRetVal);
        [id(0x60020029), propput]
        HRESULT FirstPageTray([in] PaperTray pRetVal);
        [id(0x6002002b), propget]
        HRESULT OtherPagesTray([out, retval] PaperTray* pRetVal);
        [id(0x6002002b), propput]
        HRESULT OtherPagesTray([in] PaperTray pRetVal);
        [id(0x6002002d), propget]
        HRESULT PageNumberStyle([out, retval] NumberStyle* pRetVal);
        [id(0x6002002d), propput]
        HRESULT PageNumberStyle([in] NumberStyle pRetVal);
        [id(0x6002002f), propget]
        HRESULT RestartPageNumbering([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propput]
        HRESULT RestartPageNumbering([in] VARIANT_BOOL pRetVal);
        [id(0x60020031), propget]
        HRESULT PageStartingNumber([out, retval] long* pRetVal);
        [id(0x60020031), propput]
        HRESULT PageStartingNumber([in] long pRetVal);
        [id(0x60020033), propget]
        HRESULT LineNumberRestartMode([out, retval] LineNumberRestartMode* pRetVal);
        [id(0x60020033), propput]
        HRESULT LineNumberRestartMode([in] LineNumberRestartMode pRetVal);
        [id(0x60020035), propget]
        HRESULT LineNumberCountBy([out, retval] long* pRetVal);
        [id(0x60020035), propput]
        HRESULT LineNumberCountBy([in] long pRetVal);
        [id(0x60020037), propget]
        HRESULT LineNumberDistanceFromText([out, retval] double* pRetVal);
        [id(0x60020037), propput]
        HRESULT LineNumberDistanceFromText([in] double pRetVal);
        [id(0x60020039), propget]
        HRESULT LineStartingNumber([out, retval] long* pRetVal);
        [id(0x60020039), propput]
        HRESULT LineStartingNumber([in] long pRetVal);
        [id(0x6002003b), propget]
        HRESULT TextColumns([out, retval] _TextColumnCollection** pRetVal);
        [id(0x6002003c), propget]
        HRESULT RtlGutter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003c), propput]
        HRESULT RtlGutter([in] VARIANT_BOOL pRetVal);
        [id(0x6002003e), propget]
        HRESULT BorderAlwaysInFront([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003e), propput]
        HRESULT BorderAlwaysInFront([in] VARIANT_BOOL pRetVal);
        [id(0x60020040), propget]
        HRESULT BorderDistanceFrom([out, retval] PageBorderDistanceFrom* pRetVal);
        [id(0x60020040), propput]
        HRESULT BorderDistanceFrom([in] PageBorderDistanceFrom pRetVal);
        [id(0x60020042), propget]
        HRESULT BorderAppliesTo([out, retval] PageBorderAppliesTo* pRetVal);
        [id(0x60020042), propput]
        HRESULT BorderAppliesTo([in] PageBorderAppliesTo pRetVal);
        [id(0x60020044), propget]
        HRESULT BorderSurroundsHeader([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020044), propput]
        HRESULT BorderSurroundsHeader([in] VARIANT_BOOL pRetVal);
        [id(0x60020046), propget]
        HRESULT BorderSurroundsFooter([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020046), propput]
        HRESULT BorderSurroundsFooter([in] VARIANT_BOOL pRetVal);
        [id(0x60020048), propget]
        HRESULT Borders([out, retval] _BorderCollection** pRetVal);
        [id(0x60020049), propget]
        HRESULT FootnoteOptions([out, retval] _FootnoteOptions** pRetVal);
        [id(0x6002004a), propget]
        HRESULT EndnoteOptions([out, retval] _FootnoteOptions** pRetVal);
    };

    [
      odl,
      uuid(91C94BFE-971D-3B9D-931B-93695B260318),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.TextColumnCollection)    

    ]
    interface _TextColumnCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT SetCount([in] long newCount);
        [id(0x60020005), propget]
        HRESULT EvenlySpaced([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020005), propput]
        HRESULT EvenlySpaced([in] VARIANT_BOOL pRetVal);
        [id(0x60020007), propget]
        HRESULT Spacing([out, retval] double* pRetVal);
        [id(0x60020007), propput]
        HRESULT Spacing([in] double pRetVal);
        [id(0x60020009), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x6002000a), propget]
        HRESULT LineBetween([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propput]
        HRESULT LineBetween([in] VARIANT_BOOL pRetVal);
        [id(0x6002000c), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _TextColumn** pRetVal);
    };

    [
      odl,
      uuid(9E37A9E9-FBBB-3446-BD30-84B2E9E31544),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FootnoteOptions)    

    ]
    interface _FootnoteOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Location([out, retval] FootnoteLocation* pRetVal);
        [id(0x60020004), propput]
        HRESULT Location([in] FootnoteLocation pRetVal);
        [id(0x60020006), propget]
        HRESULT NumberStyle([out, retval] NumberStyle* pRetVal);
        [id(0x60020006), propput]
        HRESULT NumberStyle([in] NumberStyle pRetVal);
        [id(0x60020008), propget]
        HRESULT StartNumber([out, retval] long* pRetVal);
        [id(0x60020008), propput]
        HRESULT StartNumber([in] long pRetVal);
        [id(0x6002000a), propget]
        HRESULT RestartRule([out, retval] FootnoteNumberingRule* pRetVal);
        [id(0x6002000a), propput]
        HRESULT RestartRule([in] FootnoteNumberingRule pRetVal);
    };

    [
      odl,
      uuid(518AD666-F312-3F94-963E-FA6BCD8AEFFF),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ControlChar)    

    ]
    interface _ControlChar : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
    };

    [
      odl,
      uuid(8E86B84A-87DC-3CAC-A366-6A577C5BC242),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Run)    

    ]
    interface _Run : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propget]
        HRESULT Text([out, retval] BSTR* pRetVal);
        [id(0x60020018), propput]
        HRESULT Text([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(A7C23ED6-467E-3A97-9F8A-F31E4BB44898),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Body)    

    ]
    interface _Body : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020029), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002c), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002d)]
        HRESULT DeleteShapes();
        [id(0x6002002e), propget]
        HRESULT ParentSection([out, retval] _Section** pRetVal);
        [id(0x6002002f)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(D6D33FC7-0C97-329A-B36B-67107A5952BD),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Story)    

    ]
    interface _Story : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020029), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002c), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002d)]
        HRESULT DeleteShapes();
    };

    [
      odl,
      uuid(8BFF0AD5-4B82-3ADD-A15B-FAF461F81B5A),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ParagraphCollection)    

    ]
    interface _ParagraphCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Paragraph** pRetVal);
    };

    [
      odl,
      uuid(58BC08D6-24B4-3DC4-9293-23C9EEBE5209),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.TableCollection)    

    ]
    interface _TableCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Table** pRetVal);
    };

    [
      odl,
      uuid(C2841EAB-7952-3A7A-AB8D-C2DB5274342B),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Table)    

    ]
    interface _Table : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT FirstRow([out, retval] _Row** pRetVal);
        [id(0x60020029), propget]
        HRESULT LastRow([out, retval] _Row** pRetVal);
        [id(0x6002002a), propget]
        HRESULT Rows([out, retval] _RowCollection** pRetVal);
        [id(0x6002002b)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(62E36A75-B30E-3984-9512-4143D6BB44FC),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.RowCollection)    

    ]
    interface _RowCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Row** pRetVal);
    };

    [
      odl,
      uuid(1AF68B59-928F-3FAB-AF4A-8AA431BD325D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Row)    

    ]
    interface _Row : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT ParentTable([out, retval] _Table** pRetVal);
        [id(0x60020029), propget]
        HRESULT IsFirstRow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002a), propget]
        HRESULT IsLastRow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002b), propget]
        HRESULT FirstCell([out, retval] _Cell** pRetVal);
        [id(0x6002002c), propget]
        HRESULT LastCell([out, retval] _Cell** pRetVal);
        [id(0x6002002d), propget]
        HRESULT Cells([out, retval] _CellCollection** pRetVal);
        [id(0x6002002e), propget]
        HRESULT RowFormat([out, retval] _RowFormat** pRetVal);
        [id(0x6002002f)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(30EA17A6-2A05-30CA-A6E7-9A2BCA16BC02),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Inline)    

    ]
    interface _Inline : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(589D39BB-F2F9-3E69-A7E6-EBA8B32331FA),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Document)    

    ]
    interface _Document : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028)]
        HRESULT ImportNode(
                        [in] _Node* srcNode, 
                        [in] VARIANT_BOOL isImportChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020029),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ImportNode)]
        HRESULT ImportNode_2(
                        [in] _Node* srcNode, 
                        [in] VARIANT_BOOL isImportChildren, 
                        [in] ImportFormatMode ImportFormatMode, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002002a)]
        HRESULT add_NodeInserting([in] _NodeChangedEventHandler* value);
        [id(0x6002002b)]
        HRESULT remove_NodeInserting([in] _NodeChangedEventHandler* value);
        [id(0x6002002c)]
        HRESULT add_NodeInserted([in] _NodeChangedEventHandler* value);
        [id(0x6002002d)]
        HRESULT remove_NodeInserted([in] _NodeChangedEventHandler* value);
        [id(0x6002002e)]
        HRESULT add_NodeRemoving([in] _NodeChangedEventHandler* value);
        [id(0x6002002f)]
        HRESULT remove_NodeRemoving([in] _NodeChangedEventHandler* value);
        [id(0x60020030)]
        HRESULT add_NodeRemoved([in] _NodeChangedEventHandler* value);
        [id(0x60020031)]
        HRESULT remove_NodeRemoved([in] _NodeChangedEventHandler* value);
        [id(0x60020032), propget]
        HRESULT FontInfos([out, retval] _FontInfoCollection** pRetVal);
        [id(0x60020033), propget]
        HRESULT Styles([out, retval] _StyleCollection** pRetVal);
        [id(0x60020034), propget]
        HRESULT Lists([out, retval] _ListCollection** pRetVal);
        [id(0x60020035), propget]
        HRESULT AttachedTemplate([out, retval] BSTR* pRetVal);
        [id(0x60020035), propput]
        HRESULT AttachedTemplate([in] BSTR pRetVal);
        [id(0x60020037), propget]
        HRESULT IsTemplate([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020037), propput]
        HRESULT IsTemplate([in] VARIANT_BOOL pRetVal);
        [id(0x60020039), propget]
        HRESULT ShadeFormData([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020039), propput]
        HRESULT ShadeFormData([in] VARIANT_BOOL pRetVal);
        [id(0x6002003b), propget]
        HRESULT TrackRevisions([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003b), propput]
        HRESULT TrackRevisions([in] VARIANT_BOOL pRetVal);
        [id(0x6002003d), propget]
        HRESULT BuiltInDocumentProperties([out, retval] _BuiltInDocumentProperties** pRetVal);
        [id(0x6002003e), propget]
        HRESULT CustomDocumentProperties([out, retval] _CustomDocumentProperties** pRetVal);
        [id(0x6002003f), propget]
        HRESULT MailMerge([out, retval] _MailMerge** pRetVal);
        [id(0x60020040), propget]
        HRESULT ProtectionType([out, retval] ProtectionType* pRetVal);
        [id(0x60020041), propget]
        HRESULT Sections([out, retval] _SectionCollection** pRetVal);
        [id(0x60020042), propget]
        HRESULT FirstSection([out, retval] _Section** pRetVal);
        [id(0x60020043), propget]
        HRESULT LastSection([out, retval] _Section** pRetVal);
        [id(0x60020044), propget]
        HRESULT SaveOptions([out, retval] _SaveOptions** pRetVal);
        [id(0x60020044), propputref]
        HRESULT SaveOptions([in] _SaveOptions* pRetVal);
        [id(0x60020046), propget]
        HRESULT ViewOptions([out, retval] _ViewOptions** pRetVal);
        [id(0x60020047), propget]
        HRESULT WriteProtection([out, retval] _WriteProtection** pRetVal);
        [id(0x60020048), propget]
        HRESULT CompatibilityOptions([out, retval] _CompatibilityOptions** pRetVal);
        [id(0x60020049), propget]
        HRESULT MailMergeSettings([out, retval] _MailMergeSettings** pRetVal);
        [id(0x60020049), propputref]
        HRESULT MailMergeSettings([in] _MailMergeSettings* pRetVal);
        [id(0x6002004b), propget]
        HRESULT HasRevisions([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004c), propget]
        HRESULT HasMacros([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002004d), propget]
        HRESULT VersionsCount([out, retval] long* pRetVal);
        [id(0x6002004e), propget]
        HRESULT DefaultTabStop([out, retval] double* pRetVal);
        [id(0x6002004e), propput]
        HRESULT DefaultTabStop([in] double pRetVal);
        [id(0x60020050), propget]
        HRESULT Variables([out, retval] _VariableCollection** pRetVal);
        [id(0x60020051), propget]
        HRESULT GlossaryDocument([out, retval] _GlossaryDocument** pRetVal);
        [id(0x60020051), propputref]
        HRESULT GlossaryDocument([in] _GlossaryDocument* pRetVal);
        [id(0x60020053), propget]
        HRESULT OriginalFileName([out, retval] BSTR* pRetVal);
        [id(0x60020054), propget]
        HRESULT OriginalLoadFormat([out, retval] LoadFormat* pRetVal);
        [id(0x60020055),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Clone)]
        HRESULT Clone_2([out, retval] _Document** pRetVal);
        [id(0x60020056)]
        HRESULT AppendDocument(
                        [in] _Document* srcDoc, 
                        [in] ImportFormatMode ImportFormatMode);
        [id(0x60020057)]
        HRESULT Save(
                        [in] BSTR fileName, 
                        [out, retval] _SaveOutputParameters** pRetVal);
        [id(0x60020058),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_2(
                        [in] BSTR fileName, 
                        [in] SaveFormat fileFormat, 
                        [out, retval] _SaveOutputParameters** pRetVal);
        [id(0x60020059),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_3(
                        [in] _Stream* stream, 
                        [in] SaveFormat SaveFormat, 
                        [out, retval] _SaveOutputParameters** pRetVal);
        [id(0x6002005a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_4(
                        [in] VARIANT Destination, 
                        [in] SaveFormat fileFormat, 
                        [out, retval] _SaveOutputParameters** pRetVal);
        [id(0x6002005b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Save)]
        HRESULT Save_5(
                        [in] BSTR fileName, 
                        [in] SaveFormat fileFormat, 
                        [in] SaveType SaveType, 
                        [in] IUnknown* response, 
                        [out, retval] _SaveOutputParameters** pRetVal);
        [id(0x6002005c)]
        HRESULT EnsureMinimum();
        [id(0x6002005d)]
        HRESULT AcceptAllRevisions();
        [id(0x6002005e)]
        HRESULT Protect([in] ProtectionType type);
        [id(0x6002005f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Protect)]
        HRESULT Protect_2(
                        [in] ProtectionType type, 
                        [in] BSTR password);
        [id(0x60020060)]
        HRESULT Unprotect();
        [id(0x60020061)]
        HRESULT UpdateWordCount();
        [id(0x60020062)]
        HRESULT UpdateTableLayout();
        [id(0x60020063)]
        HRESULT RemoveMacros();
        [id(0x60020064)]
        HRESULT UpdateFields();
        [id(0x60020065)]
        HRESULT JoinRunsWithSameFormatting([out, retval] long* pRetVal);
        [id(0x60020066)]
        HRESULT ExpandTableStylesToDirectFormatting();
        [id(0x60020067), propget]
        HRESULT PageCount([out, retval] long* pRetVal);
        [id(0x60020068)]
        HRESULT UpdatePageLayout();
        [id(0x60020069)]
        HRESULT SaveToPdf([in] BSTR fileName);
        [id(0x6002006a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SaveToPdf)]
        HRESULT SaveToPdf_2(
                        [in] long pageIndex, 
                        [in] long PageCount, 
                        [in] BSTR fileName, 
                        [in] _PdfOptions* options);
        [id(0x6002006b),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SaveToPdf)]
        HRESULT SaveToPdf_3(
                        [in] long pageIndex, 
                        [in] long PageCount, 
                        [in] _Stream* stream, 
                        [in] _PdfOptions* options);
        [id(0x6002006c)]
        HRESULT SaveToXps([in] BSTR fileName);
        [id(0x6002006d),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SaveToXps)]
        HRESULT SaveToXps_2(
                        [in] long pageIndex, 
                        [in] long PageCount, 
                        [in] BSTR fileName, 
                        [in] _XpsOptions* options);
        [id(0x6002006e),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SaveToXps)]
        HRESULT SaveToXps_3(
                        [in] long pageIndex, 
                        [in] long PageCount, 
                        [in] _Stream* stream, 
                        [in] _XpsOptions* options);
        [id(0x6002006f)]
        HRESULT SaveToImage(
                        [in] long pageIndex, 
                        [in] long PageCount, 
                        [in] BSTR fileName, 
                        [in] _ImageOptions* options);
        [id(0x60020070),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SaveToImage)]
        HRESULT SaveToImage_2(
                        [in] long pageIndex, 
                        [in] long PageCount, 
                        [in] _Stream* stream, 
                        [in] IUnknown* imageFormat, 
                        [in] _ImageOptions* options);
        [id(0x60020071)]
        HRESULT RenderToScale(
                        [in] long pageIndex, 
                        [in] IUnknown* graphics, 
                        [in] single x, 
                        [in] single y, 
                        [in] single scale, 
                        [out, retval] SizeF* pRetVal);
        [id(0x60020072)]
        HRESULT RenderToSize(
                        [in] long pageIndex, 
                        [in] IUnknown* graphics, 
                        [in] single x, 
                        [in] single y, 
                        [in] single Width, 
                        [in] single Height, 
                        [out, retval] single* pRetVal);
        [id(0x60020073)]
        HRESULT GetPageInfo(
                        [in] long pageIndex, 
                        [out, retval] _PageInfo** pRetVal);
        [id(0x60020074)]
        HRESULT Print();
        [id(0x60020075),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Print)]
        HRESULT Print_2([in] BSTR printerName);
        [id(0x60020076),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Print)]
        HRESULT Print_3([in] IUnknown* printerSettings);
        [id(0x60020077),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Print)]
        HRESULT Print_4(
                        [in] IUnknown* printerSettings, 
                        [in] BSTR documentName);
        [id(0x60020078), propget]
        HRESULT FootnoteOptions([out, retval] _FootnoteOptions** pRetVal);
        [id(0x60020079), propget]
        HRESULT EndnoteOptions([out, retval] _FootnoteOptions** pRetVal);
    };

    [
      odl,
      uuid(0BD2D4C5-EB19-3CCB-A8A3-BBC9265ED516),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.DocumentBase)    

    ]
    interface _DocumentBase : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028)]
        HRESULT ImportNode(
                        [in] _Node* srcNode, 
                        [in] VARIANT_BOOL isImportChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020029),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ImportNode)]
        HRESULT ImportNode_2(
                        [in] _Node* srcNode, 
                        [in] VARIANT_BOOL isImportChildren, 
                        [in] ImportFormatMode ImportFormatMode, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002002a)]
        HRESULT add_NodeInserting([in] _NodeChangedEventHandler* value);
        [id(0x6002002b)]
        HRESULT remove_NodeInserting([in] _NodeChangedEventHandler* value);
        [id(0x6002002c)]
        HRESULT add_NodeInserted([in] _NodeChangedEventHandler* value);
        [id(0x6002002d)]
        HRESULT remove_NodeInserted([in] _NodeChangedEventHandler* value);
        [id(0x6002002e)]
        HRESULT add_NodeRemoving([in] _NodeChangedEventHandler* value);
        [id(0x6002002f)]
        HRESULT remove_NodeRemoving([in] _NodeChangedEventHandler* value);
        [id(0x60020030)]
        HRESULT add_NodeRemoved([in] _NodeChangedEventHandler* value);
        [id(0x60020031)]
        HRESULT remove_NodeRemoved([in] _NodeChangedEventHandler* value);
        [id(0x60020032), propget]
        HRESULT FontInfos([out, retval] _FontInfoCollection** pRetVal);
        [id(0x60020033), propget]
        HRESULT Styles([out, retval] _StyleCollection** pRetVal);
        [id(0x60020034), propget]
        HRESULT Lists([out, retval] _ListCollection** pRetVal);
    };

    [
      odl,
      uuid(31B3C667-1339-3526-A392-BD672441B868),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.RowFormat)    

    ]
    interface _RowFormat : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT alignment([out, retval] RowAlignment* pRetVal);
        [id(0x60020005), propput]
        HRESULT alignment([in] RowAlignment pRetVal);
        [id(0x60020007), propget]
        HRESULT AllowAutoFit([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020007), propput]
        HRESULT AllowAutoFit([in] VARIANT_BOOL pRetVal);
        [id(0x60020009), propget]
        HRESULT Borders([out, retval] _BorderCollection** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Bidi([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propput]
        HRESULT Bidi([in] VARIANT_BOOL pRetVal);
        [id(0x6002000c), propget]
        HRESULT LeftPadding([out, retval] double* pRetVal);
        [id(0x6002000c), propput]
        HRESULT LeftPadding([in] double pRetVal);
        [id(0x6002000e), propget]
        HRESULT RightPadding([out, retval] double* pRetVal);
        [id(0x6002000e), propput]
        HRESULT RightPadding([in] double pRetVal);
        [id(0x60020010), propget]
        HRESULT TopPadding([out, retval] double* pRetVal);
        [id(0x60020010), propput]
        HRESULT TopPadding([in] double pRetVal);
        [id(0x60020012), propget]
        HRESULT BottomPadding([out, retval] double* pRetVal);
        [id(0x60020012), propput]
        HRESULT BottomPadding([in] double pRetVal);
        [id(0x60020014), propget]
        HRESULT CellSpacing([out, retval] double* pRetVal);
        [id(0x60020014), propput]
        HRESULT CellSpacing([in] double pRetVal);
        [id(0x60020016), propget]
        HRESULT Height([out, retval] double* pRetVal);
        [id(0x60020016), propput]
        HRESULT Height([in] double pRetVal);
        [id(0x60020018), propget]
        HRESULT HeightRule([out, retval] HeightRule* pRetVal);
        [id(0x60020018), propput]
        HRESULT HeightRule([in] HeightRule pRetVal);
        [id(0x6002001a), propget]
        HRESULT AllowBreakAcrossPages([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001a), propput]
        HRESULT AllowBreakAcrossPages([in] VARIANT_BOOL pRetVal);
        [id(0x6002001c), propget]
        HRESULT HeadingFormat([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001c), propput]
        HRESULT HeadingFormat([in] VARIANT_BOOL pRetVal);
        [id(0x6002001e), propget]
        HRESULT LeftIndent([out, retval] double* pRetVal);
        [id(0x6002001e), propput]
        HRESULT LeftIndent([in] double pRetVal);
        [id(0x60020020)]
        HRESULT ClearCellPadding();
    };

    [
      odl,
      uuid(ADF18176-513E-3AD6-B1A2-A0CC093609C0),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellCollection)    

    ]
    interface _CellCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Cell** pRetVal);
    };

    [
      odl,
      uuid(167D585F-DCD3-36BB-BB57-344FEF9FD474),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.Cell)    

    ]
    interface _Cell : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT ParentRow([out, retval] _Row** pRetVal);
        [id(0x60020029), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002b), propget]
        HRESULT IsFirstCell([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002c), propget]
        HRESULT IsLastCell([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002d), propget]
        HRESULT CellFormat([out, retval] _CellFormat** pRetVal);
        [id(0x6002002e), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002f), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x60020030)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(3A9F8DDD-1745-3DED-A869-F08F45072D82),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Tables.CellFormat)    

    ]
    interface _CellFormat : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT LeftPadding([out, retval] double* pRetVal);
        [id(0x60020005), propput]
        HRESULT LeftPadding([in] double pRetVal);
        [id(0x60020007), propget]
        HRESULT RightPadding([out, retval] double* pRetVal);
        [id(0x60020007), propput]
        HRESULT RightPadding([in] double pRetVal);
        [id(0x60020009), propget]
        HRESULT TopPadding([out, retval] double* pRetVal);
        [id(0x60020009), propput]
        HRESULT TopPadding([in] double pRetVal);
        [id(0x6002000b), propget]
        HRESULT BottomPadding([out, retval] double* pRetVal);
        [id(0x6002000b), propput]
        HRESULT BottomPadding([in] double pRetVal);
        [id(0x6002000d), propget]
        HRESULT Borders([out, retval] _BorderCollection** pRetVal);
        [id(0x6002000e), propget]
        HRESULT Shading([out, retval] _Shading** pRetVal);
        [id(0x6002000f), propget]
        HRESULT VerticalAlignment([out, retval] CellVerticalAlignment* pRetVal);
        [id(0x6002000f), propput]
        HRESULT VerticalAlignment([in] CellVerticalAlignment pRetVal);
        [id(0x60020011), propget]
        HRESULT Width([out, retval] double* pRetVal);
        [id(0x60020011), propput]
        HRESULT Width([in] double pRetVal);
        [id(0x60020013), propget]
        HRESULT VerticalMerge([out, retval] CellMerge* pRetVal);
        [id(0x60020013), propput]
        HRESULT VerticalMerge([in] CellMerge pRetVal);
        [id(0x60020015), propget]
        HRESULT HorizontalMerge([out, retval] CellMerge* pRetVal);
        [id(0x60020015), propput]
        HRESULT HorizontalMerge([in] CellMerge pRetVal);
        [id(0x60020017), propget]
        HRESULT Orientation([out, retval] TextOrientation* pRetVal);
        [id(0x60020017), propput]
        HRESULT Orientation([in] TextOrientation pRetVal);
        [id(0x60020019), propget]
        HRESULT FitText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020019), propput]
        HRESULT FitText([in] VARIANT_BOOL pRetVal);
        [id(0x6002001b), propget]
        HRESULT WrapText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001b), propput]
        HRESULT WrapText([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(44BCF48A-09FB-3A28-894D-62894EB36E65),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeaderFooterCollection)    

    ]
    interface _HeaderFooterCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _HeaderFooter** pRetVal);
        [id(0x60020010), propget]
        HRESULT Item_3(
                        [in] HeaderFooterType HeaderFooterType, 
                        [out, retval] _HeaderFooter** pRetVal);
        [id(0x60020011)]
        HRESULT LinkToPrevious([in] VARIANT_BOOL isLinkToPrevious);
        [id(0x60020012),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, LinkToPrevious)]
        HRESULT LinkToPrevious_2(
                        [in] HeaderFooterType HeaderFooterType, 
                        [in] VARIANT_BOOL isLinkToPrevious);
    };

    [
      odl,
      uuid(3A574348-9303-35FF-805B-236700FCAC5C),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.HeaderFooter)    

    ]
    interface _HeaderFooter : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020029), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002c), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002d)]
        HRESULT DeleteShapes();
        [id(0x6002002e), propget]
        HRESULT ParentSection([out, retval] _Section** pRetVal);
        [id(0x6002002f), propget]
        HRESULT HeaderFooterType([out, retval] HeaderFooterType* pRetVal);
        [id(0x60020030), propget]
        HRESULT IsHeader([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020031), propget]
        HRESULT IsLinkedToPrevious([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020031), propput]
        HRESULT IsLinkedToPrevious([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(6C4A84AF-92BD-3F09-9475-4FC374F091C8),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeImporter)    

    ]
    interface _NodeImporter : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ImportNode(
                        [in] _Node* srcNode, 
                        [in] VARIANT_BOOL isImportChildren, 
                        [out, retval] _Node** pRetVal);
    };

    [
      odl,
      uuid(BD230DBE-C7F6-36A0-AF06-814B422420E8),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.VariableCollection)    

    ]
    interface _VariableCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] BSTR* pRetVal);
        [id(00000000), propput]
        HRESULT Item(
                        [in] BSTR Name, 
                        [in] BSTR pRetVal);
        [id(0x60020008), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] BSTR* pRetVal);
        [id(0x60020008), propput]
        HRESULT Item_2(
                        [in] long index, 
                        [in] BSTR pRetVal);
        [id(0x6002000a)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in] BSTR value);
        [id(0x6002000b)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c)]
        HRESULT IndexOfKey(
                        [in] BSTR Name, 
                        [out, retval] long* pRetVal);
        [id(0x6002000d)]
        HRESULT Remove([in] BSTR Name);
        [id(0x6002000e)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000f)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(3FD717BE-91FA-3106-A6BB-65BB2756AE25),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.BuiltInDocumentProperties)    

    ]
    interface _BuiltInDocumentProperties : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x60020008)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009)]
        HRESULT IndexOf(
                        [in] BSTR Name, 
                        [out, retval] long* pRetVal);
        [id(0x6002000a)]
        HRESULT Remove([in] BSTR Name);
        [id(0x6002000b)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000c)]
        HRESULT Clear();
        [id(0x6002000d), propget]
        HRESULT Author([out, retval] BSTR* pRetVal);
        [id(0x6002000d), propput]
        HRESULT Author([in] BSTR pRetVal);
        [id(0x6002000f), propget]
        HRESULT Bytes([out, retval] long* pRetVal);
        [id(0x6002000f), propput]
        HRESULT Bytes([in] long pRetVal);
        [id(0x60020011), propget]
        HRESULT Characters([out, retval] long* pRetVal);
        [id(0x60020011), propput]
        HRESULT Characters([in] long pRetVal);
        [id(0x60020013), propget]
        HRESULT CharactersWithSpaces([out, retval] long* pRetVal);
        [id(0x60020013), propput]
        HRESULT CharactersWithSpaces([in] long pRetVal);
        [id(0x60020015), propget]
        HRESULT Comments([out, retval] BSTR* pRetVal);
        [id(0x60020015), propput]
        HRESULT Comments([in] BSTR pRetVal);
        [id(0x60020017), propget]
        HRESULT Category([out, retval] BSTR* pRetVal);
        [id(0x60020017), propput]
        HRESULT Category([in] BSTR pRetVal);
        [id(0x60020019), propget]
        HRESULT Company([out, retval] BSTR* pRetVal);
        [id(0x60020019), propput]
        HRESULT Company([in] BSTR pRetVal);
        [id(0x6002001b), propget]
        HRESULT CreatedTime([out, retval] DATE* pRetVal);
        [id(0x6002001b), propput]
        HRESULT CreatedTime([in] DATE pRetVal);
        [id(0x6002001d), propget]
        HRESULT Keywords([out, retval] BSTR* pRetVal);
        [id(0x6002001d), propput]
        HRESULT Keywords([in] BSTR pRetVal);
        [id(0x6002001f), propget]
        HRESULT LastPrinted([out, retval] DATE* pRetVal);
        [id(0x6002001f), propput]
        HRESULT LastPrinted([in] DATE pRetVal);
        [id(0x60020021), propget]
        HRESULT LastSavedBy([out, retval] BSTR* pRetVal);
        [id(0x60020021), propput]
        HRESULT LastSavedBy([in] BSTR pRetVal);
        [id(0x60020023), propget]
        HRESULT LastSavedTime([out, retval] DATE* pRetVal);
        [id(0x60020023), propput]
        HRESULT LastSavedTime([in] DATE pRetVal);
        [id(0x60020025), propget]
        HRESULT Lines([out, retval] long* pRetVal);
        [id(0x60020025), propput]
        HRESULT Lines([in] long pRetVal);
        [id(0x60020027), propget]
        HRESULT LinksUpToDate([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020027), propput]
        HRESULT LinksUpToDate([in] VARIANT_BOOL pRetVal);
        [id(0x60020029), propget]
        HRESULT Manager([out, retval] BSTR* pRetVal);
        [id(0x60020029), propput]
        HRESULT Manager([in] BSTR pRetVal);
        [id(0x6002002b), propget]
        HRESULT NameOfApplication([out, retval] BSTR* pRetVal);
        [id(0x6002002b), propput]
        HRESULT NameOfApplication([in] BSTR pRetVal);
        [id(0x6002002d), propget]
        HRESULT Pages([out, retval] long* pRetVal);
        [id(0x6002002d), propput]
        HRESULT Pages([in] long pRetVal);
        [id(0x6002002f), propget]
        HRESULT Paragraphs([out, retval] long* pRetVal);
        [id(0x6002002f), propput]
        HRESULT Paragraphs([in] long pRetVal);
        [id(0x60020031), propget]
        HRESULT RevisionNumber([out, retval] long* pRetVal);
        [id(0x60020031), propput]
        HRESULT RevisionNumber([in] long pRetVal);
        [id(0x60020033), propget]
        HRESULT Security([out, retval] DocumentSecurity* pRetVal);
        [id(0x60020033), propput]
        HRESULT Security([in] DocumentSecurity pRetVal);
        [id(0x60020035), propget]
        HRESULT Subject([out, retval] BSTR* pRetVal);
        [id(0x60020035), propput]
        HRESULT Subject([in] BSTR pRetVal);
        [id(0x60020037), propget]
        HRESULT template([out, retval] BSTR* pRetVal);
        [id(0x60020037), propput]
        HRESULT template([in] BSTR pRetVal);
        [id(0x60020039), propget]
        HRESULT Title([out, retval] BSTR* pRetVal);
        [id(0x60020039), propput]
        HRESULT Title([in] BSTR pRetVal);
        [id(0x6002003b), propget]
        HRESULT TotalEditingTime([out, retval] double* pRetVal);
        [id(0x6002003b), propput]
        HRESULT TotalEditingTime([in] double pRetVal);
        [id(0x6002003d), propget]
        HRESULT Version([out, retval] long* pRetVal);
        [id(0x6002003d), propput]
        HRESULT Version([in] long pRetVal);
        [id(0x6002003f), propget]
        HRESULT Words([out, retval] long* pRetVal);
        [id(0x6002003f), propput]
        HRESULT Words([in] long pRetVal);
        [id(0x60020041), propget]
        HRESULT HeadingPairs([out, retval] SAFEARRAY(VARIANT)* pRetVal);
        [id(0x60020041), propput]
        HRESULT HeadingPairs([in] SAFEARRAY(VARIANT) pRetVal);
        [id(0x60020043), propget]
        HRESULT TitlesOfParts([out, retval] SAFEARRAY(BSTR)* pRetVal);
        [id(0x60020043), propput]
        HRESULT TitlesOfParts([in] SAFEARRAY(BSTR) pRetVal);
    };

    [
      odl,
      uuid(1BF8F202-F78D-34A5-98CD-46AC0B0D7835),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.DocumentPropertyCollection)    

    ]
    interface _DocumentPropertyCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x60020008)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009)]
        HRESULT IndexOf(
                        [in] BSTR Name, 
                        [out, retval] long* pRetVal);
        [id(0x6002000a)]
        HRESULT Remove([in] BSTR Name);
        [id(0x6002000b)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000c)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(C0605D61-6042-32DD-A85C-825AC16ACBE7),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.DocumentProperty)    

    ]
    interface _DocumentProperty : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(00000000), propget]
        HRESULT value([out, retval] VARIANT* pRetVal);
        [id(00000000), propputref]
        HRESULT value([in] VARIANT pRetVal);
        [id(0x60020007), propget]
        HRESULT type([out, retval] PropertyType* pRetVal);
        [id(0x60020008)]
        HRESULT ToInt([out, retval] long* pRetVal);
        [id(0x60020009)]
        HRESULT ToDouble([out, retval] double* pRetVal);
        [id(0x6002000a)]
        HRESULT ToDateTime([out, retval] DATE* pRetVal);
        [id(0x6002000b)]
        HRESULT ToBool([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(6B70A148-E1A0-30D2-BA39-5FCEFB6CD7D6),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Properties.CustomDocumentProperties)    

    ]
    interface _CustomDocumentProperties : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x60020008)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009)]
        HRESULT IndexOf(
                        [in] BSTR Name, 
                        [out, retval] long* pRetVal);
        [id(0x6002000a)]
        HRESULT Remove([in] BSTR Name);
        [id(0x6002000b)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000c)]
        HRESULT Clear();
        [id(0x6002000d)]
        HRESULT Add(
                        [in] BSTR Name, 
                        [in] BSTR value, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x6002000e),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_2(
                        [in] BSTR Name, 
                        [in] long value, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_3(
                        [in] BSTR Name, 
                        [in] DATE value, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x60020010),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_4(
                        [in] BSTR Name, 
                        [in] VARIANT_BOOL value, 
                        [out, retval] _DocumentProperty** pRetVal);
        [id(0x60020011),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Add)]
        HRESULT Add_5(
                        [in] BSTR Name, 
                        [in] double value, 
                        [out, retval] _DocumentProperty** pRetVal);
    };

    [
      odl,
      uuid(2ACA05FD-E094-3A6A-8054-F3B9018A612F),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SaveOptions)    

    ]
    interface _SaveOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT ExportPrettyFormat([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020004), propput]
        HRESULT ExportPrettyFormat([in] VARIANT_BOOL pRetVal);
        [id(0x60020006), propget]
        HRESULT ExportImagesFolder([out, retval] BSTR* pRetVal);
        [id(0x60020006), propput]
        HRESULT ExportImagesFolder([in] BSTR pRetVal);
        [id(0x60020008), propget]
        HRESULT HtmlExportImagesFolder([out, retval] BSTR* pRetVal);
        [id(0x60020008), propput]
        HRESULT HtmlExportImagesFolder([in] BSTR pRetVal);
        [id(0x6002000a), propget]
        HRESULT HtmlExportImagesFolderAlias([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT HtmlExportImagesFolderAlias([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT HtmlExportCssStyleSheetFileName([out, retval] BSTR* pRetVal);
        [id(0x6002000c), propput]
        HRESULT HtmlExportCssStyleSheetFileName([in] BSTR pRetVal);
        [id(0x6002000e), propget]
        HRESULT HtmlExportTextInputFormFieldAsText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT HtmlExportTextInputFormFieldAsText([in] VARIANT_BOOL pRetVal);
        [id(0x60020010), propget]
        HRESULT HtmlExportHeadersFooters([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020010), propput]
        HRESULT HtmlExportHeadersFooters([in] VARIANT_BOOL pRetVal);
        [id(0x60020012), propget]
        HRESULT HtmlExportAllowNegativeLeftIndent([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020012), propput]
        HRESULT HtmlExportAllowNegativeLeftIndent([in] VARIANT_BOOL pRetVal);
        [id(0x60020014), propget]
        HRESULT HtmlExportXhtmlTransitional([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020014), propput]
        HRESULT HtmlExportXhtmlTransitional([in] VARIANT_BOOL pRetVal);
        [id(0x60020016), propget]
        HRESULT HtmlExportDocumentProperties([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propput]
        HRESULT HtmlExportDocumentProperties([in] VARIANT_BOOL pRetVal);
        [id(0x60020018), propget]
        HRESULT HtmlExportMetafileAsRaster([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propput]
        HRESULT HtmlExportMetafileAsRaster([in] VARIANT_BOOL pRetVal);
        [id(0x6002001a), propget]
        HRESULT HtmlExportScaleImageToShapeSize([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002001a), propput]
        HRESULT HtmlExportScaleImageToShapeSize([in] VARIANT_BOOL pRetVal);
        [id(0x6002001c), propget]
        HRESULT HtmlExportImageResolution([out, retval] long* pRetVal);
        [id(0x6002001c), propput]
        HRESULT HtmlExportImageResolution([in] long pRetVal);
        [id(0x6002001e), propget]
        HRESULT HtmlExportMetafileResolution([out, retval] long* pRetVal);
        [id(0x6002001e), propput]
        HRESULT HtmlExportMetafileResolution([in] long pRetVal);
        [id(0x60020020), propget]
        HRESULT HtmlExportCssStyleSheetType([out, retval] CssStyleSheetType* pRetVal);
        [id(0x60020020), propput]
        HRESULT HtmlExportCssStyleSheetType([in] CssStyleSheetType pRetVal);
        [id(0x60020022), propget]
        HRESULT HtmlExportPageSetup([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020022), propput]
        HRESULT HtmlExportPageSetup([in] VARIANT_BOOL pRetVal);
        [id(0x60020024), propget]
        HRESULT HtmlExportEncoding([out, retval] _Encoding** pRetVal);
        [id(0x60020024), propputref]
        HRESULT HtmlExportEncoding([in] _Encoding* pRetVal);
        [id(0x60020026)]
        HRESULT add_HtmlExportImageSaving([in] _ExportImageSavingEventHandler* value);
        [id(0x60020027)]
        HRESULT remove_HtmlExportImageSaving([in] _ExportImageSavingEventHandler* value);
        [id(0x60020028), propget]
        HRESULT EpubExportNavigationMapLevel([out, retval] long* pRetVal);
        [id(0x60020028), propput]
        HRESULT EpubExportNavigationMapLevel([in] long pRetVal);
        [id(0x6002002a), propget]
        HRESULT PdfExportImagesFolder([out, retval] BSTR* pRetVal);
        [id(0x6002002a), propput]
        HRESULT PdfExportImagesFolder([in] BSTR pRetVal);
        [id(0x6002002c), propget]
        HRESULT PdfExportBookmarkLevel([out, retval] long* pRetVal);
        [id(0x6002002c), propput]
        HRESULT PdfExportBookmarkLevel([in] long pRetVal);
        [id(0x6002002e), propget]
        HRESULT PdfExportFormFieldsAsText([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002e), propput]
        HRESULT PdfExportFormFieldsAsText([in] VARIANT_BOOL pRetVal);
        [id(0x60020030), propget]
        HRESULT PdfExportCheckBoxFontName([out, retval] BSTR* pRetVal);
        [id(0x60020030), propput]
        HRESULT PdfExportCheckBoxFontName([in] BSTR pRetVal);
        [id(0x60020032), propget]
        HRESULT PdfExportCheckBoxEmptySign([out, retval] unsigned short* pRetVal);
        [id(0x60020032), propput]
        HRESULT PdfExportCheckBoxEmptySign([in] unsigned short pRetVal);
        [id(0x60020034), propget]
        HRESULT PdfExportCheckBoxSelectedSign([out, retval] unsigned short* pRetVal);
        [id(0x60020034), propput]
        HRESULT PdfExportCheckBoxSelectedSign([in] unsigned short pRetVal);
        [id(0x60020036), propget]
        HRESULT PdfExportMetafileResolution([out, retval] long* pRetVal);
        [id(0x60020036), propput]
        HRESULT PdfExportMetafileResolution([in] long pRetVal);
        [id(0x60020038), propget]
        HRESULT PdfExportFloatingTables([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020038), propput]
        HRESULT PdfExportFloatingTables([in] VARIANT_BOOL pRetVal);
        [id(0x6002003a)]
        HRESULT add_PdfExportImageSaving([in] _ExportImageSavingEventHandler* value);
        [id(0x6002003b)]
        HRESULT remove_PdfExportImageSaving([in] _ExportImageSavingEventHandler* value);
        [id(0x6002003c), propget]
        HRESULT RtfExportCompactSize([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003c), propput]
        HRESULT RtfExportCompactSize([in] VARIANT_BOOL pRetVal);
        [id(0x6002003e), propget]
        HRESULT TxtExportHeadersFooters([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002003e), propput]
        HRESULT TxtExportHeadersFooters([in] VARIANT_BOOL pRetVal);
        [id(0x60020040), propget]
        HRESULT TxtExportEncoding([out, retval] _Encoding** pRetVal);
        [id(0x60020040), propputref]
        HRESULT TxtExportEncoding([in] _Encoding* pRetVal);
        [id(0x60020042), propget]
        HRESULT TxtExportParagraphBreak([out, retval] BSTR* pRetVal);
        [id(0x60020042), propput]
        HRESULT TxtExportParagraphBreak([in] BSTR pRetVal);
        [id(0x60020044), propget]
        HRESULT TxtExportTableLayout([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020044), propput]
        HRESULT TxtExportTableLayout([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(5346732C-E077-363D-B762-471DFF1470AA),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ExportImageSavingEventHandler)    

    ]
    interface _ExportImageSavingEventHandler : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2(
                        [in] VARIANT sender, 
                        [in] _ExportImageSavingEventArgs* e);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] VARIANT sender, 
                        [in] _ExportImageSavingEventArgs* e, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke([in] IAsyncResult* result);
    };

    [
      odl,
      uuid(98FC03F7-60DC-3687-A573-055C000D4CE0),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ExportImageSavingEventArgs)    

    ]
    interface _ExportImageSavingEventArgs : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT CurrentShape([out, retval] _ShapeBase** pRetVal);
        [id(0x60020005), propget]
        HRESULT IsImageAvailable([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006), propget]
        HRESULT ImageFileName([out, retval] BSTR* pRetVal);
        [id(0x60020006), propput]
        HRESULT ImageFileName([in] BSTR pRetVal);
        [id(0x60020008), propget]
        HRESULT ImageStream([out, retval] _Stream** pRetVal);
        [id(0x60020008), propputref]
        HRESULT ImageStream([in] _Stream* pRetVal);
        [id(0x6002000a), propget]
        HRESULT KeepImageStreamOpen([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propput]
        HRESULT KeepImageStreamOpen([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(306C9A5A-0235-3FB0-B70E-FEFF3B7AEF22),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.SmartTag)    

    ]
    interface _SmartTag : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT Element([out, retval] BSTR* pRetVal);
        [id(0x60020028), propput]
        HRESULT Element([in] BSTR pRetVal);
        [id(0x6002002a), propget]
        HRESULT Uri([out, retval] BSTR* pRetVal);
        [id(0x6002002a), propput]
        HRESULT Uri([in] BSTR pRetVal);
        [id(0x6002002c), propget]
        HRESULT Properties([out, retval] _CustomXmlPropertyCollection** pRetVal);
    };

    [
      odl,
      uuid(6E488170-A658-3FEE-BE2B-9501775E3BF7),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.CustomXmlPropertyCollection)    

    ]
    interface _CustomXmlPropertyCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR Name, 
                        [out, retval] _CustomXmlProperty** pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _CustomXmlProperty** pRetVal);
        [id(0x60020008)]
        HRESULT Add([in] _CustomXmlProperty* property);
        [id(0x60020009)]
        HRESULT Contains(
                        [in] BSTR Name, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a)]
        HRESULT IndexOfKey(
                        [in] BSTR Name, 
                        [out, retval] long* pRetVal);
        [id(0x6002000b)]
        HRESULT Remove([in] BSTR Name);
        [id(0x6002000c)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000d)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(FBD40483-B9B7-39A1-9124-AE38108DD8CA),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Markup.CustomXmlProperty)    

    ]
    interface _CustomXmlProperty : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020005), propget]
        HRESULT Uri([out, retval] BSTR* pRetVal);
        [id(0x60020005), propput]
        HRESULT Uri([in] BSTR pRetVal);
        [id(00000000), propget]
        HRESULT value([out, retval] BSTR* pRetVal);
        [id(00000000), propput]
        HRESULT value([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(CECB3478-AEA4-3340-9D26-5E50E044E9B4),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.UnsupportedFileFormatException)    

    ]
    interface _UnsupportedFileFormatException : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Data([out, retval] IDictionary** pRetVal);
        [id(0x60020005)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetType)]
        HRESULT GetType_2([out, retval] _Type** pRetVal);
        [id(0x60020007), propget]
        HRESULT Message([out, retval] BSTR* pRetVal);
        [id(0x60020008)]
        HRESULT GetBaseException([out, retval] _Exception** pRetVal);
        [id(0x60020009), propget]
        HRESULT StackTrace([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propget]
        HRESULT HelpLink([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT HelpLink([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT Source([out, retval] BSTR* pRetVal);
        [id(0x6002000c), propput]
        HRESULT Source([in] BSTR pRetVal);
        [id(0x6002000e), propget]
        HRESULT InnerException([out, retval] _Exception** pRetVal);
        [id(0x6002000f), propget]
        HRESULT TargetSite([out, retval] _MethodBase** pRetVal);
    };

    [
      odl,
      uuid(125E94E4-AB89-3E1B-B72D-4853C10C27F3),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.IncorrectPasswordException)    

    ]
    interface _IncorrectPasswordException : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Data([out, retval] IDictionary** pRetVal);
        [id(0x60020005)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetType)]
        HRESULT GetType_2([out, retval] _Type** pRetVal);
        [id(0x60020007), propget]
        HRESULT Message([out, retval] BSTR* pRetVal);
        [id(0x60020008)]
        HRESULT GetBaseException([out, retval] _Exception** pRetVal);
        [id(0x60020009), propget]
        HRESULT StackTrace([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propget]
        HRESULT HelpLink([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT HelpLink([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT Source([out, retval] BSTR* pRetVal);
        [id(0x6002000c), propput]
        HRESULT Source([in] BSTR pRetVal);
        [id(0x6002000e), propget]
        HRESULT InnerException([out, retval] _Exception** pRetVal);
        [id(0x6002000f), propget]
        HRESULT TargetSite([out, retval] _MethodBase** pRetVal);
    };

    [
      odl,
      uuid(08E690EB-60E7-3AC1-8D20-96D602DA63DB),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.CompositeNode)    

    ]
    interface _CompositeNode : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
    };

    [
      odl,
      uuid(A98FB001-1137-301E-9338-6FD18B2C85B3),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Node)    

    ]
    interface _Node : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
    };

    [
      odl,
      uuid(6187CE89-75DB-3AB3-853B-0E1643CC8C68),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Comment)    

    ]
    interface _Comment : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020029), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002b), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002c), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002d), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002e), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020030)]
        HRESULT EnsureMinimum();
        [id(0x60020031), propget]
        HRESULT Initial([out, retval] BSTR* pRetVal);
        [id(0x60020031), propput]
        HRESULT Initial([in] BSTR pRetVal);
        [id(0x60020033), propget]
        HRESULT DateTime([out, retval] DATE* pRetVal);
        [id(0x60020033), propput]
        HRESULT DateTime([in] DATE pRetVal);
        [id(0x60020035), propget]
        HRESULT Author([out, retval] BSTR* pRetVal);
        [id(0x60020035), propput]
        HRESULT Author([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(72590486-85B8-31E1-9D03-5FFD2F31F527),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.InlineStory)    

    ]
    interface _InlineStory : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020029), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002b), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002c), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002d), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002e), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020030)]
        HRESULT EnsureMinimum();
    };

    [
      odl,
      uuid(1CC27594-59C5-3822-A107-57739A83B402),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldEnd)    

    ]
    interface _FieldEnd : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propget]
        HRESULT FieldType([out, retval] FieldType* pRetVal);
        [id(0x60020019), propget]
        HRESULT HasSeparator([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(AD9FD1FA-4353-394F-933B-F5A5DBED3F28),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldChar)    

    ]
    interface _FieldChar : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propget]
        HRESULT FieldType([out, retval] FieldType* pRetVal);
    };

    [
      odl,
      uuid(574BA331-98C6-3AEB-A2EB-5757CC47ADD6),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldStart)    

    ]
    interface _FieldStart : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propget]
        HRESULT FieldType([out, retval] FieldType* pRetVal);
    };

    [
      odl,
      uuid(7FAF2EC8-1B98-3283-A172-7E6D8064E426),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FieldSeparator)    

    ]
    interface _FieldSeparator : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020016), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020018), propget]
        HRESULT FieldType([out, retval] FieldType* pRetVal);
    };

    [
      odl,
      uuid(972F8E50-A91C-3F74-A690-082EEA950AB3),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.Field)    

    ]
    interface _Field : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetFieldCode([out, retval] BSTR* pRetVal);
        [id(0x60020005)]
        HRESULT Remove();
        [id(0x60020006), propget]
        HRESULT Start([out, retval] _FieldStart** pRetVal);
        [id(0x60020007), propget]
        HRESULT Separator([out, retval] _FieldSeparator** pRetVal);
        [id(0x60020008), propget]
        HRESULT End([out, retval] _FieldEnd** pRetVal);
        [id(0x60020009), propget]
        HRESULT type([out, retval] FieldType* pRetVal);
        [id(0x6002000a), propget]
        HRESULT result([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT result([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(BDC2D95F-1260-3CA2-921F-524C089E8A60),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MailMerge)    

    ]
    interface _MailMerge : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Execute([in] IMailMergeDataSource* DataSource);
        [id(0x60020005),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Execute)]
        HRESULT Execute_2(
                        [in] SAFEARRAY(BSTR) fieldNames, 
                        [in] SAFEARRAY(VARIANT) values);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Execute)]
        HRESULT Execute_3([in] IUnknown* Table);
        [id(0x60020007)]
        HRESULT ExecuteADO([in] VARIANT recordset);
        [id(0x60020008),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Execute)]
        HRESULT Execute_4([in] IUnknown* dataReader);
        [id(0x60020009),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Execute)]
        HRESULT Execute_5([in] IUnknown* dataView);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Execute)]
        HRESULT Execute_6([in] IUnknown* Row);
        [id(0x6002000b)]
        HRESULT ExecuteWithRegions([in] IMailMergeDataSource* DataSource);
        [id(0x6002000c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ExecuteWithRegions)]
        HRESULT ExecuteWithRegions_2([in] IMailMergeDataSourceRoot* dataSourceRoot);
        [id(0x6002000d),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ExecuteWithRegions)]
        HRESULT ExecuteWithRegions_3([in] IUnknown* dataSet);
        [id(0x6002000e),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ExecuteWithRegions)]
        HRESULT ExecuteWithRegions_4([in] IUnknown* dataTable);
        [id(0x6002000f)]
        HRESULT ExecuteWithRegionsADO(
                        [in] VARIANT recordset, 
                        [in] BSTR TableName);
        [id(0x60020010),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ExecuteWithRegions)]
        HRESULT ExecuteWithRegions_5([in] IUnknown* dataView);
        [id(0x60020011),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ExecuteWithRegions)]
        HRESULT ExecuteWithRegions_6(
                        [in] IUnknown* dataReader, 
                        [in] BSTR TableName);
        [id(0x60020012)]
        HRESULT GetFieldNames([out, retval] SAFEARRAY(BSTR)* pRetVal);
        [id(0x60020013)]
        HRESULT DeleteFields();
        [id(0x60020014), propget]
        HRESULT RemoveEmptyParagraphs([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020014), propput]
        HRESULT RemoveEmptyParagraphs([in] VARIANT_BOOL pRetVal);
        [id(0x60020016), propget]
        HRESULT UseNonMergeFields([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020016), propput]
        HRESULT UseNonMergeFields([in] VARIANT_BOOL pRetVal);
        [id(0x60020018), propget]
        HRESULT MappedDataFields([out, retval] _MappedDataFieldCollection** pRetVal);
        [id(0x60020019)]
        HRESULT add_MergeField([in] _MergeFieldEventHandler* value);
        [id(0x6002001a)]
        HRESULT remove_MergeField([in] _MergeFieldEventHandler* value);
        [id(0x6002001b)]
        HRESULT add_MergeImageField([in] _MergeImageFieldEventHandler* value);
        [id(0x6002001c)]
        HRESULT remove_MergeImageField([in] _MergeImageFieldEventHandler* value);
    };

    [
      odl,
      uuid(B759821F-D26F-3C1C-8513-C649AFC0B329),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventHandler)    

    ]
    interface _MergeFieldEventHandler : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2(
                        [in] VARIANT sender, 
                        [in] _MergeFieldEventArgs* e);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] VARIANT sender, 
                        [in] _MergeFieldEventArgs* e, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke([in] IAsyncResult* result);
    };

    [
      odl,
      uuid(281BE8AC-A2B1-31B6-B0D6-82E31F47B05E),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventArgs)    

    ]
    interface _MergeFieldEventArgs : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x60020005), propget]
        HRESULT TableName([out, retval] BSTR* pRetVal);
        [id(0x60020006), propget]
        HRESULT RecordIndex([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT fieldName([out, retval] BSTR* pRetVal);
        [id(0x60020008), propget]
        HRESULT DocumentFieldName([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT fieldValue([out, retval] VARIANT* pRetVal);
        [id(0x6002000a), propget]
        HRESULT Field([out, retval] _Field** pRetVal);
        [id(0x6002000b), propget]
        HRESULT Text([out, retval] BSTR* pRetVal);
        [id(0x6002000b), propput]
        HRESULT Text([in] BSTR pRetVal);
    };

    [
      odl,
      uuid(105097B3-941E-33B2-B646-06E596DE4803),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeFieldEventArgsBase)    

    ]
    interface _MergeFieldEventArgsBase : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x60020005), propget]
        HRESULT TableName([out, retval] BSTR* pRetVal);
        [id(0x60020006), propget]
        HRESULT RecordIndex([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT fieldName([out, retval] BSTR* pRetVal);
        [id(0x60020008), propget]
        HRESULT DocumentFieldName([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT fieldValue([out, retval] VARIANT* pRetVal);
        [id(0x6002000a), propget]
        HRESULT Field([out, retval] _Field** pRetVal);
    };

    [
      odl,
      uuid(15D78905-1C84-39BE-822A-93461AA3CBF0),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeImageFieldEventHandler)    

    ]
    interface _MergeImageFieldEventHandler : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2(
                        [in] VARIANT sender, 
                        [in] _MergeImageFieldEventArgs* e);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] VARIANT sender, 
                        [in] _MergeImageFieldEventArgs* e, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke([in] IAsyncResult* result);
    };

    [
      odl,
      uuid(79924B1A-7C56-320D-AABD-F5711D547D6D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MergeImageFieldEventArgs)    

    ]
    interface _MergeImageFieldEventArgs : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x60020005), propget]
        HRESULT TableName([out, retval] BSTR* pRetVal);
        [id(0x60020006), propget]
        HRESULT RecordIndex([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT fieldName([out, retval] BSTR* pRetVal);
        [id(0x60020008), propget]
        HRESULT DocumentFieldName([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT fieldValue([out, retval] VARIANT* pRetVal);
        [id(0x6002000a), propget]
        HRESULT Field([out, retval] _Field** pRetVal);
        [id(0x6002000b), propget]
        HRESULT ImageFileName([out, retval] BSTR* pRetVal);
        [id(0x6002000b), propput]
        HRESULT ImageFileName([in] BSTR pRetVal);
        [id(0x6002000d), propget]
        HRESULT ImageStream([out, retval] _Stream** pRetVal);
        [id(0x6002000d), propputref]
        HRESULT ImageStream([in] _Stream* pRetVal);
        [id(0x6002000f), propget]
        HRESULT image([out, retval] _Image** pRetVal);
        [id(0x6002000f), propputref]
        HRESULT image([in] _Image* pRetVal);
    };

    [
      odl,
      uuid(B32C8B83-E708-33DC-9CDA-56B1EB356A74),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Reporting.MappedDataFieldCollection)    

    ]
    interface _MappedDataFieldCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] BSTR DocumentFieldName, 
                        [out, retval] BSTR* pRetVal);
        [id(00000000), propput]
        HRESULT Item(
                        [in] BSTR DocumentFieldName, 
                        [in] BSTR pRetVal);
        [id(0x60020008)]
        HRESULT Add(
                        [in] BSTR DocumentFieldName, 
                        [in] BSTR dataSourceFieldName);
        [id(0x60020009)]
        HRESULT ContainsKey(
                        [in] BSTR DocumentFieldName, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a)]
        HRESULT ContainsValue(
                        [in] BSTR dataSourceFieldName, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000b)]
        HRESULT Remove([in] BSTR DocumentFieldName);
        [id(0x6002000c)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(679DCABB-6AC8-390A-8FE9-903100839436),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.DocumentBuilder)    

    ]
    interface _DocumentBuilder : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT MoveToDocumentStart();
        [id(0x60020005)]
        HRESULT MoveToDocumentEnd();
        [id(0x60020006)]
        HRESULT MoveToSection([in] long sectionIndex);
        [id(0x60020007)]
        HRESULT MoveToHeaderFooter([in] HeaderFooterType HeaderFooterType);
        [id(0x60020008)]
        HRESULT MoveToMergeField(
                        [in] BSTR fieldName, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020009),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, MoveToMergeField)]
        HRESULT MoveToMergeField_2(
                        [in] BSTR fieldName, 
                        [in] VARIANT_BOOL isAfter, 
                        [in] VARIANT_BOOL isDeleteField, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a)]
        HRESULT MoveToField(
                        [in] _Field* Field, 
                        [in] VARIANT_BOOL isAfter);
        [id(0x6002000b)]
        HRESULT MoveToBookmark(
                        [in] BSTR bookmarkName, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, MoveToBookmark)]
        HRESULT MoveToBookmark_2(
                        [in] BSTR bookmarkName, 
                        [in] VARIANT_BOOL isStart, 
                        [in] VARIANT_BOOL isAfter, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT MoveToParagraph(
                        [in] long paragraphIndex, 
                        [in] long characterIndex);
        [id(0x6002000e)]
        HRESULT MoveToCell(
                        [in] long tableIndex, 
                        [in] long rowIndex, 
                        [in] long columnIndex, 
                        [in] long characterIndex);
        [id(0x6002000f)]
        HRESULT MoveTo([in] _Node* Node);
        [id(0x60020010)]
        HRESULT DeleteRow(
                        [in] long tableIndex, 
                        [in] long rowIndex, 
                        [out, retval] _Row** pRetVal);
        [id(0x60020011)]
        HRESULT Write([in] BSTR Text);
        [id(0x60020012)]
        HRESULT Writeln([in] BSTR Text);
        [id(0x60020013),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Writeln)]
        HRESULT Writeln_2();
        [id(0x60020014)]
        HRESULT InsertParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020015)]
        HRESULT InsertBreak([in] BreakType BreakType);
        [id(0x60020016)]
        HRESULT InsertTableOfContents([in] BSTR switches);
        [id(0x60020017)]
        HRESULT InsertField(
                        [in] BSTR fieldCode, 
                        [in] BSTR fieldValue, 
                        [out, retval] _FieldStart** pRetVal);
        [id(0x60020018)]
        HRESULT InsertHyperlink(
                        [in] BSTR displayText, 
                        [in] BSTR urlOrBookmark, 
                        [in] VARIANT_BOOL isBookmark, 
                        [out, retval] _FieldStart** pRetVal);
        [id(0x60020019)]
        HRESULT InsertTextInput(
                        [in] BSTR Name, 
                        [in] TextFormFieldType type, 
                        [in] BSTR format, 
                        [in] BSTR fieldValue, 
                        [in] long MaxLength, 
                        [out, retval] _FormField** pRetVal);
        [id(0x6002001a)]
        HRESULT InsertCheckBox(
                        [in] BSTR Name, 
                        [in] VARIANT_BOOL defaultValue, 
                        [in] long Size, 
                        [out, retval] _FormField** pRetVal);
        [id(0x6002001b)]
        HRESULT InsertComboBox(
                        [in] BSTR Name, 
                        [in] SAFEARRAY(BSTR) items, 
                        [in] long selectedIndex, 
                        [out, retval] _FormField** pRetVal);
        [id(0x6002001c)]
        HRESULT InsertFootnote(
                        [in] FootnoteType FootnoteType, 
                        [in] BSTR footnoteText, 
                        [out, retval] _Footnote** pRetVal);
        [id(0x6002001d)]
        HRESULT InsertImage(
                        [in] _Image* image, 
                        [out, retval] _Shape** pRetVal);
        [id(0x6002001e),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_2(
                        [in] BSTR fileName, 
                        [out, retval] _Shape** pRetVal);
        [id(0x6002001f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_3(
                        [in] _Stream* stream, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020020),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_4(
                        [in] SAFEARRAY(unsigned char) imageBytes, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020021),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_5(
                        [in] _Image* image, 
                        [in] double Width, 
                        [in] double Height, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020022),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_6(
                        [in] BSTR fileName, 
                        [in] double Width, 
                        [in] double Height, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020023),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_7(
                        [in] _Stream* stream, 
                        [in] double Width, 
                        [in] double Height, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020024),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_8(
                        [in] SAFEARRAY(unsigned char) imageBytes, 
                        [in] double Width, 
                        [in] double Height, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020025),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_9(
                        [in] _Image* image, 
                        [in] RelativeHorizontalPosition horzPos, 
                        [in] double Left, 
                        [in] RelativeVerticalPosition vertPos, 
                        [in] double Top, 
                        [in] double Width, 
                        [in] double Height, 
                        [in] WrapType WrapType, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020026),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_10(
                        [in] BSTR fileName, 
                        [in] RelativeHorizontalPosition horzPos, 
                        [in] double Left, 
                        [in] RelativeVerticalPosition vertPos, 
                        [in] double Top, 
                        [in] double Width, 
                        [in] double Height, 
                        [in] WrapType WrapType, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020027),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_11(
                        [in] _Stream* stream, 
                        [in] RelativeHorizontalPosition horzPos, 
                        [in] double Left, 
                        [in] RelativeVerticalPosition vertPos, 
                        [in] double Top, 
                        [in] double Width, 
                        [in] double Height, 
                        [in] WrapType WrapType, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020028),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, InsertImage)]
        HRESULT InsertImage_12(
                        [in] SAFEARRAY(unsigned char) imageBytes, 
                        [in] RelativeHorizontalPosition horzPos, 
                        [in] double Left, 
                        [in] RelativeVerticalPosition vertPos, 
                        [in] double Top, 
                        [in] double Width, 
                        [in] double Height, 
                        [in] WrapType WrapType, 
                        [out, retval] _Shape** pRetVal);
        [id(0x60020029)]
        HRESULT InsertHtml([in] BSTR html);
        [id(0x6002002a)]
        HRESULT InsertCell([out, retval] _Cell** pRetVal);
        [id(0x6002002b)]
        HRESULT StartTable([out, retval] _Table** pRetVal);
        [id(0x6002002c)]
        HRESULT EndTable([out, retval] _Table** pRetVal);
        [id(0x6002002d)]
        HRESULT EndRow([out, retval] _Row** pRetVal);
        [id(0x6002002e)]
        HRESULT StartBookmark(
                        [in] BSTR bookmarkName, 
                        [out, retval] _BookmarkStart** pRetVal);
        [id(0x6002002f)]
        HRESULT EndBookmark(
                        [in] BSTR bookmarkName, 
                        [out, retval] _BookmarkEnd** pRetVal);
        [id(0x60020030), propget]
        HRESULT Document([out, retval] _Document** pRetVal);
        [id(0x60020030), propputref]
        HRESULT Document([in] _Document* pRetVal);
        [id(0x60020032), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
        [id(0x60020033), propget]
        HRESULT Bold([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020033), propput]
        HRESULT Bold([in] VARIANT_BOOL pRetVal);
        [id(0x60020035), propget]
        HRESULT Italic([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020035), propput]
        HRESULT Italic([in] VARIANT_BOOL pRetVal);
        [id(0x60020037), propget]
        HRESULT Underline([out, retval] unsigned char* pRetVal);
        [id(0x60020037), propput]
        HRESULT Underline([in] unsigned char pRetVal);
        [id(0x60020039), propget]
        HRESULT ParagraphFormat([out, retval] _ParagraphFormat** pRetVal);
        [id(0x6002003a), propget]
        HRESULT ListFormat([out, retval] _ListFormat** pRetVal);
        [id(0x6002003b), propget]
        HRESULT PageSetup([out, retval] _PageSetup** pRetVal);
        [id(0x6002003c), propget]
        HRESULT RowFormat([out, retval] _RowFormat** pRetVal);
        [id(0x6002003d), propget]
        HRESULT CellFormat([out, retval] _CellFormat** pRetVal);
        [id(0x6002003e)]
        HRESULT PushFont();
        [id(0x6002003f)]
        HRESULT PopFont();
        [id(0x60020040), propget]
        HRESULT IsAtStartOfParagraph([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020041), propget]
        HRESULT IsAtEndOfParagraph([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020042)]
        HRESULT InsertNode([in] _Node* Node);
        [id(0x60020043), propget]
        HRESULT CurrentNode([out, retval] _Node** pRetVal);
        [id(0x60020044), propget]
        HRESULT CurrentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x60020045), propget]
        HRESULT CurrentStory([out, retval] _Story** pRetVal);
        [id(0x60020046), propget]
        HRESULT CurrentSection([out, retval] _Section** pRetVal);
    };

    [
      odl,
      uuid(CA56C037-F94B-3193-9DBF-473A4C43A552),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Range)    

    ]
    interface _Range : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Text([out, retval] BSTR* pRetVal);
        [id(0x60020005), propget]
        HRESULT FormFields([out, retval] _FormFieldCollection** pRetVal);
        [id(0x60020006), propget]
        HRESULT Bookmarks([out, retval] _BookmarkCollection** pRetVal);
        [id(0x60020007)]
        HRESULT Delete();
        [id(0x60020008)]
        HRESULT Replace(
                        [in] BSTR oldValue, 
                        [in] BSTR newValue, 
                        [in] VARIANT_BOOL isMatchCase, 
                        [in] VARIANT_BOOL isMatchWholeWord, 
                        [out, retval] long* pRetVal);
        [id(0x60020009),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Replace)]
        HRESULT Replace_2(
                        [in] IUnknown* pattern, 
                        [in] BSTR replacement, 
                        [out, retval] long* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Replace)]
        HRESULT Replace_3(
                        [in] IUnknown* pattern, 
                        [in] _ReplaceEvaluator* evaluator, 
                        [in] VARIANT_BOOL isForward, 
                        [out, retval] long* pRetVal);
        [id(0x6002000b)]
        HRESULT UpdateFields();
    };

    [
      odl,
      uuid(D27707DC-CE4A-3744-B75D-0FBEB15B55C1),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Bookmark)    

    ]
    interface _Bookmark : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020004), propput]
        HRESULT Name([in] BSTR pRetVal);
        [id(0x60020006), propget]
        HRESULT Text([out, retval] BSTR* pRetVal);
        [id(0x60020006), propput]
        HRESULT Text([in] BSTR pRetVal);
        [id(0x60020008), propget]
        HRESULT BookmarkStart([out, retval] _BookmarkStart** pRetVal);
        [id(0x60020009), propget]
        HRESULT BookmarkEnd([out, retval] _BookmarkEnd** pRetVal);
        [id(0x6002000a)]
        HRESULT Remove();
    };

    [
      odl,
      uuid(D29B41CA-F79D-30AE-B7BB-35DA2BAA6E49),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkStart)    

    ]
    interface _BookmarkStart : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x60020015), propget]
        HRESULT Bookmark([out, retval] _Bookmark** pRetVal);
    };

    [
      odl,
      uuid(7859975A-FA6A-3AEA-9D9F-EEC6BE3F261A),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkEnd)    

    ]
    interface _BookmarkEnd : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0x60020014), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
    };

    [
      odl,
      uuid(6843CA22-4648-300A-9FCD-561F899825EC),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BookmarkCollection)    

    ]
    interface _BookmarkCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Bookmark** pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] BSTR bookmarkName, 
                        [out, retval] _Bookmark** pRetVal);
        [id(0x60020008)]
        HRESULT Remove([in] _Bookmark* Bookmark);
        [id(0x60020009),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Remove)]
        HRESULT Remove_2([in] BSTR bookmarkName);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(EA68795C-015D-35F6-B83D-4B0643C182EA),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Footnote)    

    ]
    interface _Footnote : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT StoryType([out, retval] StoryType* pRetVal);
        [id(0x60020029), propget]
        HRESULT ParentParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002a), propget]
        HRESULT FirstParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002b), propget]
        HRESULT LastParagraph([out, retval] _Paragraph** pRetVal);
        [id(0x6002002c), propget]
        HRESULT Paragraphs([out, retval] _ParagraphCollection** pRetVal);
        [id(0x6002002d), propget]
        HRESULT Tables([out, retval] _TableCollection** pRetVal);
        [id(0x6002002e), propget]
        HRESULT IsInsertRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002002f), propget]
        HRESULT IsDeleteRevision([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020030)]
        HRESULT EnsureMinimum();
        [id(0x60020031), propget]
        HRESULT FootnoteType([out, retval] FootnoteType* pRetVal);
        [id(0x60020032), propget]
        HRESULT Font([out, retval] _Font** pRetVal);
    };

    [
      odl,
      uuid(62D74EB4-E4BC-37B7-A0A5-EAEEC56A6ED7),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SaveOutputParameters)    

    ]
    interface _SaveOutputParameters : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT ContentType([out, retval] BSTR* pRetVal);
    };

    [
      odl,
      uuid(2254AD04-A151-3921-AC32-F3C28EB81483),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Border)    

    ]
    interface _Border : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT ClearFormatting();
        [id(0x60020005), propget]
        HRESULT LineStyle([out, retval] LineStyle* pRetVal);
        [id(0x60020005), propput]
        HRESULT LineStyle([in] LineStyle pRetVal);
        [id(0x60020007), propget]
        HRESULT LineWidth([out, retval] double* pRetVal);
        [id(0x60020007), propput]
        HRESULT LineWidth([in] double pRetVal);
        [id(0x60020009), propget]
        HRESULT IsVisible([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000a), propget]
        HRESULT Color([out, retval] OLE_COLOR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT Color([in] OLE_COLOR pRetVal);
        [id(0x6002000c), propget]
        HRESULT DistanceFromText([out, retval] double* pRetVal);
        [id(0x6002000c), propput]
        HRESULT DistanceFromText([in] double pRetVal);
        [id(0x6002000e), propget]
        HRESULT Shadow([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000e), propput]
        HRESULT Shadow([in] VARIANT_BOOL pRetVal);
    };

    [
      odl,
      uuid(9E5269A6-285E-3585-B28E-0924C645304E),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Fields.FormFieldCollection)    

    ]
    interface _FormFieldCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020005), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _FormField** pRetVal);
        [id(0x60020007), propget]
        HRESULT Item_2(
                        [in] BSTR bookmarkName, 
                        [out, retval] _FormField** pRetVal);
        [id(0x60020008)]
        HRESULT Remove([in] _FormField* FormField);
        [id(0x60020009),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Remove)]
        HRESULT Remove_2([in] BSTR FormField);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
    };

    [
      odl,
      uuid(226700B9-2582-311C-9CD8-A1E769481D10),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.SectionCollection)    

    ]
    interface _SectionCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Section** pRetVal);
    };

    [
      odl,
      uuid(7A46EC48-BD69-3782-94B0-C5FC7F816260),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BuildingBlocks.GlossaryDocument)    

    ]
    interface _GlossaryDocument : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028)]
        HRESULT ImportNode(
                        [in] _Node* srcNode, 
                        [in] VARIANT_BOOL isImportChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020029),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, ImportNode)]
        HRESULT ImportNode_2(
                        [in] _Node* srcNode, 
                        [in] VARIANT_BOOL isImportChildren, 
                        [in] ImportFormatMode ImportFormatMode, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002002a)]
        HRESULT add_NodeInserting([in] _NodeChangedEventHandler* value);
        [id(0x6002002b)]
        HRESULT remove_NodeInserting([in] _NodeChangedEventHandler* value);
        [id(0x6002002c)]
        HRESULT add_NodeInserted([in] _NodeChangedEventHandler* value);
        [id(0x6002002d)]
        HRESULT remove_NodeInserted([in] _NodeChangedEventHandler* value);
        [id(0x6002002e)]
        HRESULT add_NodeRemoving([in] _NodeChangedEventHandler* value);
        [id(0x6002002f)]
        HRESULT remove_NodeRemoving([in] _NodeChangedEventHandler* value);
        [id(0x60020030)]
        HRESULT add_NodeRemoved([in] _NodeChangedEventHandler* value);
        [id(0x60020031)]
        HRESULT remove_NodeRemoved([in] _NodeChangedEventHandler* value);
        [id(0x60020032), propget]
        HRESULT FontInfos([out, retval] _FontInfoCollection** pRetVal);
        [id(0x60020033), propget]
        HRESULT Styles([out, retval] _StyleCollection** pRetVal);
        [id(0x60020034), propget]
        HRESULT Lists([out, retval] _ListCollection** pRetVal);
        [id(0x60020035), propget]
        HRESULT BuildingBlocks([out, retval] _BuildingBlockCollection** pRetVal);
        [id(0x60020036), propget]
        HRESULT FirstBuildingBlock([out, retval] _BuildingBlock** pRetVal);
        [id(0x60020037), propget]
        HRESULT LastBuildingBlock([out, retval] _BuildingBlock** pRetVal);
        [id(0x60020038)]
        HRESULT GetBuildingBlock(
                        [in] BuildingBlockGallery gallery, 
                        [in] BSTR Category, 
                        [in] BSTR Name, 
                        [out, retval] _BuildingBlock** pRetVal);
    };

    [
      odl,
      uuid(F9E134A6-1735-39A5-ACEB-55D0404E0DB6),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BuildingBlocks.BuildingBlockCollection)    

    ]
    interface _BuildingBlockCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _BuildingBlock** pRetVal);
    };

    [
      odl,
      uuid(27C07B15-C9EC-3998-AA17-3BFD84B35607),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.BuildingBlocks.BuildingBlock)    

    ]
    interface _BuildingBlock : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT NodeType([out, retval] NodeType* pRetVal);
        [id(0x60020005), propget]
        HRESULT IsComposite([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020006)]
        HRESULT Clone(
                        [in] VARIANT_BOOL isCloneChildren, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020007)]
        HRESULT Accept(
                        [in] _DocumentVisitor* visitor, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020008)]
        HRESULT GetText([out, retval] BSTR* pRetVal);
        [id(0x60020009), propget]
        HRESULT ParentNode([out, retval] _CompositeNode** pRetVal);
        [id(0x6002000a), propget]
        HRESULT Document([out, retval] _DocumentBase** pRetVal);
        [id(0x6002000b), propget]
        HRESULT PreviousSibling([out, retval] _Node** pRetVal);
        [id(0x6002000c), propget]
        HRESULT NextSibling([out, retval] _Node** pRetVal);
        [id(0x6002000d), propget]
        HRESULT Range([out, retval] _Range** pRetVal);
        [id(0x6002000e)]
        HRESULT GetAncestor(
                        [in] _Type* ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002000f),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetAncestor)]
        HRESULT GetAncestor_2(
                        [in] NodeType ancestorType, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020010)]
        HRESULT Remove();
        [id(0x60020011)]
        HRESULT NextPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020012)]
        HRESULT PreviousPreOrder(
                        [in] _Node* rootNode, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020013)]
        HRESULT ToTxt([out, retval] BSTR* pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020015)]
        HRESULT CreateNavigator([out, retval] IUnknown** pRetVal);
        [id(0x60020016), propget]
        HRESULT HasChildNodes([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020017), propget]
        HRESULT ChildNodes([out, retval] _NodeCollection** pRetVal);
        [id(0x60020018), propget]
        HRESULT FirstChild([out, retval] _Node** pRetVal);
        [id(0x60020019), propget]
        HRESULT LastChild([out, retval] _Node** pRetVal);
        [id(0x6002001a), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x6002001b)]
        HRESULT GetChildNodes(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001c),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetChildNodes)]
        HRESULT GetChildNodes_2(
                        [in] NodeType NodeType, 
                        [in] VARIANT_BOOL isDeep, 
                        [in] VARIANT_BOOL isLive, 
                        [out, retval] _NodeCollection** pRetVal);
        [id(0x6002001d)]
        HRESULT GetChild(
                        [in] NodeType NodeType, 
                        [in] long index, 
                        [in] VARIANT_BOOL isDeep, 
                        [out, retval] _Node** pRetVal);
        [id(0x6002001e)]
        HRESULT SelectNodes(
                        [in] BSTR xpath, 
                        [out, retval] _NodeList** pRetVal);
        [id(0x6002001f)]
        HRESULT SelectSingleNode(
                        [in] BSTR xpath, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020020)]
        HRESULT AppendChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020021)]
        HRESULT PrependChild(
                        [in] _Node* newChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020022)]
        HRESULT InsertAfter(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020023)]
        HRESULT InsertBefore(
                        [in] _Node* newChild, 
                        [in] _Node* refChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020024)]
        HRESULT RemoveChild(
                        [in] _Node* oldChild, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020025)]
        HRESULT RemoveAllChildren();
        [id(0x60020026)]
        HRESULT RemoveSmartTags();
        [id(0x60020027)]
        HRESULT IndexOf(
                        [in] _Node* child, 
                        [out, retval] long* pRetVal);
        [id(0x60020028), propget]
        HRESULT Sections([out, retval] _SectionCollection** pRetVal);
        [id(0x60020029), propget]
        HRESULT FirstSection([out, retval] _Section** pRetVal);
        [id(0x6002002a), propget]
        HRESULT LastSection([out, retval] _Section** pRetVal);
        [id(0x6002002b), propget]
        HRESULT Name([out, retval] BSTR* pRetVal);
        [id(0x6002002b), propput]
        HRESULT Name([in] BSTR pRetVal);
        [id(0x6002002d), propget]
        HRESULT Guid([out, retval] GUID* pRetVal);
        [id(0x6002002d), propput]
        HRESULT Guid([in] GUID pRetVal);
        [id(0x6002002f), propget]
        HRESULT Description([out, retval] BSTR* pRetVal);
        [id(0x6002002f), propput]
        HRESULT Description([in] BSTR pRetVal);
        [id(0x60020031), propget]
        HRESULT gallery([out, retval] BuildingBlockGallery* pRetVal);
        [id(0x60020031), propput]
        HRESULT gallery([in] BuildingBlockGallery pRetVal);
        [id(0x60020033), propget]
        HRESULT Category([out, retval] BSTR* pRetVal);
        [id(0x60020033), propput]
        HRESULT Category([in] BSTR pRetVal);
        [id(0x60020035), propget]
        HRESULT Behavior([out, retval] BuildingBlockBehavior* pRetVal);
        [id(0x60020035), propput]
        HRESULT Behavior([in] BuildingBlockBehavior pRetVal);
        [id(0x60020037), propget]
        HRESULT type([out, retval] BuildingBlockType* pRetVal);
        [id(0x60020037), propput]
        HRESULT type([in] BuildingBlockType pRetVal);
    };

    [
      odl,
      uuid(BD9F8174-C9E3-3EF9-9B09-3E7147C16A91),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.RunCollection)    

    ]
    interface _RunCollection : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(0x60020007)]
        HRESULT Add([in] _Node* Node);
        [id(0x60020008)]
        HRESULT Insert(
                        [in] long index, 
                        [in] _Node* Node);
        [id(0x60020009)]
        HRESULT Remove([in] _Node* Node);
        [id(0x6002000a)]
        HRESULT RemoveAt([in] long index);
        [id(0x6002000b)]
        HRESULT Clear();
        [id(0x6002000c)]
        HRESULT Contains(
                        [in] _Node* Node, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000d)]
        HRESULT IndexOf(
                        [in] _Node* Node, 
                        [out, retval] long* pRetVal);
        [id(0x6002000e)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
        [id(0x6002000f), propget]
        HRESULT Item_2(
                        [in] long index, 
                        [out, retval] _Run** pRetVal);
    };

    [
      odl,
      uuid(6BCDD665-2874-31D3-A5C7-AFEC26603D23),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FileCorruptedException)    

    ]
    interface _FileCorruptedException : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Data([out, retval] IDictionary** pRetVal);
        [id(0x60020005)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020006),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, GetType)]
        HRESULT GetType_2([out, retval] _Type** pRetVal);
        [id(0x60020007), propget]
        HRESULT Message([out, retval] BSTR* pRetVal);
        [id(0x60020008)]
        HRESULT GetBaseException([out, retval] _Exception** pRetVal);
        [id(0x60020009), propget]
        HRESULT StackTrace([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propget]
        HRESULT HelpLink([out, retval] BSTR* pRetVal);
        [id(0x6002000a), propput]
        HRESULT HelpLink([in] BSTR pRetVal);
        [id(0x6002000c), propget]
        HRESULT Source([out, retval] BSTR* pRetVal);
        [id(0x6002000c), propput]
        HRESULT Source([in] BSTR pRetVal);
        [id(0x6002000e), propget]
        HRESULT InnerException([out, retval] _Exception** pRetVal);
        [id(0x6002000f), propget]
        HRESULT TargetSite([out, retval] _MethodBase** pRetVal);
    };

    [
      odl,
      uuid(A2863F84-634C-387D-A771-4009D6445B7E),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ReplaceEvaluator)    

    ]
    interface _ReplaceEvaluator : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetInvocationList([out, retval] SAFEARRAY(_Delegate*)* pRetVal);
        [id(0x60020005)]
        HRESULT Clone([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT GetObjectData(
                        [in] _SerializationInfo* info, 
                        [in] StreamingContext context);
        [id(0x60020007), vararg]
        HRESULT DynamicInvoke(
                        [in] SAFEARRAY(VARIANT) args, 
                        [out, retval] VARIANT* pRetVal);
        [id(0x60020008), propget]
        HRESULT Method([out, retval] _MethodInfo** pRetVal);
        [id(0x60020009), propget]
        HRESULT Target([out, retval] VARIANT* pRetVal);
        [id(0x6002000a),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Invoke)]
        HRESULT Invoke_2(
                        [in] VARIANT sender, 
                        [in] _ReplaceEvaluatorArgs* e, 
                        [out, retval] ReplaceAction* pRetVal);
        [id(0x6002000b)]
        HRESULT BeginInvoke(
                        [in] VARIANT sender, 
                        [in] _ReplaceEvaluatorArgs* e, 
                        [in] _AsyncCallback* callback, 
                        [in] VARIANT object, 
                        [out, retval] IAsyncResult** pRetVal);
        [id(0x6002000c)]
        HRESULT EndInvoke(
                        [in] IAsyncResult* result, 
                        [out, retval] ReplaceAction* pRetVal);
    };

    [
      odl,
      uuid(C3A16025-38EE-3846-B567-44F2EF990F4F),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ReplaceEvaluatorArgs)    

    ]
    interface _ReplaceEvaluatorArgs : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT Match([out, retval] IUnknown** pRetVal);
        [id(0x60020005), propget]
        HRESULT MatchNode([out, retval] _Node** pRetVal);
        [id(0x60020006), propget]
        HRESULT MatchOffset([out, retval] long* pRetVal);
        [id(0x60020007), propget]
        HRESULT replacement([out, retval] BSTR* pRetVal);
        [id(0x60020007), propput]
        HRESULT replacement([in] BSTR pRetVal);
        [id(0x60020009), propget]
        HRESULT GroupName([out, retval] BSTR* pRetVal);
        [id(0x60020009), propput]
        HRESULT GroupName([in] BSTR pRetVal);
        [id(0x6002000b), propget]
        HRESULT GroupIndex([out, retval] long* pRetVal);
        [id(0x6002000b), propput]
        HRESULT GroupIndex([in] long pRetVal);
    };

    [
      odl,
      uuid(1732958B-15B4-3200-88A6-1A435E5D0823),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.NodeList)    

    ]
    interface _NodeList : IDispatch {
        [id(0x60020000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0xfffffffc)]
        HRESULT GetEnumerator([out, retval] IEnumVARIANT** pRetVal);
        [id(00000000), propget]
        HRESULT Item(
                        [in] long index, 
                        [out, retval] _Node** pRetVal);
        [id(0x60020006), propget]
        HRESULT Count([out, retval] long* pRetVal);
        [id(0x60020007)]
        HRESULT ToArray([out, retval] SAFEARRAY(_Node*)* pRetVal);
    };

    [
      odl,
      uuid(4F7A310F-4A59-3598-A629-CFD820C063BC),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.FileFormatUtil)    

    ]
    interface _FileFormatUtil : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
    };

    [
      odl,
      uuid(B4B924FB-712B-3E4F-8686-E19E743557B1),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.PdfOptions)    

    ]
    interface _PdfOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT HeadingsOutlineLevels([out, retval] long* pRetVal);
        [id(0x60020004), propput]
        HRESULT HeadingsOutlineLevels([in] long pRetVal);
        [id(0x60020006), propget]
        HRESULT ExpandedOutlineLevels([out, retval] long* pRetVal);
        [id(0x60020006), propput]
        HRESULT ExpandedOutlineLevels([in] long pRetVal);
        [id(0x60020008), propget]
        HRESULT BookmarksOutlineLevel([out, retval] long* pRetVal);
        [id(0x60020008), propput]
        HRESULT BookmarksOutlineLevel([in] long pRetVal);
        [id(0x6002000a), propget]
        HRESULT TextCompression([out, retval] PdfTextCompression* pRetVal);
        [id(0x6002000a), propput]
        HRESULT TextCompression([in] PdfTextCompression pRetVal);
        [id(0x6002000c), propget]
        HRESULT IsEmbedTrueTypeFontsForAsciiChars([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x6002000c), propput]
        HRESULT IsEmbedTrueTypeFontsForAsciiChars([in] VARIANT_BOOL pRetVal);
        [id(0x6002000e), propget]
        HRESULT Compliance([out, retval] PdfCompliance* pRetVal);
        [id(0x6002000e), propput]
        HRESULT Compliance([in] PdfCompliance pRetVal);
        [id(0x60020010), propget]
        HRESULT JpegQuality([out, retval] long* pRetVal);
        [id(0x60020010), propput]
        HRESULT JpegQuality([in] long pRetVal);
        [id(0x60020012)]
        HRESULT Clone([out, retval] _PdfOptions** pRetVal);
    };

    [
      odl,
      uuid(2A140CE7-AC4E-3223-9C65-814ADF7527EA),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.XpsOptions)    

    ]
    interface _XpsOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
    };

    [
      odl,
      uuid(59019DC4-4277-3861-B087-22131223280D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.ImageOptions)    

    ]
    interface _ImageOptions : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004), propget]
        HRESULT PaperColor([out, retval] OLE_COLOR* pRetVal);
        [id(0x60020004), propput]
        HRESULT PaperColor([in] OLE_COLOR pRetVal);
        [id(0x60020006), propget]
        HRESULT Resolution([out, retval] single* pRetVal);
        [id(0x60020006), propput]
        HRESULT Resolution([in] single pRetVal);
        [id(0x60020008), propget]
        HRESULT JpegQuality([out, retval] long* pRetVal);
        [id(0x60020008), propput]
        HRESULT JpegQuality([in] long pRetVal);
        [id(0x6002000a), propget]
        HRESULT TiffCompression([out, retval] TiffCompression* pRetVal);
        [id(0x6002000a), propput]
        HRESULT TiffCompression([in] TiffCompression pRetVal);
        [id(0x6002000c)]
        HRESULT Clone([out, retval] _ImageOptions** pRetVal);
    };

    [
      odl,
      uuid(F0ECD985-9D0F-3830-B572-5AE4CB55B0AA),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.PageInfo)    

    ]
    interface _PageInfo : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetSizeInPixels(
                        [in] single scale, 
                        [in] single dpi, 
                        [out, retval] Size* pRetVal);
        [id(0x60020005)]
        HRESULT GetDotNetPaperSize(
                        [in] IUnknown* printerSettings, 
                        [out, retval] IUnknown** pRetVal);
        [id(0x60020006)]
        HRESULT GetDotNetPaperSource(
                        [in] IUnknown* printerSettings, 
                        [out, retval] IUnknown** pRetVal);
        [id(0x60020007), propget]
        HRESULT PaperSize([out, retval] PaperSize* pRetVal);
        [id(0x60020008), propget]
        HRESULT WidthInPoints([out, retval] single* pRetVal);
        [id(0x60020009), propget]
        HRESULT HeightInPoints([out, retval] single* pRetVal);
        [id(0x6002000a), propget]
        HRESULT SizeInPoints([out, retval] SizeF* pRetVal);
        [id(0x6002000b), propget]
        HRESULT PaperTray([out, retval] PaperTray* pRetVal);
        [id(0x6002000c), propget]
        HRESULT Landscape([out, retval] VARIANT_BOOL* pRetVal);
    };

    [
      odl,
      uuid(0FDB0E93-8641-32DD-8752-ADAF18A99635),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.Rendering.AsposeWordsPrintDocument)    

    ]
    interface _AsposeWordsPrintDocument : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT GetLifetimeService([out, retval] VARIANT* pRetVal);
        [id(0x60020005)]
        HRESULT InitializeLifetimeService([out, retval] VARIANT* pRetVal);
        [id(0x60020006)]
        HRESULT CreateObjRef(
                        [in] _Type* requestedType, 
                        [out, retval] _ObjRef** pRetVal);
        [id(0x60020007), propget]
        HRESULT Site([out, retval] ISite** pRetVal);
        [id(0x60020007), propputref]
        HRESULT Site([in] ISite* pRetVal);
        [id(0x60020009)]
        HRESULT add_Disposed([in] _EventHandler* value);
        [id(0x6002000a)]
        HRESULT remove_Disposed([in] _EventHandler* value);
        [id(0x6002000b)]
        HRESULT Dispose();
        [id(0x6002000c), propget]
        HRESULT Container([out, retval] IContainer** pRetVal);
        [id(0x6002000d), propget]
        HRESULT DefaultPageSettings([out, retval] IUnknown** pRetVal);
        [id(0x6002000d), propputref]
        HRESULT DefaultPageSettings([in] IUnknown* pRetVal);
        [id(0x6002000f), propget]
        HRESULT documentName([out, retval] BSTR* pRetVal);
        [id(0x6002000f), propput]
        HRESULT documentName([in] BSTR pRetVal);
        [id(0x60020011), propget]
        HRESULT OriginAtMargins([out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020011), propput]
        HRESULT OriginAtMargins([in] VARIANT_BOOL pRetVal);
        [id(0x60020013), propget]
        HRESULT PrintController([out, retval] IUnknown** pRetVal);
        [id(0x60020013), propputref]
        HRESULT PrintController([in] IUnknown* pRetVal);
        [id(0x60020015), propget]
        HRESULT printerSettings([out, retval] IUnknown** pRetVal);
        [id(0x60020015), propputref]
        HRESULT printerSettings([in] IUnknown* pRetVal);
        [id(0x60020017)]
        HRESULT add_BeginPrint([in] IUnknown* value);
        [id(0x60020018)]
        HRESULT remove_BeginPrint([in] IUnknown* value);
        [id(0x60020019)]
        HRESULT add_EndPrint([in] IUnknown* value);
        [id(0x6002001a)]
        HRESULT remove_EndPrint([in] IUnknown* value);
        [id(0x6002001b)]
        HRESULT add_PrintPage([in] IUnknown* value);
        [id(0x6002001c)]
        HRESULT remove_PrintPage([in] IUnknown* value);
        [id(0x6002001d)]
        HRESULT add_QueryPageSettings([in] IUnknown* value);
        [id(0x6002001e)]
        HRESULT remove_QueryPageSettings([in] IUnknown* value);
        [id(0x6002001f)]
        HRESULT Print();
    };

    [
      odl,
      uuid(B6AA6265-85E8-3394-B337-A05DA6E36704),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.ComHelper)    

    ]
    interface _ComHelper : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT Open(
                        [in] BSTR fileName, 
                        [out, retval] _Document** pRetVal);
        [id(0x60020005),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Open)]
        HRESULT Open_2(
                        [in] _Stream* stream, 
                        [out, retval] _Document** pRetVal);
    };

    [
      odl,
      uuid(786D567A-E047-369D-A187-B9EEC5AF9B6D),
      hidden,
      dual,
      nonextensible,
      oleautomation,
      custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, Aspose.Words.License)    

    ]
    interface _License : IDispatch {
        [id(00000000), propget,
          custom(54FC8F55-38DE-4703-9C4E-250351302B1C, 1)]
        HRESULT ToString([out, retval] BSTR* pRetVal);
        [id(0x60020001)]
        HRESULT Equals(
                        [in] VARIANT obj, 
                        [out, retval] VARIANT_BOOL* pRetVal);
        [id(0x60020002)]
        HRESULT GetHashCode([out, retval] long* pRetVal);
        [id(0x60020003)]
        HRESULT GetType([out, retval] _Type** pRetVal);
        [id(0x60020004)]
        HRESULT SetLicense([in] BSTR licenseName);
        [id(0x60020005),
          custom(0F21F359-AB84-41E8-9A78-36D110E6D2F9, SetLicense)]
        HRESULT SetLicense_2([in] _Stream* stream);
    };
};
